// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fox.proto

#include "proto/fox.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace openfoxwq {
PROTOBUF_CONSTEXPR GetNavInfoRequest::GetNavInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_4_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_5_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_6_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_7_)*/int64_t{0}} {}
struct GetNavInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNavInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNavInfoRequestDefaultTypeInternal() {}
  union {
    GetNavInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNavInfoRequestDefaultTypeInternal _GetNavInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetNavInfoResponse::GetNavInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.line_info_)*/{}
  , /*decltype(_impl_.nav_host_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.game_presets_json_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.login_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.login_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_info_)*/nullptr
  , /*decltype(_impl_.nav_port_)*/int64_t{0}} {}
struct GetNavInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNavInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNavInfoResponseDefaultTypeInternal() {}
  union {
    GetNavInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNavInfoResponseDefaultTypeInternal _GetNavInfoResponse_default_instance_;
}  // namespace openfoxwq
static ::_pb::Metadata file_level_metadata_proto_2ffox_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2ffox_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2ffox_2eproto = nullptr;

const uint32_t TableStruct_proto_2ffox_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_.unknown_field_3_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_.unknown_field_4_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_.unknown_field_5_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_.unknown_field_6_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoRequest, _impl_.unknown_field_7_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.nav_host_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.nav_port_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.version_info_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.line_info_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.game_presets_json_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.login_msg_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::GetNavInfoResponse, _impl_.login_url_),
  0,
  5,
  4,
  ~0u,
  1,
  2,
  3,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, -1, sizeof(::openfoxwq::GetNavInfoRequest)},
  { 18, 31, -1, sizeof(::openfoxwq::GetNavInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::openfoxwq::_GetNavInfoRequest_default_instance_._instance,
  &::openfoxwq::_GetNavInfoResponse_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2ffox_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017proto/fox.proto\022\topenfoxwq\032\025proto/reqO"
  "ption.proto\032\022proto/common.proto\"\251\001\n\021GetN"
  "avInfoRequest\022\027\n\017unknown_field_1\030\001 \002(\003\022\027"
  "\n\017unknown_field_3\030\003 \002(\003\022\027\n\017unknown_field"
  "_4\030\004 \002(\003\022\027\n\017unknown_field_5\030\005 \002(\003\022\027\n\017unk"
  "nown_field_6\030\006 \002(\003\022\027\n\017unknown_field_7\030\007 "
  "\002(\003\"\324\001\n\022GetNavInfoResponse\022\020\n\010nav_host\030\002"
  " \002(\t\022\020\n\010nav_port\030\003 \002(\003\022,\n\014version_info\030\006"
  " \002(\0132\026.openfoxwq.VersionInfo\022+\n\tline_inf"
  "o\030\010 \003(\0132\030.openfoxwq.ProxyLineInfo\022\031\n\021gam"
  "e_presets_json\030\n \002(\t\022\021\n\tlogin_msg\030\r \002(\t\022"
  "\021\n\tlogin_url\030\016 \002(\t2\\\n\003Fox\022U\n\nGetNavInfo\022"
  "\034.openfoxwq.GetNavInfoRequest\032\035.openfoxw"
  "q.GetNavInfoResponse\"\n\202\265\030\006\010\350\007\020\351\007B%Z#gith"
  "ub.com/ale64bit/openfoxwq/proto"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2ffox_2eproto_deps[2] = {
  &::descriptor_table_proto_2fcommon_2eproto,
  &::descriptor_table_proto_2freqOption_2eproto,
};
static ::_pbi::once_flag descriptor_table_proto_2ffox_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2ffox_2eproto = {
    false, false, 591, descriptor_table_protodef_proto_2ffox_2eproto,
    "proto/fox.proto",
    &descriptor_table_proto_2ffox_2eproto_once, descriptor_table_proto_2ffox_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_proto_2ffox_2eproto::offsets,
    file_level_metadata_proto_2ffox_2eproto, file_level_enum_descriptors_proto_2ffox_2eproto,
    file_level_service_descriptors_proto_2ffox_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2ffox_2eproto_getter() {
  return &descriptor_table_proto_2ffox_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2ffox_2eproto(&descriptor_table_proto_2ffox_2eproto);
namespace openfoxwq {

// ===================================================================

class GetNavInfoRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetNavInfoRequest>()._impl_._has_bits_);
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_4(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_5(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_unknown_field_6(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_unknown_field_7(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000003f) ^ 0x0000003f) != 0;
  }
};

GetNavInfoRequest::GetNavInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.GetNavInfoRequest)
}
GetNavInfoRequest::GetNavInfoRequest(const GetNavInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNavInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_4_){}
    , decltype(_impl_.unknown_field_5_){}
    , decltype(_impl_.unknown_field_6_){}
    , decltype(_impl_.unknown_field_7_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_7_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.unknown_field_7_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.GetNavInfoRequest)
}

inline void GetNavInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
    , decltype(_impl_.unknown_field_4_){int64_t{0}}
    , decltype(_impl_.unknown_field_5_){int64_t{0}}
    , decltype(_impl_.unknown_field_6_){int64_t{0}}
    , decltype(_impl_.unknown_field_7_){int64_t{0}}
  };
}

GetNavInfoRequest::~GetNavInfoRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.GetNavInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNavInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetNavInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNavInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.GetNavInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_7_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.unknown_field_7_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNavInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_unknown_field_4(&has_bits);
          _impl_.unknown_field_4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_unknown_field_5(&has_bits);
          _impl_.unknown_field_5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_unknown_field_6(&has_bits);
          _impl_.unknown_field_6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_unknown_field_7(&has_bits);
          _impl_.unknown_field_7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNavInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.GetNavInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  // required int64 unknown_field_4 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_unknown_field_4(), target);
  }

  // required int64 unknown_field_5 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_unknown_field_5(), target);
  }

  // required int64 unknown_field_6 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_unknown_field_6(), target);
  }

  // required int64 unknown_field_7 = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_unknown_field_7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.GetNavInfoRequest)
  return target;
}

size_t GetNavInfoRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.GetNavInfoRequest)
  size_t total_size = 0;

  if (_internal_has_unknown_field_1()) {
    // required int64 unknown_field_1 = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  if (_internal_has_unknown_field_3()) {
    // required int64 unknown_field_3 = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
  }

  if (_internal_has_unknown_field_4()) {
    // required int64 unknown_field_4 = 4;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_4());
  }

  if (_internal_has_unknown_field_5()) {
    // required int64 unknown_field_5 = 5;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_5());
  }

  if (_internal_has_unknown_field_6()) {
    // required int64 unknown_field_6 = 6;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_6());
  }

  if (_internal_has_unknown_field_7()) {
    // required int64 unknown_field_7 = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_7());
  }

  return total_size;
}
size_t GetNavInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.GetNavInfoRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required int64 unknown_field_1 = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());

    // required int64 unknown_field_3 = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());

    // required int64 unknown_field_4 = 4;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_4());

    // required int64 unknown_field_5 = 5;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_5());

    // required int64 unknown_field_6 = 6;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_6());

    // required int64 unknown_field_7 = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_7());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNavInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNavInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNavInfoRequest::GetClassData() const { return &_class_data_; }


void GetNavInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNavInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetNavInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.GetNavInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_4_ = from._impl_.unknown_field_4_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.unknown_field_5_ = from._impl_.unknown_field_5_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.unknown_field_6_ = from._impl_.unknown_field_6_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.unknown_field_7_ = from._impl_.unknown_field_7_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNavInfoRequest::CopyFrom(const GetNavInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.GetNavInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNavInfoRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void GetNavInfoRequest::InternalSwap(GetNavInfoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetNavInfoRequest, _impl_.unknown_field_7_)
      + sizeof(GetNavInfoRequest::_impl_.unknown_field_7_)
      - PROTOBUF_FIELD_OFFSET(GetNavInfoRequest, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNavInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2ffox_2eproto_getter, &descriptor_table_proto_2ffox_2eproto_once,
      file_level_metadata_proto_2ffox_2eproto[0]);
}

// ===================================================================

class GetNavInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetNavInfoResponse>()._impl_._has_bits_);
  static void set_has_nav_host(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_nav_port(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::openfoxwq::VersionInfo& version_info(const GetNavInfoResponse* msg);
  static void set_has_version_info(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_game_presets_json(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_login_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_login_url(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000003f) ^ 0x0000003f) != 0;
  }
};

const ::openfoxwq::VersionInfo&
GetNavInfoResponse::_Internal::version_info(const GetNavInfoResponse* msg) {
  return *msg->_impl_.version_info_;
}
void GetNavInfoResponse::clear_version_info() {
  if (_impl_.version_info_ != nullptr) _impl_.version_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GetNavInfoResponse::clear_line_info() {
  _impl_.line_info_.Clear();
}
GetNavInfoResponse::GetNavInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.GetNavInfoResponse)
}
GetNavInfoResponse::GetNavInfoResponse(const GetNavInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetNavInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.line_info_){from._impl_.line_info_}
    , decltype(_impl_.nav_host_){}
    , decltype(_impl_.game_presets_json_){}
    , decltype(_impl_.login_msg_){}
    , decltype(_impl_.login_url_){}
    , decltype(_impl_.version_info_){nullptr}
    , decltype(_impl_.nav_port_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.nav_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nav_host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_nav_host()) {
    _this->_impl_.nav_host_.Set(from._internal_nav_host(), 
      _this->GetArenaForAllocation());
  }
  _impl_.game_presets_json_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.game_presets_json_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_game_presets_json()) {
    _this->_impl_.game_presets_json_.Set(from._internal_game_presets_json(), 
      _this->GetArenaForAllocation());
  }
  _impl_.login_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.login_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_login_msg()) {
    _this->_impl_.login_msg_.Set(from._internal_login_msg(), 
      _this->GetArenaForAllocation());
  }
  _impl_.login_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.login_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_login_url()) {
    _this->_impl_.login_url_.Set(from._internal_login_url(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_version_info()) {
    _this->_impl_.version_info_ = new ::openfoxwq::VersionInfo(*from._impl_.version_info_);
  }
  _this->_impl_.nav_port_ = from._impl_.nav_port_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.GetNavInfoResponse)
}

inline void GetNavInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.line_info_){arena}
    , decltype(_impl_.nav_host_){}
    , decltype(_impl_.game_presets_json_){}
    , decltype(_impl_.login_msg_){}
    , decltype(_impl_.login_url_){}
    , decltype(_impl_.version_info_){nullptr}
    , decltype(_impl_.nav_port_){int64_t{0}}
  };
  _impl_.nav_host_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nav_host_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.game_presets_json_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.game_presets_json_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.login_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.login_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.login_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.login_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetNavInfoResponse::~GetNavInfoResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.GetNavInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetNavInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.line_info_.~RepeatedPtrField();
  _impl_.nav_host_.Destroy();
  _impl_.game_presets_json_.Destroy();
  _impl_.login_msg_.Destroy();
  _impl_.login_url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.version_info_;
}

void GetNavInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetNavInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.GetNavInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.line_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.nav_host_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.game_presets_json_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.login_msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.login_url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.version_info_ != nullptr);
      _impl_.version_info_->Clear();
    }
  }
  _impl_.nav_port_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetNavInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required string nav_host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nav_host();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.GetNavInfoResponse.nav_host");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // required int64 nav_port = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_nav_port(&has_bits);
          _impl_.nav_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .openfoxwq.VersionInfo version_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_version_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .openfoxwq.ProxyLineInfo line_info = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_line_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // required string game_presets_json = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_game_presets_json();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.GetNavInfoResponse.game_presets_json");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // required string login_msg = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          auto str = _internal_mutable_login_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.GetNavInfoResponse.login_msg");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // required string login_url = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_login_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.GetNavInfoResponse.login_url");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetNavInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.GetNavInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string nav_host = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_nav_host().data(), static_cast<int>(this->_internal_nav_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.GetNavInfoResponse.nav_host");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nav_host(), target);
  }

  // required int64 nav_port = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_nav_port(), target);
  }

  // required .openfoxwq.VersionInfo version_info = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::version_info(this),
        _Internal::version_info(this).GetCachedSize(), target, stream);
  }

  // repeated .openfoxwq.ProxyLineInfo line_info = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_line_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_line_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // required string game_presets_json = 10;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_game_presets_json().data(), static_cast<int>(this->_internal_game_presets_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.GetNavInfoResponse.game_presets_json");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_game_presets_json(), target);
  }

  // required string login_msg = 13;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_login_msg().data(), static_cast<int>(this->_internal_login_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.GetNavInfoResponse.login_msg");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_login_msg(), target);
  }

  // required string login_url = 14;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_login_url().data(), static_cast<int>(this->_internal_login_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.GetNavInfoResponse.login_url");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_login_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.GetNavInfoResponse)
  return target;
}

size_t GetNavInfoResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.GetNavInfoResponse)
  size_t total_size = 0;

  if (_internal_has_nav_host()) {
    // required string nav_host = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nav_host());
  }

  if (_internal_has_game_presets_json()) {
    // required string game_presets_json = 10;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_game_presets_json());
  }

  if (_internal_has_login_msg()) {
    // required string login_msg = 13;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_msg());
  }

  if (_internal_has_login_url()) {
    // required string login_url = 14;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_url());
  }

  if (_internal_has_version_info()) {
    // required .openfoxwq.VersionInfo version_info = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.version_info_);
  }

  if (_internal_has_nav_port()) {
    // required int64 nav_port = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_nav_port());
  }

  return total_size;
}
size_t GetNavInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.GetNavInfoResponse)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string nav_host = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nav_host());

    // required string game_presets_json = 10;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_game_presets_json());

    // required string login_msg = 13;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_msg());

    // required string login_url = 14;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login_url());

    // required .openfoxwq.VersionInfo version_info = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.version_info_);

    // required int64 nav_port = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_nav_port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .openfoxwq.ProxyLineInfo line_info = 8;
  total_size += 1UL * this->_internal_line_info_size();
  for (const auto& msg : this->_impl_.line_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetNavInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetNavInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetNavInfoResponse::GetClassData() const { return &_class_data_; }


void GetNavInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetNavInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetNavInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.GetNavInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.line_info_.MergeFrom(from._impl_.line_info_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_nav_host(from._internal_nav_host());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_game_presets_json(from._internal_game_presets_json());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_login_msg(from._internal_login_msg());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_login_url(from._internal_login_url());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_version_info()->::openfoxwq::VersionInfo::MergeFrom(
          from._internal_version_info());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.nav_port_ = from._impl_.nav_port_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetNavInfoResponse::CopyFrom(const GetNavInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.GetNavInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNavInfoResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.line_info_))
    return false;
  if (_internal_has_version_info()) {
    if (!_impl_.version_info_->IsInitialized()) return false;
  }
  return true;
}

void GetNavInfoResponse::InternalSwap(GetNavInfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.line_info_.InternalSwap(&other->_impl_.line_info_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nav_host_, lhs_arena,
      &other->_impl_.nav_host_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.game_presets_json_, lhs_arena,
      &other->_impl_.game_presets_json_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.login_msg_, lhs_arena,
      &other->_impl_.login_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.login_url_, lhs_arena,
      &other->_impl_.login_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetNavInfoResponse, _impl_.nav_port_)
      + sizeof(GetNavInfoResponse::_impl_.nav_port_)
      - PROTOBUF_FIELD_OFFSET(GetNavInfoResponse, _impl_.version_info_)>(
          reinterpret_cast<char*>(&_impl_.version_info_),
          reinterpret_cast<char*>(&other->_impl_.version_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetNavInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2ffox_2eproto_getter, &descriptor_table_proto_2ffox_2eproto_once,
      file_level_metadata_proto_2ffox_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace openfoxwq
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::openfoxwq::GetNavInfoRequest*
Arena::CreateMaybeMessage< ::openfoxwq::GetNavInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::GetNavInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::GetNavInfoResponse*
Arena::CreateMaybeMessage< ::openfoxwq::GetNavInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::GetNavInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
