// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fox.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2ffox_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2ffox_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "proto/reqOption.pb.h"
#include "proto/common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2ffox_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2ffox_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2ffox_2eproto;
namespace openfoxwq {
class GetNavInfoRequest;
struct GetNavInfoRequestDefaultTypeInternal;
extern GetNavInfoRequestDefaultTypeInternal _GetNavInfoRequest_default_instance_;
class GetNavInfoResponse;
struct GetNavInfoResponseDefaultTypeInternal;
extern GetNavInfoResponseDefaultTypeInternal _GetNavInfoResponse_default_instance_;
}  // namespace openfoxwq
PROTOBUF_NAMESPACE_OPEN
template<> ::openfoxwq::GetNavInfoRequest* Arena::CreateMaybeMessage<::openfoxwq::GetNavInfoRequest>(Arena*);
template<> ::openfoxwq::GetNavInfoResponse* Arena::CreateMaybeMessage<::openfoxwq::GetNavInfoResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace openfoxwq {

// ===================================================================

class GetNavInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.GetNavInfoRequest) */ {
 public:
  inline GetNavInfoRequest() : GetNavInfoRequest(nullptr) {}
  ~GetNavInfoRequest() override;
  explicit PROTOBUF_CONSTEXPR GetNavInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetNavInfoRequest(const GetNavInfoRequest& from);
  GetNavInfoRequest(GetNavInfoRequest&& from) noexcept
    : GetNavInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetNavInfoRequest& operator=(const GetNavInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNavInfoRequest& operator=(GetNavInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNavInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNavInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetNavInfoRequest*>(
               &_GetNavInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetNavInfoRequest& a, GetNavInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetNavInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNavInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNavInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetNavInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetNavInfoRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetNavInfoRequest& from) {
    GetNavInfoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNavInfoRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.GetNavInfoRequest";
  }
  protected:
  explicit GetNavInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
    kUnknownField3FieldNumber = 3,
    kUnknownField4FieldNumber = 4,
    kUnknownField5FieldNumber = 5,
    kUnknownField6FieldNumber = 6,
    kUnknownField7FieldNumber = 7,
  };
  // required int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // required int64 unknown_field_3 = 3;
  bool has_unknown_field_3() const;
  private:
  bool _internal_has_unknown_field_3() const;
  public:
  void clear_unknown_field_3();
  int64_t unknown_field_3() const;
  void set_unknown_field_3(int64_t value);
  private:
  int64_t _internal_unknown_field_3() const;
  void _internal_set_unknown_field_3(int64_t value);
  public:

  // required int64 unknown_field_4 = 4;
  bool has_unknown_field_4() const;
  private:
  bool _internal_has_unknown_field_4() const;
  public:
  void clear_unknown_field_4();
  int64_t unknown_field_4() const;
  void set_unknown_field_4(int64_t value);
  private:
  int64_t _internal_unknown_field_4() const;
  void _internal_set_unknown_field_4(int64_t value);
  public:

  // required int64 unknown_field_5 = 5;
  bool has_unknown_field_5() const;
  private:
  bool _internal_has_unknown_field_5() const;
  public:
  void clear_unknown_field_5();
  int64_t unknown_field_5() const;
  void set_unknown_field_5(int64_t value);
  private:
  int64_t _internal_unknown_field_5() const;
  void _internal_set_unknown_field_5(int64_t value);
  public:

  // required int64 unknown_field_6 = 6;
  bool has_unknown_field_6() const;
  private:
  bool _internal_has_unknown_field_6() const;
  public:
  void clear_unknown_field_6();
  int64_t unknown_field_6() const;
  void set_unknown_field_6(int64_t value);
  private:
  int64_t _internal_unknown_field_6() const;
  void _internal_set_unknown_field_6(int64_t value);
  public:

  // required int64 unknown_field_7 = 7;
  bool has_unknown_field_7() const;
  private:
  bool _internal_has_unknown_field_7() const;
  public:
  void clear_unknown_field_7();
  int64_t unknown_field_7() const;
  void set_unknown_field_7(int64_t value);
  private:
  int64_t _internal_unknown_field_7() const;
  void _internal_set_unknown_field_7(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.GetNavInfoRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
    int64_t unknown_field_3_;
    int64_t unknown_field_4_;
    int64_t unknown_field_5_;
    int64_t unknown_field_6_;
    int64_t unknown_field_7_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffox_2eproto;
};
// -------------------------------------------------------------------

class GetNavInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.GetNavInfoResponse) */ {
 public:
  inline GetNavInfoResponse() : GetNavInfoResponse(nullptr) {}
  ~GetNavInfoResponse() override;
  explicit PROTOBUF_CONSTEXPR GetNavInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetNavInfoResponse(const GetNavInfoResponse& from);
  GetNavInfoResponse(GetNavInfoResponse&& from) noexcept
    : GetNavInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetNavInfoResponse& operator=(const GetNavInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNavInfoResponse& operator=(GetNavInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNavInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNavInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetNavInfoResponse*>(
               &_GetNavInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetNavInfoResponse& a, GetNavInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetNavInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNavInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNavInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetNavInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetNavInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetNavInfoResponse& from) {
    GetNavInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetNavInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.GetNavInfoResponse";
  }
  protected:
  explicit GetNavInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineInfoFieldNumber = 8,
    kNavHostFieldNumber = 2,
    kGamePresetsJsonFieldNumber = 10,
    kLoginMsgFieldNumber = 13,
    kLoginUrlFieldNumber = 14,
    kVersionInfoFieldNumber = 6,
    kNavPortFieldNumber = 3,
  };
  // repeated .openfoxwq.ProxyLineInfo line_info = 8;
  int line_info_size() const;
  private:
  int _internal_line_info_size() const;
  public:
  void clear_line_info();
  ::openfoxwq::ProxyLineInfo* mutable_line_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ProxyLineInfo >*
      mutable_line_info();
  private:
  const ::openfoxwq::ProxyLineInfo& _internal_line_info(int index) const;
  ::openfoxwq::ProxyLineInfo* _internal_add_line_info();
  public:
  const ::openfoxwq::ProxyLineInfo& line_info(int index) const;
  ::openfoxwq::ProxyLineInfo* add_line_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ProxyLineInfo >&
      line_info() const;

  // required string nav_host = 2;
  bool has_nav_host() const;
  private:
  bool _internal_has_nav_host() const;
  public:
  void clear_nav_host();
  const std::string& nav_host() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_nav_host(ArgT0&& arg0, ArgT... args);
  std::string* mutable_nav_host();
  PROTOBUF_NODISCARD std::string* release_nav_host();
  void set_allocated_nav_host(std::string* nav_host);
  private:
  const std::string& _internal_nav_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nav_host(const std::string& value);
  std::string* _internal_mutable_nav_host();
  public:

  // required string game_presets_json = 10;
  bool has_game_presets_json() const;
  private:
  bool _internal_has_game_presets_json() const;
  public:
  void clear_game_presets_json();
  const std::string& game_presets_json() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_game_presets_json(ArgT0&& arg0, ArgT... args);
  std::string* mutable_game_presets_json();
  PROTOBUF_NODISCARD std::string* release_game_presets_json();
  void set_allocated_game_presets_json(std::string* game_presets_json);
  private:
  const std::string& _internal_game_presets_json() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_game_presets_json(const std::string& value);
  std::string* _internal_mutable_game_presets_json();
  public:

  // required string login_msg = 13;
  bool has_login_msg() const;
  private:
  bool _internal_has_login_msg() const;
  public:
  void clear_login_msg();
  const std::string& login_msg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_login_msg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_login_msg();
  PROTOBUF_NODISCARD std::string* release_login_msg();
  void set_allocated_login_msg(std::string* login_msg);
  private:
  const std::string& _internal_login_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_login_msg(const std::string& value);
  std::string* _internal_mutable_login_msg();
  public:

  // required string login_url = 14;
  bool has_login_url() const;
  private:
  bool _internal_has_login_url() const;
  public:
  void clear_login_url();
  const std::string& login_url() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_login_url(ArgT0&& arg0, ArgT... args);
  std::string* mutable_login_url();
  PROTOBUF_NODISCARD std::string* release_login_url();
  void set_allocated_login_url(std::string* login_url);
  private:
  const std::string& _internal_login_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_login_url(const std::string& value);
  std::string* _internal_mutable_login_url();
  public:

  // required .openfoxwq.VersionInfo version_info = 6;
  bool has_version_info() const;
  private:
  bool _internal_has_version_info() const;
  public:
  void clear_version_info();
  const ::openfoxwq::VersionInfo& version_info() const;
  PROTOBUF_NODISCARD ::openfoxwq::VersionInfo* release_version_info();
  ::openfoxwq::VersionInfo* mutable_version_info();
  void set_allocated_version_info(::openfoxwq::VersionInfo* version_info);
  private:
  const ::openfoxwq::VersionInfo& _internal_version_info() const;
  ::openfoxwq::VersionInfo* _internal_mutable_version_info();
  public:
  void unsafe_arena_set_allocated_version_info(
      ::openfoxwq::VersionInfo* version_info);
  ::openfoxwq::VersionInfo* unsafe_arena_release_version_info();

  // required int64 nav_port = 3;
  bool has_nav_port() const;
  private:
  bool _internal_has_nav_port() const;
  public:
  void clear_nav_port();
  int64_t nav_port() const;
  void set_nav_port(int64_t value);
  private:
  int64_t _internal_nav_port() const;
  void _internal_set_nav_port(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.GetNavInfoResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ProxyLineInfo > line_info_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nav_host_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_presets_json_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr login_msg_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr login_url_;
    ::openfoxwq::VersionInfo* version_info_;
    int64_t nav_port_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2ffox_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetNavInfoRequest

// required int64 unknown_field_1 = 1;
inline bool GetNavInfoRequest::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetNavInfoRequest::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void GetNavInfoRequest::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t GetNavInfoRequest::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t GetNavInfoRequest::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoRequest.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void GetNavInfoRequest::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void GetNavInfoRequest::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoRequest.unknown_field_1)
}

// required int64 unknown_field_3 = 3;
inline bool GetNavInfoRequest::_internal_has_unknown_field_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetNavInfoRequest::has_unknown_field_3() const {
  return _internal_has_unknown_field_3();
}
inline void GetNavInfoRequest::clear_unknown_field_3() {
  _impl_.unknown_field_3_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t GetNavInfoRequest::_internal_unknown_field_3() const {
  return _impl_.unknown_field_3_;
}
inline int64_t GetNavInfoRequest::unknown_field_3() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoRequest.unknown_field_3)
  return _internal_unknown_field_3();
}
inline void GetNavInfoRequest::_internal_set_unknown_field_3(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unknown_field_3_ = value;
}
inline void GetNavInfoRequest::set_unknown_field_3(int64_t value) {
  _internal_set_unknown_field_3(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoRequest.unknown_field_3)
}

// required int64 unknown_field_4 = 4;
inline bool GetNavInfoRequest::_internal_has_unknown_field_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetNavInfoRequest::has_unknown_field_4() const {
  return _internal_has_unknown_field_4();
}
inline void GetNavInfoRequest::clear_unknown_field_4() {
  _impl_.unknown_field_4_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t GetNavInfoRequest::_internal_unknown_field_4() const {
  return _impl_.unknown_field_4_;
}
inline int64_t GetNavInfoRequest::unknown_field_4() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoRequest.unknown_field_4)
  return _internal_unknown_field_4();
}
inline void GetNavInfoRequest::_internal_set_unknown_field_4(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.unknown_field_4_ = value;
}
inline void GetNavInfoRequest::set_unknown_field_4(int64_t value) {
  _internal_set_unknown_field_4(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoRequest.unknown_field_4)
}

// required int64 unknown_field_5 = 5;
inline bool GetNavInfoRequest::_internal_has_unknown_field_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GetNavInfoRequest::has_unknown_field_5() const {
  return _internal_has_unknown_field_5();
}
inline void GetNavInfoRequest::clear_unknown_field_5() {
  _impl_.unknown_field_5_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t GetNavInfoRequest::_internal_unknown_field_5() const {
  return _impl_.unknown_field_5_;
}
inline int64_t GetNavInfoRequest::unknown_field_5() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoRequest.unknown_field_5)
  return _internal_unknown_field_5();
}
inline void GetNavInfoRequest::_internal_set_unknown_field_5(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.unknown_field_5_ = value;
}
inline void GetNavInfoRequest::set_unknown_field_5(int64_t value) {
  _internal_set_unknown_field_5(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoRequest.unknown_field_5)
}

// required int64 unknown_field_6 = 6;
inline bool GetNavInfoRequest::_internal_has_unknown_field_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool GetNavInfoRequest::has_unknown_field_6() const {
  return _internal_has_unknown_field_6();
}
inline void GetNavInfoRequest::clear_unknown_field_6() {
  _impl_.unknown_field_6_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int64_t GetNavInfoRequest::_internal_unknown_field_6() const {
  return _impl_.unknown_field_6_;
}
inline int64_t GetNavInfoRequest::unknown_field_6() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoRequest.unknown_field_6)
  return _internal_unknown_field_6();
}
inline void GetNavInfoRequest::_internal_set_unknown_field_6(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.unknown_field_6_ = value;
}
inline void GetNavInfoRequest::set_unknown_field_6(int64_t value) {
  _internal_set_unknown_field_6(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoRequest.unknown_field_6)
}

// required int64 unknown_field_7 = 7;
inline bool GetNavInfoRequest::_internal_has_unknown_field_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool GetNavInfoRequest::has_unknown_field_7() const {
  return _internal_has_unknown_field_7();
}
inline void GetNavInfoRequest::clear_unknown_field_7() {
  _impl_.unknown_field_7_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int64_t GetNavInfoRequest::_internal_unknown_field_7() const {
  return _impl_.unknown_field_7_;
}
inline int64_t GetNavInfoRequest::unknown_field_7() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoRequest.unknown_field_7)
  return _internal_unknown_field_7();
}
inline void GetNavInfoRequest::_internal_set_unknown_field_7(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.unknown_field_7_ = value;
}
inline void GetNavInfoRequest::set_unknown_field_7(int64_t value) {
  _internal_set_unknown_field_7(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoRequest.unknown_field_7)
}

// -------------------------------------------------------------------

// GetNavInfoResponse

// required string nav_host = 2;
inline bool GetNavInfoResponse::_internal_has_nav_host() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetNavInfoResponse::has_nav_host() const {
  return _internal_has_nav_host();
}
inline void GetNavInfoResponse::clear_nav_host() {
  _impl_.nav_host_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetNavInfoResponse::nav_host() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.nav_host)
  return _internal_nav_host();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetNavInfoResponse::set_nav_host(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.nav_host_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoResponse.nav_host)
}
inline std::string* GetNavInfoResponse::mutable_nav_host() {
  std::string* _s = _internal_mutable_nav_host();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetNavInfoResponse.nav_host)
  return _s;
}
inline const std::string& GetNavInfoResponse::_internal_nav_host() const {
  return _impl_.nav_host_.Get();
}
inline void GetNavInfoResponse::_internal_set_nav_host(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nav_host_.Set(value, GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::_internal_mutable_nav_host() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nav_host_.Mutable(GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::release_nav_host() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetNavInfoResponse.nav_host)
  if (!_internal_has_nav_host()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.nav_host_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.nav_host_.IsDefault()) {
    _impl_.nav_host_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetNavInfoResponse::set_allocated_nav_host(std::string* nav_host) {
  if (nav_host != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nav_host_.SetAllocated(nav_host, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.nav_host_.IsDefault()) {
    _impl_.nav_host_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetNavInfoResponse.nav_host)
}

// required int64 nav_port = 3;
inline bool GetNavInfoResponse::_internal_has_nav_port() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool GetNavInfoResponse::has_nav_port() const {
  return _internal_has_nav_port();
}
inline void GetNavInfoResponse::clear_nav_port() {
  _impl_.nav_port_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int64_t GetNavInfoResponse::_internal_nav_port() const {
  return _impl_.nav_port_;
}
inline int64_t GetNavInfoResponse::nav_port() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.nav_port)
  return _internal_nav_port();
}
inline void GetNavInfoResponse::_internal_set_nav_port(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.nav_port_ = value;
}
inline void GetNavInfoResponse::set_nav_port(int64_t value) {
  _internal_set_nav_port(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoResponse.nav_port)
}

// required .openfoxwq.VersionInfo version_info = 6;
inline bool GetNavInfoResponse::_internal_has_version_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_info_ != nullptr);
  return value;
}
inline bool GetNavInfoResponse::has_version_info() const {
  return _internal_has_version_info();
}
inline const ::openfoxwq::VersionInfo& GetNavInfoResponse::_internal_version_info() const {
  const ::openfoxwq::VersionInfo* p = _impl_.version_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::openfoxwq::VersionInfo&>(
      ::openfoxwq::_VersionInfo_default_instance_);
}
inline const ::openfoxwq::VersionInfo& GetNavInfoResponse::version_info() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.version_info)
  return _internal_version_info();
}
inline void GetNavInfoResponse::unsafe_arena_set_allocated_version_info(
    ::openfoxwq::VersionInfo* version_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.version_info_);
  }
  _impl_.version_info_ = version_info;
  if (version_info) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openfoxwq.GetNavInfoResponse.version_info)
}
inline ::openfoxwq::VersionInfo* GetNavInfoResponse::release_version_info() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::openfoxwq::VersionInfo* temp = _impl_.version_info_;
  _impl_.version_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::openfoxwq::VersionInfo* GetNavInfoResponse::unsafe_arena_release_version_info() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetNavInfoResponse.version_info)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::openfoxwq::VersionInfo* temp = _impl_.version_info_;
  _impl_.version_info_ = nullptr;
  return temp;
}
inline ::openfoxwq::VersionInfo* GetNavInfoResponse::_internal_mutable_version_info() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.version_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::openfoxwq::VersionInfo>(GetArenaForAllocation());
    _impl_.version_info_ = p;
  }
  return _impl_.version_info_;
}
inline ::openfoxwq::VersionInfo* GetNavInfoResponse::mutable_version_info() {
  ::openfoxwq::VersionInfo* _msg = _internal_mutable_version_info();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetNavInfoResponse.version_info)
  return _msg;
}
inline void GetNavInfoResponse::set_allocated_version_info(::openfoxwq::VersionInfo* version_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.version_info_);
  }
  if (version_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(version_info));
    if (message_arena != submessage_arena) {
      version_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, version_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.version_info_ = version_info;
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetNavInfoResponse.version_info)
}

// repeated .openfoxwq.ProxyLineInfo line_info = 8;
inline int GetNavInfoResponse::_internal_line_info_size() const {
  return _impl_.line_info_.size();
}
inline int GetNavInfoResponse::line_info_size() const {
  return _internal_line_info_size();
}
inline ::openfoxwq::ProxyLineInfo* GetNavInfoResponse::mutable_line_info(int index) {
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetNavInfoResponse.line_info)
  return _impl_.line_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ProxyLineInfo >*
GetNavInfoResponse::mutable_line_info() {
  // @@protoc_insertion_point(field_mutable_list:openfoxwq.GetNavInfoResponse.line_info)
  return &_impl_.line_info_;
}
inline const ::openfoxwq::ProxyLineInfo& GetNavInfoResponse::_internal_line_info(int index) const {
  return _impl_.line_info_.Get(index);
}
inline const ::openfoxwq::ProxyLineInfo& GetNavInfoResponse::line_info(int index) const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.line_info)
  return _internal_line_info(index);
}
inline ::openfoxwq::ProxyLineInfo* GetNavInfoResponse::_internal_add_line_info() {
  return _impl_.line_info_.Add();
}
inline ::openfoxwq::ProxyLineInfo* GetNavInfoResponse::add_line_info() {
  ::openfoxwq::ProxyLineInfo* _add = _internal_add_line_info();
  // @@protoc_insertion_point(field_add:openfoxwq.GetNavInfoResponse.line_info)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ProxyLineInfo >&
GetNavInfoResponse::line_info() const {
  // @@protoc_insertion_point(field_list:openfoxwq.GetNavInfoResponse.line_info)
  return _impl_.line_info_;
}

// required string game_presets_json = 10;
inline bool GetNavInfoResponse::_internal_has_game_presets_json() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetNavInfoResponse::has_game_presets_json() const {
  return _internal_has_game_presets_json();
}
inline void GetNavInfoResponse::clear_game_presets_json() {
  _impl_.game_presets_json_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetNavInfoResponse::game_presets_json() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.game_presets_json)
  return _internal_game_presets_json();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetNavInfoResponse::set_game_presets_json(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.game_presets_json_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoResponse.game_presets_json)
}
inline std::string* GetNavInfoResponse::mutable_game_presets_json() {
  std::string* _s = _internal_mutable_game_presets_json();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetNavInfoResponse.game_presets_json)
  return _s;
}
inline const std::string& GetNavInfoResponse::_internal_game_presets_json() const {
  return _impl_.game_presets_json_.Get();
}
inline void GetNavInfoResponse::_internal_set_game_presets_json(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.game_presets_json_.Set(value, GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::_internal_mutable_game_presets_json() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.game_presets_json_.Mutable(GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::release_game_presets_json() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetNavInfoResponse.game_presets_json)
  if (!_internal_has_game_presets_json()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.game_presets_json_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.game_presets_json_.IsDefault()) {
    _impl_.game_presets_json_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetNavInfoResponse::set_allocated_game_presets_json(std::string* game_presets_json) {
  if (game_presets_json != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.game_presets_json_.SetAllocated(game_presets_json, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.game_presets_json_.IsDefault()) {
    _impl_.game_presets_json_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetNavInfoResponse.game_presets_json)
}

// required string login_msg = 13;
inline bool GetNavInfoResponse::_internal_has_login_msg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetNavInfoResponse::has_login_msg() const {
  return _internal_has_login_msg();
}
inline void GetNavInfoResponse::clear_login_msg() {
  _impl_.login_msg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GetNavInfoResponse::login_msg() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.login_msg)
  return _internal_login_msg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetNavInfoResponse::set_login_msg(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.login_msg_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoResponse.login_msg)
}
inline std::string* GetNavInfoResponse::mutable_login_msg() {
  std::string* _s = _internal_mutable_login_msg();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetNavInfoResponse.login_msg)
  return _s;
}
inline const std::string& GetNavInfoResponse::_internal_login_msg() const {
  return _impl_.login_msg_.Get();
}
inline void GetNavInfoResponse::_internal_set_login_msg(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.login_msg_.Set(value, GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::_internal_mutable_login_msg() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.login_msg_.Mutable(GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::release_login_msg() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetNavInfoResponse.login_msg)
  if (!_internal_has_login_msg()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.login_msg_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.login_msg_.IsDefault()) {
    _impl_.login_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetNavInfoResponse::set_allocated_login_msg(std::string* login_msg) {
  if (login_msg != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.login_msg_.SetAllocated(login_msg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.login_msg_.IsDefault()) {
    _impl_.login_msg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetNavInfoResponse.login_msg)
}

// required string login_url = 14;
inline bool GetNavInfoResponse::_internal_has_login_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GetNavInfoResponse::has_login_url() const {
  return _internal_has_login_url();
}
inline void GetNavInfoResponse::clear_login_url() {
  _impl_.login_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& GetNavInfoResponse::login_url() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetNavInfoResponse.login_url)
  return _internal_login_url();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetNavInfoResponse::set_login_url(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000008u;
 _impl_.login_url_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.GetNavInfoResponse.login_url)
}
inline std::string* GetNavInfoResponse::mutable_login_url() {
  std::string* _s = _internal_mutable_login_url();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetNavInfoResponse.login_url)
  return _s;
}
inline const std::string& GetNavInfoResponse::_internal_login_url() const {
  return _impl_.login_url_.Get();
}
inline void GetNavInfoResponse::_internal_set_login_url(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.login_url_.Set(value, GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::_internal_mutable_login_url() {
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.login_url_.Mutable(GetArenaForAllocation());
}
inline std::string* GetNavInfoResponse::release_login_url() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetNavInfoResponse.login_url)
  if (!_internal_has_login_url()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* p = _impl_.login_url_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.login_url_.IsDefault()) {
    _impl_.login_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetNavInfoResponse::set_allocated_login_url(std::string* login_url) {
  if (login_url != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.login_url_.SetAllocated(login_url, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.login_url_.IsDefault()) {
    _impl_.login_url_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetNavInfoResponse.login_url)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openfoxwq

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2ffox_2eproto
