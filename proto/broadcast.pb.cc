// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/broadcast.proto

#include "proto/broadcast.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace openfoxwq {
PROTOBUF_CONSTEXPR LoginBroadcastServerRequest::LoginBroadcastServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.mac_address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_6_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_7_)*/int64_t{0}} {}
struct LoginBroadcastServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginBroadcastServerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginBroadcastServerRequestDefaultTypeInternal() {}
  union {
    LoginBroadcastServerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginBroadcastServerRequestDefaultTypeInternal _LoginBroadcastServerRequest_default_instance_;
PROTOBUF_CONSTEXPR LoginBroadcastServerResponse::LoginBroadcastServerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_3_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct LoginBroadcastServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginBroadcastServerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginBroadcastServerResponseDefaultTypeInternal() {}
  union {
    LoginBroadcastServerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginBroadcastServerResponseDefaultTypeInternal _LoginBroadcastServerResponse_default_instance_;
PROTOBUF_CONSTEXPR ListBroadcastsRequest::ListBroadcastsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}} {}
struct ListBroadcastsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBroadcastsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBroadcastsRequestDefaultTypeInternal() {}
  union {
    ListBroadcastsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBroadcastsRequestDefaultTypeInternal _ListBroadcastsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListBroadcastsResponse::ListBroadcastsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.broadcasts_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.page_index_)*/int64_t{0}
  , /*decltype(_impl_.page_count_)*/int64_t{0}} {}
struct ListBroadcastsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBroadcastsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBroadcastsResponseDefaultTypeInternal() {}
  union {
    ListBroadcastsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBroadcastsResponseDefaultTypeInternal _ListBroadcastsResponse_default_instance_;
PROTOBUF_CONSTEXPR EnterBroadcastRequest::EnterBroadcastRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}} {}
struct EnterBroadcastRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterBroadcastRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterBroadcastRequestDefaultTypeInternal() {}
  union {
    EnterBroadcastRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterBroadcastRequestDefaultTypeInternal _EnterBroadcastRequest_default_instance_;
PROTOBUF_CONSTEXPR EnterBroadcastResponse::EnterBroadcastResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}} {}
struct EnterBroadcastResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterBroadcastResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterBroadcastResponseDefaultTypeInternal() {}
  union {
    EnterBroadcastResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterBroadcastResponseDefaultTypeInternal _EnterBroadcastResponse_default_instance_;
PROTOBUF_CONSTEXPR LeaveBroadcastRequest::LeaveBroadcastRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}} {}
struct LeaveBroadcastRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveBroadcastRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveBroadcastRequestDefaultTypeInternal() {}
  union {
    LeaveBroadcastRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveBroadcastRequestDefaultTypeInternal _LeaveBroadcastRequest_default_instance_;
PROTOBUF_CONSTEXPR LeaveBroadcastResponse::LeaveBroadcastResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}} {}
struct LeaveBroadcastResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveBroadcastResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveBroadcastResponseDefaultTypeInternal() {}
  union {
    LeaveBroadcastResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveBroadcastResponseDefaultTypeInternal _LeaveBroadcastResponse_default_instance_;
PROTOBUF_CONSTEXPR HeartbeatRequest::HeartbeatRequest(
    ::_pbi::ConstantInitialized) {}
struct HeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatRequestDefaultTypeInternal() {}
  union {
    HeartbeatRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;
PROTOBUF_CONSTEXPR BroadcastSettingEvent::BroadcastSettingEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.match_settings_)*/nullptr
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}
  , /*decltype(_impl_.player_id_black_)*/int64_t{0}
  , /*decltype(_impl_.player_id_white_)*/int64_t{0}} {}
struct BroadcastSettingEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastSettingEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastSettingEventDefaultTypeInternal() {}
  union {
    BroadcastSettingEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastSettingEventDefaultTypeInternal _BroadcastSettingEvent_default_instance_;
PROTOBUF_CONSTEXPR BroadcastStateEvent_BroadcastState::BroadcastStateEvent_BroadcastState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.encoded_moves_)*/{}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}} {}
struct BroadcastStateEvent_BroadcastStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastStateEvent_BroadcastStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastStateEvent_BroadcastStateDefaultTypeInternal() {}
  union {
    BroadcastStateEvent_BroadcastState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastStateEvent_BroadcastStateDefaultTypeInternal _BroadcastStateEvent_BroadcastState_default_instance_;
PROTOBUF_CONSTEXPR BroadcastStateEvent::BroadcastStateEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.state_)*/nullptr
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}
  , /*decltype(_impl_.move_count_)*/int64_t{0}} {}
struct BroadcastStateEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastStateEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastStateEventDefaultTypeInternal() {}
  union {
    BroadcastStateEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastStateEventDefaultTypeInternal _BroadcastStateEvent_default_instance_;
PROTOBUF_CONSTEXPR BroadcastMoveEvent::BroadcastMoveEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}
  , /*decltype(_impl_.encoded_move_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_5_)*/int64_t{0}
  , /*decltype(_impl_.time_left_)*/int64_t{0}
  , /*decltype(_impl_.move_number_)*/int64_t{0}} {}
struct BroadcastMoveEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastMoveEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastMoveEventDefaultTypeInternal() {}
  union {
    BroadcastMoveEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastMoveEventDefaultTypeInternal _BroadcastMoveEvent_default_instance_;
PROTOBUF_CONSTEXPR BroadcastGameResultEvent::BroadcastGameResultEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}
  , /*decltype(_impl_.score_lead_)*/int64_t{0}
  , /*decltype(_impl_.winner_)*/0} {}
struct BroadcastGameResultEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastGameResultEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastGameResultEventDefaultTypeInternal() {}
  union {
    BroadcastGameResultEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastGameResultEventDefaultTypeInternal _BroadcastGameResultEvent_default_instance_;
PROTOBUF_CONSTEXPR BroadcastTimeControlEvent::BroadcastTimeControlEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.broadcast_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_4_)*/int64_t{0}
  , /*decltype(_impl_.current_period_)*/int64_t{0}
  , /*decltype(_impl_.time_left_)*/int64_t{0}} {}
struct BroadcastTimeControlEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadcastTimeControlEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadcastTimeControlEventDefaultTypeInternal() {}
  union {
    BroadcastTimeControlEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadcastTimeControlEventDefaultTypeInternal _BroadcastTimeControlEvent_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest1::UnknownRequest1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownRequest1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest1DefaultTypeInternal() {}
  union {
    UnknownRequest1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest1DefaultTypeInternal _UnknownRequest1_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest2::UnknownRequest2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}} {}
struct UnknownRequest2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest2DefaultTypeInternal() {}
  union {
    UnknownRequest2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest2DefaultTypeInternal _UnknownRequest2_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest3::UnknownRequest3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest3DefaultTypeInternal() {}
  union {
    UnknownRequest3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest3DefaultTypeInternal _UnknownRequest3_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest4::UnknownRequest4(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_10_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_30_)*/int64_t{0}} {}
struct UnknownRequest4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest4DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest4DefaultTypeInternal() {}
  union {
    UnknownRequest4 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest4DefaultTypeInternal _UnknownRequest4_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest5::UnknownRequest5(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest5DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest5DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest5DefaultTypeInternal() {}
  union {
    UnknownRequest5 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest5DefaultTypeInternal _UnknownRequest5_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest6::UnknownRequest6(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest6DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest6DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest6DefaultTypeInternal() {}
  union {
    UnknownRequest6 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest6DefaultTypeInternal _UnknownRequest6_default_instance_;
PROTOBUF_CONSTEXPR UnknownResponse6::UnknownResponse6(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownResponse6DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownResponse6DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownResponse6DefaultTypeInternal() {}
  union {
    UnknownResponse6 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownResponse6DefaultTypeInternal _UnknownResponse6_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest7::UnknownRequest7(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest7DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest7DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest7DefaultTypeInternal() {}
  union {
    UnknownRequest7 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest7DefaultTypeInternal _UnknownRequest7_default_instance_;
PROTOBUF_CONSTEXPR UnknownResponse7::UnknownResponse7(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownResponse7DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownResponse7DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownResponse7DefaultTypeInternal() {}
  union {
    UnknownResponse7 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownResponse7DefaultTypeInternal _UnknownResponse7_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest8::UnknownRequest8(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest8DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest8DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest8DefaultTypeInternal() {}
  union {
    UnknownRequest8 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest8DefaultTypeInternal _UnknownRequest8_default_instance_;
PROTOBUF_CONSTEXPR UnknownResponse8::UnknownResponse8(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownResponse8DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownResponse8DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownResponse8DefaultTypeInternal() {}
  union {
    UnknownResponse8 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownResponse8DefaultTypeInternal _UnknownResponse8_default_instance_;
}  // namespace openfoxwq
static ::_pb::Metadata file_level_metadata_proto_2fbroadcast_2eproto[26];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2fbroadcast_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2fbroadcast_2eproto = nullptr;

const uint32_t TableStruct_proto_2fbroadcast_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.mac_address_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_3_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_6_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_7_),
  2,
  3,
  0,
  1,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_.unknown_field_3_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsRequest, _impl_.unknown_field_2_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsRequest, _impl_.unknown_field_3_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsResponse, _impl_.broadcasts_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsResponse, _impl_.page_index_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsResponse, _impl_.page_count_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListBroadcastsResponse, _impl_.unknown_field_1_),
  ~0u,
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastRequest, _impl_.broadcast_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastResponse, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastResponse, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterBroadcastResponse, _impl_.unknown_field_1_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastRequest, _impl_.broadcast_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastResponse, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastResponse, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveBroadcastResponse, _impl_.unknown_field_1_),
  1,
  2,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _impl_.player_id_black_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _impl_.player_id_white_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastSettingEvent, _impl_.match_settings_),
  1,
  3,
  4,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent_BroadcastState, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent_BroadcastState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent_BroadcastState, _impl_.encoded_moves_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent_BroadcastState, _impl_.unknown_field_2_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent_BroadcastState, _impl_.unknown_field_3_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastStateEvent, _impl_.move_count_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_.encoded_move_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_.time_left_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_.move_number_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastMoveEvent, _impl_.unknown_field_5_),
  0,
  1,
  2,
  4,
  5,
  3,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _impl_.winner_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _impl_.score_lead_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastGameResultEvent, _impl_.unknown_field_2_),
  2,
  4,
  3,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _impl_.broadcast_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _impl_.current_period_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _impl_.time_left_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::BroadcastTimeControlEvent, _impl_.unknown_field_4_),
  0,
  1,
  3,
  4,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _impl_.unknown_field_2_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_.unknown_field_2_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_.unknown_field_3_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest3, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest3, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_.unknown_field_10_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_.unknown_field_30_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest5, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest5, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest5, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest6, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest6, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _impl_.unknown_field_2_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest7, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest7, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _impl_.unknown_field_2_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest8, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest8, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _impl_.unknown_field_2_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, -1, sizeof(::openfoxwq::LoginBroadcastServerRequest)},
  { 20, 29, -1, sizeof(::openfoxwq::LoginBroadcastServerResponse)},
  { 32, 41, -1, sizeof(::openfoxwq::ListBroadcastsRequest)},
  { 44, 54, -1, sizeof(::openfoxwq::ListBroadcastsResponse)},
  { 58, 66, -1, sizeof(::openfoxwq::EnterBroadcastRequest)},
  { 68, 77, -1, sizeof(::openfoxwq::EnterBroadcastResponse)},
  { 80, 88, -1, sizeof(::openfoxwq::LeaveBroadcastRequest)},
  { 90, 99, -1, sizeof(::openfoxwq::LeaveBroadcastResponse)},
  { 102, -1, -1, sizeof(::openfoxwq::HeartbeatRequest)},
  { 108, 119, -1, sizeof(::openfoxwq::BroadcastSettingEvent)},
  { 124, 133, -1, sizeof(::openfoxwq::BroadcastStateEvent_BroadcastState)},
  { 136, 146, -1, sizeof(::openfoxwq::BroadcastStateEvent)},
  { 150, 162, -1, sizeof(::openfoxwq::BroadcastMoveEvent)},
  { 168, 179, -1, sizeof(::openfoxwq::BroadcastGameResultEvent)},
  { 184, 195, -1, sizeof(::openfoxwq::BroadcastTimeControlEvent)},
  { 200, 208, -1, sizeof(::openfoxwq::UnknownRequest1)},
  { 210, 219, -1, sizeof(::openfoxwq::UnknownRequest2)},
  { 222, 229, -1, sizeof(::openfoxwq::UnknownRequest3)},
  { 230, 239, -1, sizeof(::openfoxwq::UnknownRequest4)},
  { 242, 249, -1, sizeof(::openfoxwq::UnknownRequest5)},
  { 250, 257, -1, sizeof(::openfoxwq::UnknownRequest6)},
  { 258, 266, -1, sizeof(::openfoxwq::UnknownResponse6)},
  { 268, 275, -1, sizeof(::openfoxwq::UnknownRequest7)},
  { 276, 284, -1, sizeof(::openfoxwq::UnknownResponse7)},
  { 286, 293, -1, sizeof(::openfoxwq::UnknownRequest8)},
  { 294, 302, -1, sizeof(::openfoxwq::UnknownResponse8)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::openfoxwq::_LoginBroadcastServerRequest_default_instance_._instance,
  &::openfoxwq::_LoginBroadcastServerResponse_default_instance_._instance,
  &::openfoxwq::_ListBroadcastsRequest_default_instance_._instance,
  &::openfoxwq::_ListBroadcastsResponse_default_instance_._instance,
  &::openfoxwq::_EnterBroadcastRequest_default_instance_._instance,
  &::openfoxwq::_EnterBroadcastResponse_default_instance_._instance,
  &::openfoxwq::_LeaveBroadcastRequest_default_instance_._instance,
  &::openfoxwq::_LeaveBroadcastResponse_default_instance_._instance,
  &::openfoxwq::_HeartbeatRequest_default_instance_._instance,
  &::openfoxwq::_BroadcastSettingEvent_default_instance_._instance,
  &::openfoxwq::_BroadcastStateEvent_BroadcastState_default_instance_._instance,
  &::openfoxwq::_BroadcastStateEvent_default_instance_._instance,
  &::openfoxwq::_BroadcastMoveEvent_default_instance_._instance,
  &::openfoxwq::_BroadcastGameResultEvent_default_instance_._instance,
  &::openfoxwq::_BroadcastTimeControlEvent_default_instance_._instance,
  &::openfoxwq::_UnknownRequest1_default_instance_._instance,
  &::openfoxwq::_UnknownRequest2_default_instance_._instance,
  &::openfoxwq::_UnknownRequest3_default_instance_._instance,
  &::openfoxwq::_UnknownRequest4_default_instance_._instance,
  &::openfoxwq::_UnknownRequest5_default_instance_._instance,
  &::openfoxwq::_UnknownRequest6_default_instance_._instance,
  &::openfoxwq::_UnknownResponse6_default_instance_._instance,
  &::openfoxwq::_UnknownRequest7_default_instance_._instance,
  &::openfoxwq::_UnknownResponse7_default_instance_._instance,
  &::openfoxwq::_UnknownRequest8_default_instance_._instance,
  &::openfoxwq::_UnknownResponse8_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2fbroadcast_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025proto/broadcast.proto\022\topenfoxwq\032\033goog"
  "le/protobuf/empty.proto\032\025proto/reqOption"
  ".proto\032\022proto/common.proto\"\260\001\n\033LoginBroa"
  "dcastServerRequest\022\021\n\tplayer_id\030\001 \002(\003\022\017\n"
  "\007version\030\002 \002(\003\022\023\n\013mac_address\030\004 \002(\t\022\r\n\005t"
  "oken\030\005 \002(\014\022\027\n\017unknown_field_3\030\003 \002(\003\022\027\n\017u"
  "nknown_field_6\030\006 \002(\003\022\027\n\017unknown_field_7\030"
  "\007 \002(\003\"c\n\034LoginBroadcastServerResponse\022\021\n"
  "\tplayer_id\030\002 \001(\003\022\027\n\017unknown_field_1\030\001 \001("
  "\003\022\027\n\017unknown_field_3\030\003 \001(\t\"\\\n\025ListBroadc"
  "astsRequest\022\021\n\tplayer_id\030\001 \001(\003\022\027\n\017unknow"
  "n_field_2\030\002 \001(\003\022\027\n\017unknown_field_3\030\003 \001(\003"
  "\"\207\001\n\026ListBroadcastsResponse\022,\n\nbroadcast"
  "s\030\003 \003(\0132\030.openfoxwq.BroadcastInfo\022\022\n\npag"
  "e_index\030\004 \001(\003\022\022\n\npage_count\030\005 \001(\003\022\027\n\017unk"
  "nown_field_1\030\001 \001(\003\"@\n\025EnterBroadcastRequ"
  "est\022\021\n\tplayer_id\030\001 \002(\003\022\024\n\014broadcast_id\030\002"
  " \002(\003\"Z\n\026EnterBroadcastResponse\022\021\n\tplayer"
  "_id\030\002 \002(\003\022\024\n\014broadcast_id\030\003 \002(\003\022\027\n\017unkno"
  "wn_field_1\030\001 \001(\003\"@\n\025LeaveBroadcastReques"
  "t\022\021\n\tplayer_id\030\001 \002(\003\022\024\n\014broadcast_id\030\002 \002"
  "(\003\"Z\n\026LeaveBroadcastResponse\022\021\n\tplayer_i"
  "d\030\002 \002(\003\022\024\n\014broadcast_id\030\003 \002(\003\022\027\n\017unknown"
  "_field_1\030\001 \001(\003\"\022\n\020HeartbeatRequest\"\244\001\n\025B"
  "roadcastSettingEvent\022\021\n\tplayer_id\030\002 \002(\003\022"
  "\027\n\017player_id_black\030\004 \001(\003\022\027\n\017player_id_wh"
  "ite\030\005 \001(\003\022\024\n\014broadcast_id\030\003 \002(\003\0220\n\016match"
  "_settings\030\006 \001(\0132\030.openfoxwq.MatchSetting"
  "s\"\353\001\n\023BroadcastStateEvent\022\021\n\tplayer_id\030\002"
  " \002(\003\022\024\n\014broadcast_id\030\003 \002(\003\022<\n\005state\030\004 \001("
  "\0132-.openfoxwq.BroadcastStateEvent.Broadc"
  "astState\022\022\n\nmove_count\030\006 \001(\003\032Y\n\016Broadcas"
  "tState\022\025\n\rencoded_moves\030\001 \003(\003\022\027\n\017unknown"
  "_field_2\030\002 \001(\003\022\027\n\017unknown_field_3\030\003 \001(\003\""
  "\224\001\n\022BroadcastMoveEvent\022\021\n\tplayer_id\030\002 \002("
  "\003\022\024\n\014broadcast_id\030\003 \002(\003\022\024\n\014encoded_move\030"
  "\004 \001(\003\022\021\n\ttime_left\030\006 \001(\003\022\023\n\013move_number\030"
  "\010 \001(\003\022\027\n\017unknown_field_5\030\005 \001(\003\"\230\001\n\030Broad"
  "castGameResultEvent\022\024\n\014broadcast_id\030\003 \002("
  "\003\022 \n\006winner\030\004 \001(\0162\020.openfoxwq.Color\022\022\n\ns"
  "core_lead\030\005 \001(\003\022\027\n\017unknown_field_1\030\001 \001(\003"
  "\022\027\n\017unknown_field_2\030\002 \001(\003\"\210\001\n\031BroadcastT"
  "imeControlEvent\022\021\n\tplayer_id\030\002 \002(\003\022\024\n\014br"
  "oadcast_id\030\003 \002(\003\022\026\n\016current_period\030\005 \001(\003"
  "\022\021\n\ttime_left\030\006 \001(\003\022\027\n\017unknown_field_4\030\004"
  " \001(\003\"C\n\017UnknownRequest1\022\027\n\017unknown_field"
  "_1\030\001 \002(\003\022\027\n\017unknown_field_2\030\002 \002(\003\"V\n\017Unk"
  "nownRequest2\022\021\n\tplayer_id\030\001 \002(\003\022\027\n\017unkno"
  "wn_field_2\030\002 \001(\003\022\027\n\017unknown_field_3\030\003 \001("
  "\003\"$\n\017UnknownRequest3\022\021\n\tplayer_id\030\001 \002(\003\""
  "X\n\017UnknownRequest4\022\021\n\tplayer_id\030\001 \002(\003\022\030\n"
  "\020unknown_field_10\030\n \001(\003\022\030\n\020unknown_field"
  "_30\030\036 \001(\003\"$\n\017UnknownRequest5\022\021\n\tplayer_i"
  "d\030\001 \002(\003\"$\n\017UnknownRequest6\022\021\n\tplayer_id\030"
  "\001 \002(\003\">\n\020UnknownResponse6\022\021\n\tplayer_id\030\001"
  " \002(\003\022\027\n\017unknown_field_2\030\002 \001(\003\"$\n\017Unknown"
  "Request7\022\021\n\tplayer_id\030\001 \002(\003\">\n\020UnknownRe"
  "sponse7\022\021\n\tplayer_id\030\001 \002(\003\022\027\n\017unknown_fi"
  "eld_2\030\002 \001(\003\"$\n\017UnknownRequest8\022\021\n\tplayer"
  "_id\030\001 \002(\003\">\n\020UnknownResponse8\022\021\n\tplayer_"
  "id\030\001 \002(\003\022\027\n\017unknown_field_2\030\002 \001(\0032\373\014\n\tBr"
  "oadcast\022d\n\005Login\022&.openfoxwq.LoginBroadc"
  "astServerRequest\032\'.openfoxwq.LoginBroadc"
  "astServerResponse\"\n\202\265\030\006\010\240\037\020\245\037\022d\n\016ListBro"
  "adcasts\022 .openfoxwq.ListBroadcastsReques"
  "t\032!.openfoxwq.ListBroadcastsResponse\"\013\202\265"
  "\030\007\010\264\215\001\020\314\0370\001\022a\n\016EnterBroadcast\022 .openfoxw"
  "q.EnterBroadcastRequest\032!.openfoxwq.Ente"
  "rBroadcastResponse\"\n\202\265\030\006\010\304\'\020\311\'\022c\n\034Listen"
  "BroadcastSettingEvents\022\026.google.protobuf"
  ".Empty\032 .openfoxwq.BroadcastSettingEvent"
  "\"\007\202\265\030\003\020\231(0\001\022_\n\032ListenBroadcastStateEvent"
  "s\022\026.google.protobuf.Empty\032\036.openfoxwq.Br"
  "oadcastStateEvent\"\007\202\265\030\003\020\233(0\001\022]\n\031ListenBr"
  "oadcastMoveEvents\022\026.google.protobuf.Empt"
  "y\032\035.openfoxwq.BroadcastMoveEvent\"\007\202\265\030\003\020\336"
  "60\001\022i\n\037ListenBroadcastGameResultEvents\022\026"
  ".google.protobuf.Empty\032#.openfoxwq.Broad"
  "castGameResultEvent\"\007\202\265\030\003\020\22280\001\022k\n Listen"
  "BroadcastTimeControlEvents\022\026.google.prot"
  "obuf.Empty\032$.openfoxwq.BroadcastTimeCont"
  "rolEvent\"\007\202\265\030\003\020\23680\001\022a\n\016LeaveBroadcast\022 ."
  "openfoxwq.LeaveBroadcastRequest\032!.openfo"
  "xwq.LeaveBroadcastResponse\"\n\202\265\030\006\010\330\'\020\335\'\022H"
  "\n\tHeartbeat\022\033.openfoxwq.HeartbeatRequest"
  "\032\026.google.protobuf.Empty\"\006\202\265\030\002\010d\022M\n\016Unkn"
  "ownMethod1\022\032.openfoxwq.UnknownRequest1\032\026"
  ".google.protobuf.Empty\"\007\202\265\030\003\010\344]\022M\n\016Unkno"
  "wnMethod2\022\032.openfoxwq.UnknownRequest2\032\026."
  "google.protobuf.Empty\"\007\202\265\030\003\010\260m\022M\n\016Unknow"
  "nMethod3\022\032.openfoxwq.UnknownRequest3\032\026.g"
  "oogle.protobuf.Empty\"\007\202\265\030\003\010\232G\022M\n\016Unknown"
  "Method4\022\032.openfoxwq.UnknownRequest4\032\026.go"
  "ogle.protobuf.Empty\"\007\202\265\030\003\010\321s\022N\n\016UnknownM"
  "ethod5\022\032.openfoxwq.UnknownRequest5\032\026.goo"
  "gle.protobuf.Empty\"\010\202\265\030\004\010\271\215\001\022W\n\016UnknownM"
  "ethod6\022\032.openfoxwq.UnknownRequest6\032\033.ope"
  "nfoxwq.UnknownResponse6\"\014\202\265\030\010\010\246\352\001\020\247\352\001\022W\n"
  "\016UnknownMethod7\022\032.openfoxwq.UnknownReque"
  "st7\032\033.openfoxwq.UnknownResponse7\"\014\202\265\030\010\010\250"
  "\352\001\020\251\352\001\022W\n\016UnknownMethod8\022\032.openfoxwq.Unk"
  "nownRequest8\032\033.openfoxwq.UnknownResponse"
  "8\"\014\202\265\030\010\010\252\352\001\020\253\352\001B&Z$github.com/openfoxwq/"
  "openfoxwq/proto"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fbroadcast_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_proto_2fcommon_2eproto,
  &::descriptor_table_proto_2freqOption_2eproto,
};
static ::_pbi::once_flag descriptor_table_proto_2fbroadcast_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fbroadcast_2eproto = {
    false, false, 4135, descriptor_table_protodef_proto_2fbroadcast_2eproto,
    "proto/broadcast.proto",
    &descriptor_table_proto_2fbroadcast_2eproto_once, descriptor_table_proto_2fbroadcast_2eproto_deps, 3, 26,
    schemas, file_default_instances, TableStruct_proto_2fbroadcast_2eproto::offsets,
    file_level_metadata_proto_2fbroadcast_2eproto, file_level_enum_descriptors_proto_2fbroadcast_2eproto,
    file_level_service_descriptors_proto_2fbroadcast_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fbroadcast_2eproto_getter() {
  return &descriptor_table_proto_2fbroadcast_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fbroadcast_2eproto(&descriptor_table_proto_2fbroadcast_2eproto);
namespace openfoxwq {

// ===================================================================

class LoginBroadcastServerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginBroadcastServerRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_mac_address(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_unknown_field_6(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_unknown_field_7(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

LoginBroadcastServerRequest::LoginBroadcastServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LoginBroadcastServerRequest)
}
LoginBroadcastServerRequest::LoginBroadcastServerRequest(const LoginBroadcastServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginBroadcastServerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.mac_address_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_6_){}
    , decltype(_impl_.unknown_field_7_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mac_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mac_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_mac_address()) {
    _this->_impl_.mac_address_.Set(from._internal_mac_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_token()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_7_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_7_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LoginBroadcastServerRequest)
}

inline void LoginBroadcastServerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.mac_address_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.version_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
    , decltype(_impl_.unknown_field_6_){int64_t{0}}
    , decltype(_impl_.unknown_field_7_){int64_t{0}}
  };
  _impl_.mac_address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mac_address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginBroadcastServerRequest::~LoginBroadcastServerRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.LoginBroadcastServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginBroadcastServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mac_address_.Destroy();
  _impl_.token_.Destroy();
}

void LoginBroadcastServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginBroadcastServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LoginBroadcastServerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.mac_address_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_7_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_7_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginBroadcastServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_version(&has_bits);
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required string mac_address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_mac_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.LoginBroadcastServerRequest.mac_address");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // required bytes token = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_unknown_field_6(&has_bits);
          _impl_.unknown_field_6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_unknown_field_7(&has_bits);
          _impl_.unknown_field_7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginBroadcastServerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LoginBroadcastServerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required int64 version = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_version(), target);
  }

  // required int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  // required string mac_address = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_mac_address().data(), static_cast<int>(this->_internal_mac_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.LoginBroadcastServerRequest.mac_address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_mac_address(), target);
  }

  // required bytes token = 5;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_token(), target);
  }

  // required int64 unknown_field_6 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_unknown_field_6(), target);
  }

  // required int64 unknown_field_7 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_unknown_field_7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LoginBroadcastServerRequest)
  return target;
}

size_t LoginBroadcastServerRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.LoginBroadcastServerRequest)
  size_t total_size = 0;

  if (_internal_has_mac_address()) {
    // required string mac_address = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac_address());
  }

  if (_internal_has_token()) {
    // required bytes token = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_token());
  }

  if (_internal_has_player_id()) {
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_version()) {
    // required int64 version = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_version());
  }

  if (_internal_has_unknown_field_3()) {
    // required int64 unknown_field_3 = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
  }

  if (_internal_has_unknown_field_6()) {
    // required int64 unknown_field_6 = 6;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_6());
  }

  if (_internal_has_unknown_field_7()) {
    // required int64 unknown_field_7 = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_7());
  }

  return total_size;
}
size_t LoginBroadcastServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LoginBroadcastServerRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string mac_address = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mac_address());

    // required bytes token = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_token());

    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 version = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_version());

    // required int64 unknown_field_3 = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());

    // required int64 unknown_field_6 = 6;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_6());

    // required int64 unknown_field_7 = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_7());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginBroadcastServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginBroadcastServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginBroadcastServerRequest::GetClassData() const { return &_class_data_; }


void LoginBroadcastServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginBroadcastServerRequest*>(&to_msg);
  auto& from = static_cast<const LoginBroadcastServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LoginBroadcastServerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_mac_address(from._internal_mac_address());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_token(from._internal_token());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.unknown_field_6_ = from._impl_.unknown_field_6_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.unknown_field_7_ = from._impl_.unknown_field_7_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginBroadcastServerRequest::CopyFrom(const LoginBroadcastServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LoginBroadcastServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginBroadcastServerRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void LoginBroadcastServerRequest::InternalSwap(LoginBroadcastServerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mac_address_, lhs_arena,
      &other->_impl_.mac_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginBroadcastServerRequest, _impl_.unknown_field_7_)
      + sizeof(LoginBroadcastServerRequest::_impl_.unknown_field_7_)
      - PROTOBUF_FIELD_OFFSET(LoginBroadcastServerRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginBroadcastServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[0]);
}

// ===================================================================

class LoginBroadcastServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginBroadcastServerResponse>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LoginBroadcastServerResponse::LoginBroadcastServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LoginBroadcastServerResponse)
}
LoginBroadcastServerResponse::LoginBroadcastServerResponse(const LoginBroadcastServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginBroadcastServerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.unknown_field_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_field_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_unknown_field_3()) {
    _this->_impl_.unknown_field_3_.Set(from._internal_unknown_field_3(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.player_id_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.player_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LoginBroadcastServerResponse)
}

inline void LoginBroadcastServerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
  _impl_.unknown_field_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_field_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginBroadcastServerResponse::~LoginBroadcastServerResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.LoginBroadcastServerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginBroadcastServerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unknown_field_3_.Destroy();
}

void LoginBroadcastServerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginBroadcastServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LoginBroadcastServerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.unknown_field_3_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.player_id_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.player_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginBroadcastServerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_unknown_field_3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.LoginBroadcastServerResponse.unknown_field_3");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginBroadcastServerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LoginBroadcastServerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // optional int64 player_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // optional string unknown_field_3 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_unknown_field_3().data(), static_cast<int>(this->_internal_unknown_field_3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.LoginBroadcastServerResponse.unknown_field_3");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LoginBroadcastServerResponse)
  return target;
}

size_t LoginBroadcastServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LoginBroadcastServerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string unknown_field_3 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_unknown_field_3());
    }

    // optional int64 unknown_field_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
    }

    // optional int64 player_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginBroadcastServerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginBroadcastServerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginBroadcastServerResponse::GetClassData() const { return &_class_data_; }


void LoginBroadcastServerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginBroadcastServerResponse*>(&to_msg);
  auto& from = static_cast<const LoginBroadcastServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LoginBroadcastServerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_unknown_field_3(from._internal_unknown_field_3());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginBroadcastServerResponse::CopyFrom(const LoginBroadcastServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LoginBroadcastServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginBroadcastServerResponse::IsInitialized() const {
  return true;
}

void LoginBroadcastServerResponse::InternalSwap(LoginBroadcastServerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unknown_field_3_, lhs_arena,
      &other->_impl_.unknown_field_3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginBroadcastServerResponse, _impl_.player_id_)
      + sizeof(LoginBroadcastServerResponse::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(LoginBroadcastServerResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginBroadcastServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[1]);
}

// ===================================================================

class ListBroadcastsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ListBroadcastsRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ListBroadcastsRequest::ListBroadcastsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.ListBroadcastsRequest)
}
ListBroadcastsRequest::ListBroadcastsRequest(const ListBroadcastsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListBroadcastsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.unknown_field_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.ListBroadcastsRequest)
}

inline void ListBroadcastsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
  };
}

ListBroadcastsRequest::~ListBroadcastsRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.ListBroadcastsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListBroadcastsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListBroadcastsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListBroadcastsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.ListBroadcastsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBroadcastsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBroadcastsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.ListBroadcastsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // optional int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.ListBroadcastsRequest)
  return target;
}

size_t ListBroadcastsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.ListBroadcastsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 player_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
    }

    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

    // optional int64 unknown_field_3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBroadcastsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListBroadcastsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBroadcastsRequest::GetClassData() const { return &_class_data_; }


void ListBroadcastsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListBroadcastsRequest*>(&to_msg);
  auto& from = static_cast<const ListBroadcastsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.ListBroadcastsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBroadcastsRequest::CopyFrom(const ListBroadcastsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.ListBroadcastsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBroadcastsRequest::IsInitialized() const {
  return true;
}

void ListBroadcastsRequest::InternalSwap(ListBroadcastsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListBroadcastsRequest, _impl_.unknown_field_3_)
      + sizeof(ListBroadcastsRequest::_impl_.unknown_field_3_)
      - PROTOBUF_FIELD_OFFSET(ListBroadcastsRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBroadcastsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[2]);
}

// ===================================================================

class ListBroadcastsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ListBroadcastsResponse>()._impl_._has_bits_);
  static void set_has_page_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_page_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void ListBroadcastsResponse::clear_broadcasts() {
  _impl_.broadcasts_.Clear();
}
ListBroadcastsResponse::ListBroadcastsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.ListBroadcastsResponse)
}
ListBroadcastsResponse::ListBroadcastsResponse(const ListBroadcastsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListBroadcastsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.broadcasts_){from._impl_.broadcasts_}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.page_index_){}
    , decltype(_impl_.page_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.page_count_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.page_count_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.ListBroadcastsResponse)
}

inline void ListBroadcastsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.broadcasts_){arena}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.page_index_){int64_t{0}}
    , decltype(_impl_.page_count_){int64_t{0}}
  };
}

ListBroadcastsResponse::~ListBroadcastsResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.ListBroadcastsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListBroadcastsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.broadcasts_.~RepeatedPtrField();
}

void ListBroadcastsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListBroadcastsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.ListBroadcastsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.broadcasts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.page_count_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.page_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBroadcastsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .openfoxwq.BroadcastInfo broadcasts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_broadcasts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional int64 page_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_page_index(&has_bits);
          _impl_.page_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 page_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_page_count(&has_bits);
          _impl_.page_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBroadcastsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.ListBroadcastsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // repeated .openfoxwq.BroadcastInfo broadcasts = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_broadcasts_size()); i < n; i++) {
    const auto& repfield = this->_internal_broadcasts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int64 page_index = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_page_index(), target);
  }

  // optional int64 page_count = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_page_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.ListBroadcastsResponse)
  return target;
}

size_t ListBroadcastsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.ListBroadcastsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .openfoxwq.BroadcastInfo broadcasts = 3;
  total_size += 1UL * this->_internal_broadcasts_size();
  for (const auto& msg : this->_impl_.broadcasts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 unknown_field_1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
    }

    // optional int64 page_index = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_page_index());
    }

    // optional int64 page_count = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_page_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBroadcastsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListBroadcastsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBroadcastsResponse::GetClassData() const { return &_class_data_; }


void ListBroadcastsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListBroadcastsResponse*>(&to_msg);
  auto& from = static_cast<const ListBroadcastsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.ListBroadcastsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.broadcasts_.MergeFrom(from._impl_.broadcasts_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.page_index_ = from._impl_.page_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.page_count_ = from._impl_.page_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBroadcastsResponse::CopyFrom(const ListBroadcastsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.ListBroadcastsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBroadcastsResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.broadcasts_))
    return false;
  return true;
}

void ListBroadcastsResponse::InternalSwap(ListBroadcastsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.broadcasts_.InternalSwap(&other->_impl_.broadcasts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListBroadcastsResponse, _impl_.page_count_)
      + sizeof(ListBroadcastsResponse::_impl_.page_count_)
      - PROTOBUF_FIELD_OFFSET(ListBroadcastsResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBroadcastsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[3]);
}

// ===================================================================

class EnterBroadcastRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<EnterBroadcastRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

EnterBroadcastRequest::EnterBroadcastRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.EnterBroadcastRequest)
}
EnterBroadcastRequest::EnterBroadcastRequest(const EnterBroadcastRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterBroadcastRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.broadcast_id_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.broadcast_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.EnterBroadcastRequest)
}

inline void EnterBroadcastRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
  };
}

EnterBroadcastRequest::~EnterBroadcastRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.EnterBroadcastRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterBroadcastRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnterBroadcastRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterBroadcastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.EnterBroadcastRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.broadcast_id_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.broadcast_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterBroadcastRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterBroadcastRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.EnterBroadcastRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_broadcast_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.EnterBroadcastRequest)
  return target;
}

size_t EnterBroadcastRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.EnterBroadcastRequest)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t EnterBroadcastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.EnterBroadcastRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterBroadcastRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterBroadcastRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterBroadcastRequest::GetClassData() const { return &_class_data_; }


void EnterBroadcastRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterBroadcastRequest*>(&to_msg);
  auto& from = static_cast<const EnterBroadcastRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.EnterBroadcastRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterBroadcastRequest::CopyFrom(const EnterBroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.EnterBroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterBroadcastRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void EnterBroadcastRequest::InternalSwap(EnterBroadcastRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterBroadcastRequest, _impl_.broadcast_id_)
      + sizeof(EnterBroadcastRequest::_impl_.broadcast_id_)
      - PROTOBUF_FIELD_OFFSET(EnterBroadcastRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterBroadcastRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[4]);
}

// ===================================================================

class EnterBroadcastResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<EnterBroadcastResponse>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

EnterBroadcastResponse::EnterBroadcastResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.EnterBroadcastResponse)
}
EnterBroadcastResponse::EnterBroadcastResponse(const EnterBroadcastResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterBroadcastResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.broadcast_id_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.broadcast_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.EnterBroadcastResponse)
}

inline void EnterBroadcastResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
  };
}

EnterBroadcastResponse::~EnterBroadcastResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.EnterBroadcastResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterBroadcastResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnterBroadcastResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterBroadcastResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.EnterBroadcastResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.broadcast_id_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.broadcast_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterBroadcastResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterBroadcastResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.EnterBroadcastResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.EnterBroadcastResponse)
  return target;
}

size_t EnterBroadcastResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.EnterBroadcastResponse)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t EnterBroadcastResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.EnterBroadcastResponse)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_1 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterBroadcastResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterBroadcastResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterBroadcastResponse::GetClassData() const { return &_class_data_; }


void EnterBroadcastResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterBroadcastResponse*>(&to_msg);
  auto& from = static_cast<const EnterBroadcastResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.EnterBroadcastResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterBroadcastResponse::CopyFrom(const EnterBroadcastResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.EnterBroadcastResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterBroadcastResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void EnterBroadcastResponse::InternalSwap(EnterBroadcastResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterBroadcastResponse, _impl_.broadcast_id_)
      + sizeof(EnterBroadcastResponse::_impl_.broadcast_id_)
      - PROTOBUF_FIELD_OFFSET(EnterBroadcastResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterBroadcastResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[5]);
}

// ===================================================================

class LeaveBroadcastRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LeaveBroadcastRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

LeaveBroadcastRequest::LeaveBroadcastRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LeaveBroadcastRequest)
}
LeaveBroadcastRequest::LeaveBroadcastRequest(const LeaveBroadcastRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaveBroadcastRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.broadcast_id_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.broadcast_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LeaveBroadcastRequest)
}

inline void LeaveBroadcastRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
  };
}

LeaveBroadcastRequest::~LeaveBroadcastRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.LeaveBroadcastRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaveBroadcastRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaveBroadcastRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaveBroadcastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LeaveBroadcastRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.broadcast_id_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.broadcast_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaveBroadcastRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaveBroadcastRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LeaveBroadcastRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_broadcast_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LeaveBroadcastRequest)
  return target;
}

size_t LeaveBroadcastRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.LeaveBroadcastRequest)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t LeaveBroadcastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LeaveBroadcastRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaveBroadcastRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaveBroadcastRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaveBroadcastRequest::GetClassData() const { return &_class_data_; }


void LeaveBroadcastRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaveBroadcastRequest*>(&to_msg);
  auto& from = static_cast<const LeaveBroadcastRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LeaveBroadcastRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaveBroadcastRequest::CopyFrom(const LeaveBroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LeaveBroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveBroadcastRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void LeaveBroadcastRequest::InternalSwap(LeaveBroadcastRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaveBroadcastRequest, _impl_.broadcast_id_)
      + sizeof(LeaveBroadcastRequest::_impl_.broadcast_id_)
      - PROTOBUF_FIELD_OFFSET(LeaveBroadcastRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaveBroadcastRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[6]);
}

// ===================================================================

class LeaveBroadcastResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LeaveBroadcastResponse>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

LeaveBroadcastResponse::LeaveBroadcastResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LeaveBroadcastResponse)
}
LeaveBroadcastResponse::LeaveBroadcastResponse(const LeaveBroadcastResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaveBroadcastResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.broadcast_id_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.broadcast_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LeaveBroadcastResponse)
}

inline void LeaveBroadcastResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
  };
}

LeaveBroadcastResponse::~LeaveBroadcastResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.LeaveBroadcastResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaveBroadcastResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaveBroadcastResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaveBroadcastResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LeaveBroadcastResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.broadcast_id_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.broadcast_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaveBroadcastResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaveBroadcastResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LeaveBroadcastResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LeaveBroadcastResponse)
  return target;
}

size_t LeaveBroadcastResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.LeaveBroadcastResponse)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t LeaveBroadcastResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LeaveBroadcastResponse)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_1 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaveBroadcastResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaveBroadcastResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaveBroadcastResponse::GetClassData() const { return &_class_data_; }


void LeaveBroadcastResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaveBroadcastResponse*>(&to_msg);
  auto& from = static_cast<const LeaveBroadcastResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LeaveBroadcastResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaveBroadcastResponse::CopyFrom(const LeaveBroadcastResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LeaveBroadcastResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveBroadcastResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void LeaveBroadcastResponse::InternalSwap(LeaveBroadcastResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaveBroadcastResponse, _impl_.broadcast_id_)
      + sizeof(LeaveBroadcastResponse::_impl_.broadcast_id_)
      - PROTOBUF_FIELD_OFFSET(LeaveBroadcastResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaveBroadcastResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[7]);
}

// ===================================================================

class HeartbeatRequest::_Internal {
 public:
};

HeartbeatRequest::HeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:openfoxwq.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  HeartbeatRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openfoxwq.HeartbeatRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartbeatRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartbeatRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[8]);
}

// ===================================================================

class BroadcastSettingEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<BroadcastSettingEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_player_id_black(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_player_id_white(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::openfoxwq::MatchSettings& match_settings(const BroadcastSettingEvent* msg);
  static void set_has_match_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

const ::openfoxwq::MatchSettings&
BroadcastSettingEvent::_Internal::match_settings(const BroadcastSettingEvent* msg) {
  return *msg->_impl_.match_settings_;
}
void BroadcastSettingEvent::clear_match_settings() {
  if (_impl_.match_settings_ != nullptr) _impl_.match_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BroadcastSettingEvent::BroadcastSettingEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.BroadcastSettingEvent)
}
BroadcastSettingEvent::BroadcastSettingEvent(const BroadcastSettingEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BroadcastSettingEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_settings_){nullptr}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}
    , decltype(_impl_.player_id_black_){}
    , decltype(_impl_.player_id_white_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_match_settings()) {
    _this->_impl_.match_settings_ = new ::openfoxwq::MatchSettings(*from._impl_.match_settings_);
  }
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.player_id_white_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.player_id_white_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.BroadcastSettingEvent)
}

inline void BroadcastSettingEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.match_settings_){nullptr}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
    , decltype(_impl_.player_id_black_){int64_t{0}}
    , decltype(_impl_.player_id_white_){int64_t{0}}
  };
}

BroadcastSettingEvent::~BroadcastSettingEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.BroadcastSettingEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BroadcastSettingEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.match_settings_;
}

void BroadcastSettingEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BroadcastSettingEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.BroadcastSettingEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.match_settings_ != nullptr);
    _impl_.match_settings_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.player_id_white_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.player_id_white_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastSettingEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 player_id_black = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_player_id_black(&has_bits);
          _impl_.player_id_black_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 player_id_white = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_player_id_white(&has_bits);
          _impl_.player_id_white_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .openfoxwq.MatchSettings match_settings = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_match_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastSettingEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.BroadcastSettingEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  // optional int64 player_id_black = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_player_id_black(), target);
  }

  // optional int64 player_id_white = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_player_id_white(), target);
  }

  // optional .openfoxwq.MatchSettings match_settings = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::match_settings(this),
        _Internal::match_settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.BroadcastSettingEvent)
  return target;
}

size_t BroadcastSettingEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.BroadcastSettingEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t BroadcastSettingEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.BroadcastSettingEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .openfoxwq.MatchSettings match_settings = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.match_settings_);
  }

  if (cached_has_bits & 0x00000018u) {
    // optional int64 player_id_black = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_black());
    }

    // optional int64 player_id_white = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_white());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastSettingEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BroadcastSettingEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastSettingEvent::GetClassData() const { return &_class_data_; }


void BroadcastSettingEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BroadcastSettingEvent*>(&to_msg);
  auto& from = static_cast<const BroadcastSettingEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.BroadcastSettingEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_match_settings()->::openfoxwq::MatchSettings::MergeFrom(
          from._internal_match_settings());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.player_id_black_ = from._impl_.player_id_black_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.player_id_white_ = from._impl_.player_id_white_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastSettingEvent::CopyFrom(const BroadcastSettingEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.BroadcastSettingEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastSettingEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_match_settings()) {
    if (!_impl_.match_settings_->IsInitialized()) return false;
  }
  return true;
}

void BroadcastSettingEvent::InternalSwap(BroadcastSettingEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastSettingEvent, _impl_.player_id_white_)
      + sizeof(BroadcastSettingEvent::_impl_.player_id_white_)
      - PROTOBUF_FIELD_OFFSET(BroadcastSettingEvent, _impl_.match_settings_)>(
          reinterpret_cast<char*>(&_impl_.match_settings_),
          reinterpret_cast<char*>(&other->_impl_.match_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastSettingEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[9]);
}

// ===================================================================

class BroadcastStateEvent_BroadcastState::_Internal {
 public:
  using HasBits = decltype(std::declval<BroadcastStateEvent_BroadcastState>()._impl_._has_bits_);
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BroadcastStateEvent_BroadcastState::BroadcastStateEvent_BroadcastState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.BroadcastStateEvent.BroadcastState)
}
BroadcastStateEvent_BroadcastState::BroadcastStateEvent_BroadcastState(const BroadcastStateEvent_BroadcastState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BroadcastStateEvent_BroadcastState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.encoded_moves_){from._impl_.encoded_moves_}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.unknown_field_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_2_, &from._impl_.unknown_field_2_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_2_)) + sizeof(_impl_.unknown_field_3_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.BroadcastStateEvent.BroadcastState)
}

inline void BroadcastStateEvent_BroadcastState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.encoded_moves_){arena}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
  };
}

BroadcastStateEvent_BroadcastState::~BroadcastStateEvent_BroadcastState() {
  // @@protoc_insertion_point(destructor:openfoxwq.BroadcastStateEvent.BroadcastState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BroadcastStateEvent_BroadcastState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.encoded_moves_.~RepeatedField();
}

void BroadcastStateEvent_BroadcastState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BroadcastStateEvent_BroadcastState::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.BroadcastStateEvent.BroadcastState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.encoded_moves_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.unknown_field_2_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_2_)) + sizeof(_impl_.unknown_field_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastStateEvent_BroadcastState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 encoded_moves = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_encoded_moves(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_encoded_moves(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastStateEvent_BroadcastState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.BroadcastStateEvent.BroadcastState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 encoded_moves = 1;
  for (int i = 0, n = this->_internal_encoded_moves_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_encoded_moves(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // optional int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.BroadcastStateEvent.BroadcastState)
  return target;
}

size_t BroadcastStateEvent_BroadcastState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.BroadcastStateEvent.BroadcastState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 encoded_moves = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.encoded_moves_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_encoded_moves_size());
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

    // optional int64 unknown_field_3 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastStateEvent_BroadcastState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BroadcastStateEvent_BroadcastState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastStateEvent_BroadcastState::GetClassData() const { return &_class_data_; }


void BroadcastStateEvent_BroadcastState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BroadcastStateEvent_BroadcastState*>(&to_msg);
  auto& from = static_cast<const BroadcastStateEvent_BroadcastState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.BroadcastStateEvent.BroadcastState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.encoded_moves_.MergeFrom(from._impl_.encoded_moves_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastStateEvent_BroadcastState::CopyFrom(const BroadcastStateEvent_BroadcastState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.BroadcastStateEvent.BroadcastState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastStateEvent_BroadcastState::IsInitialized() const {
  return true;
}

void BroadcastStateEvent_BroadcastState::InternalSwap(BroadcastStateEvent_BroadcastState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.encoded_moves_.InternalSwap(&other->_impl_.encoded_moves_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastStateEvent_BroadcastState, _impl_.unknown_field_3_)
      + sizeof(BroadcastStateEvent_BroadcastState::_impl_.unknown_field_3_)
      - PROTOBUF_FIELD_OFFSET(BroadcastStateEvent_BroadcastState, _impl_.unknown_field_2_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_2_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_2_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastStateEvent_BroadcastState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[10]);
}

// ===================================================================

class BroadcastStateEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<BroadcastStateEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::openfoxwq::BroadcastStateEvent_BroadcastState& state(const BroadcastStateEvent* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_move_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

const ::openfoxwq::BroadcastStateEvent_BroadcastState&
BroadcastStateEvent::_Internal::state(const BroadcastStateEvent* msg) {
  return *msg->_impl_.state_;
}
BroadcastStateEvent::BroadcastStateEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.BroadcastStateEvent)
}
BroadcastStateEvent::BroadcastStateEvent(const BroadcastStateEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BroadcastStateEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}
    , decltype(_impl_.move_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    _this->_impl_.state_ = new ::openfoxwq::BroadcastStateEvent_BroadcastState(*from._impl_.state_);
  }
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.move_count_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_count_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.BroadcastStateEvent)
}

inline void BroadcastStateEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
    , decltype(_impl_.move_count_){int64_t{0}}
  };
}

BroadcastStateEvent::~BroadcastStateEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.BroadcastStateEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BroadcastStateEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
}

void BroadcastStateEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BroadcastStateEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.BroadcastStateEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.move_count_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastStateEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .openfoxwq.BroadcastStateEvent.BroadcastState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 move_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_move_count(&has_bits);
          _impl_.move_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastStateEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.BroadcastStateEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  // optional .openfoxwq.BroadcastStateEvent.BroadcastState state = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  // optional int64 move_count = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_move_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.BroadcastStateEvent)
  return target;
}

size_t BroadcastStateEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.BroadcastStateEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t BroadcastStateEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.BroadcastStateEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .openfoxwq.BroadcastStateEvent.BroadcastState state = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  // optional int64 move_count = 6;
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_move_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastStateEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BroadcastStateEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastStateEvent::GetClassData() const { return &_class_data_; }


void BroadcastStateEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BroadcastStateEvent*>(&to_msg);
  auto& from = static_cast<const BroadcastStateEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.BroadcastStateEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_state()->::openfoxwq::BroadcastStateEvent_BroadcastState::MergeFrom(
          from._internal_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.move_count_ = from._impl_.move_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastStateEvent::CopyFrom(const BroadcastStateEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.BroadcastStateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastStateEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void BroadcastStateEvent::InternalSwap(BroadcastStateEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastStateEvent, _impl_.move_count_)
      + sizeof(BroadcastStateEvent::_impl_.move_count_)
      - PROTOBUF_FIELD_OFFSET(BroadcastStateEvent, _impl_.state_)>(
          reinterpret_cast<char*>(&_impl_.state_),
          reinterpret_cast<char*>(&other->_impl_.state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastStateEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[11]);
}

// ===================================================================

class BroadcastMoveEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<BroadcastMoveEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_encoded_move(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_time_left(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_move_number(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_unknown_field_5(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

BroadcastMoveEvent::BroadcastMoveEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.BroadcastMoveEvent)
}
BroadcastMoveEvent::BroadcastMoveEvent(const BroadcastMoveEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BroadcastMoveEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}
    , decltype(_impl_.encoded_move_){}
    , decltype(_impl_.unknown_field_5_){}
    , decltype(_impl_.time_left_){}
    , decltype(_impl_.move_number_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.move_number_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_number_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.BroadcastMoveEvent)
}

inline void BroadcastMoveEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
    , decltype(_impl_.encoded_move_){int64_t{0}}
    , decltype(_impl_.unknown_field_5_){int64_t{0}}
    , decltype(_impl_.time_left_){int64_t{0}}
    , decltype(_impl_.move_number_){int64_t{0}}
  };
}

BroadcastMoveEvent::~BroadcastMoveEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.BroadcastMoveEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BroadcastMoveEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BroadcastMoveEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BroadcastMoveEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.BroadcastMoveEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.move_number_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_number_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastMoveEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 encoded_move = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_encoded_move(&has_bits);
          _impl_.encoded_move_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_unknown_field_5(&has_bits);
          _impl_.unknown_field_5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 time_left = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_time_left(&has_bits);
          _impl_.time_left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 move_number = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_move_number(&has_bits);
          _impl_.move_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastMoveEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.BroadcastMoveEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  // optional int64 encoded_move = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_encoded_move(), target);
  }

  // optional int64 unknown_field_5 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_unknown_field_5(), target);
  }

  // optional int64 time_left = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_time_left(), target);
  }

  // optional int64 move_number = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_move_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.BroadcastMoveEvent)
  return target;
}

size_t BroadcastMoveEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.BroadcastMoveEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t BroadcastMoveEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.BroadcastMoveEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003cu) {
    // optional int64 encoded_move = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_encoded_move());
    }

    // optional int64 unknown_field_5 = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_5());
    }

    // optional int64 time_left = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time_left());
    }

    // optional int64 move_number = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_move_number());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastMoveEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BroadcastMoveEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastMoveEvent::GetClassData() const { return &_class_data_; }


void BroadcastMoveEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BroadcastMoveEvent*>(&to_msg);
  auto& from = static_cast<const BroadcastMoveEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.BroadcastMoveEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.encoded_move_ = from._impl_.encoded_move_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.unknown_field_5_ = from._impl_.unknown_field_5_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.time_left_ = from._impl_.time_left_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.move_number_ = from._impl_.move_number_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastMoveEvent::CopyFrom(const BroadcastMoveEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.BroadcastMoveEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastMoveEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void BroadcastMoveEvent::InternalSwap(BroadcastMoveEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastMoveEvent, _impl_.move_number_)
      + sizeof(BroadcastMoveEvent::_impl_.move_number_)
      - PROTOBUF_FIELD_OFFSET(BroadcastMoveEvent, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastMoveEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[12]);
}

// ===================================================================

class BroadcastGameResultEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<BroadcastGameResultEvent>()._impl_._has_bits_);
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_winner(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_score_lead(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000004) ^ 0x00000004) != 0;
  }
};

BroadcastGameResultEvent::BroadcastGameResultEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.BroadcastGameResultEvent)
}
BroadcastGameResultEvent::BroadcastGameResultEvent(const BroadcastGameResultEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BroadcastGameResultEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.broadcast_id_){}
    , decltype(_impl_.score_lead_){}
    , decltype(_impl_.winner_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.winner_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.winner_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.BroadcastGameResultEvent)
}

inline void BroadcastGameResultEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
    , decltype(_impl_.score_lead_){int64_t{0}}
    , decltype(_impl_.winner_){0}
  };
}

BroadcastGameResultEvent::~BroadcastGameResultEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.BroadcastGameResultEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BroadcastGameResultEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BroadcastGameResultEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BroadcastGameResultEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.BroadcastGameResultEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.winner_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.winner_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastGameResultEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .openfoxwq.Color winner = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::openfoxwq::Color_IsValid(val))) {
            _internal_set_winner(static_cast<::openfoxwq::Color>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional int64 score_lead = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_score_lead(&has_bits);
          _impl_.score_lead_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastGameResultEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.BroadcastGameResultEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  // optional .openfoxwq.Color winner = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_winner(), target);
  }

  // optional int64 score_lead = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_score_lead(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.BroadcastGameResultEvent)
  return target;
}

size_t BroadcastGameResultEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.BroadcastGameResultEvent)
  size_t total_size = 0;

  // required int64 broadcast_id = 3;
  if (_internal_has_broadcast_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 unknown_field_1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
    }

    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // optional int64 score_lead = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_score_lead());
    }

    // optional .openfoxwq.Color winner = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_winner());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastGameResultEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BroadcastGameResultEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastGameResultEvent::GetClassData() const { return &_class_data_; }


void BroadcastGameResultEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BroadcastGameResultEvent*>(&to_msg);
  auto& from = static_cast<const BroadcastGameResultEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.BroadcastGameResultEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.score_lead_ = from._impl_.score_lead_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.winner_ = from._impl_.winner_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastGameResultEvent::CopyFrom(const BroadcastGameResultEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.BroadcastGameResultEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastGameResultEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void BroadcastGameResultEvent::InternalSwap(BroadcastGameResultEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastGameResultEvent, _impl_.winner_)
      + sizeof(BroadcastGameResultEvent::_impl_.winner_)
      - PROTOBUF_FIELD_OFFSET(BroadcastGameResultEvent, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastGameResultEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[13]);
}

// ===================================================================

class BroadcastTimeControlEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<BroadcastTimeControlEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_broadcast_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_current_period(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_time_left(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_unknown_field_4(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

BroadcastTimeControlEvent::BroadcastTimeControlEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.BroadcastTimeControlEvent)
}
BroadcastTimeControlEvent::BroadcastTimeControlEvent(const BroadcastTimeControlEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BroadcastTimeControlEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.broadcast_id_){}
    , decltype(_impl_.unknown_field_4_){}
    , decltype(_impl_.current_period_){}
    , decltype(_impl_.time_left_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.time_left_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.time_left_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.BroadcastTimeControlEvent)
}

inline void BroadcastTimeControlEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.broadcast_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_4_){int64_t{0}}
    , decltype(_impl_.current_period_){int64_t{0}}
    , decltype(_impl_.time_left_){int64_t{0}}
  };
}

BroadcastTimeControlEvent::~BroadcastTimeControlEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.BroadcastTimeControlEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BroadcastTimeControlEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BroadcastTimeControlEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BroadcastTimeControlEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.BroadcastTimeControlEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.time_left_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.time_left_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastTimeControlEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 broadcast_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_broadcast_id(&has_bits);
          _impl_.broadcast_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_unknown_field_4(&has_bits);
          _impl_.unknown_field_4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 current_period = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_current_period(&has_bits);
          _impl_.current_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 time_left = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_time_left(&has_bits);
          _impl_.time_left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastTimeControlEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.BroadcastTimeControlEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 broadcast_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_broadcast_id(), target);
  }

  // optional int64 unknown_field_4 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_unknown_field_4(), target);
  }

  // optional int64 current_period = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_current_period(), target);
  }

  // optional int64 time_left = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_time_left(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.BroadcastTimeControlEvent)
  return target;
}

size_t BroadcastTimeControlEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.BroadcastTimeControlEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_broadcast_id()) {
    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());
  }

  return total_size;
}
size_t BroadcastTimeControlEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.BroadcastTimeControlEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 broadcast_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_broadcast_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001cu) {
    // optional int64 unknown_field_4 = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_4());
    }

    // optional int64 current_period = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_current_period());
    }

    // optional int64 time_left = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time_left());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastTimeControlEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BroadcastTimeControlEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastTimeControlEvent::GetClassData() const { return &_class_data_; }


void BroadcastTimeControlEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BroadcastTimeControlEvent*>(&to_msg);
  auto& from = static_cast<const BroadcastTimeControlEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.BroadcastTimeControlEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.broadcast_id_ = from._impl_.broadcast_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_4_ = from._impl_.unknown_field_4_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.current_period_ = from._impl_.current_period_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.time_left_ = from._impl_.time_left_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastTimeControlEvent::CopyFrom(const BroadcastTimeControlEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.BroadcastTimeControlEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastTimeControlEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void BroadcastTimeControlEvent::InternalSwap(BroadcastTimeControlEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastTimeControlEvent, _impl_.time_left_)
      + sizeof(BroadcastTimeControlEvent::_impl_.time_left_)
      - PROTOBUF_FIELD_OFFSET(BroadcastTimeControlEvent, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastTimeControlEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[14]);
}

// ===================================================================

class UnknownRequest1::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest1>()._impl_._has_bits_);
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

UnknownRequest1::UnknownRequest1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest1)
}
UnknownRequest1::UnknownRequest1(const UnknownRequest1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest1)
}

inline void UnknownRequest1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownRequest1::~UnknownRequest1() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest1::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest1)
  return target;
}

size_t UnknownRequest1::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.UnknownRequest1)
  size_t total_size = 0;

  if (_internal_has_unknown_field_1()) {
    // required int64 unknown_field_1 = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  if (_internal_has_unknown_field_2()) {
    // required int64 unknown_field_2 = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return total_size;
}
size_t UnknownRequest1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest1)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 unknown_field_1 = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());

    // required int64 unknown_field_2 = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest1::GetClassData() const { return &_class_data_; }


void UnknownRequest1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest1*>(&to_msg);
  auto& from = static_cast<const UnknownRequest1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest1::CopyFrom(const UnknownRequest1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest1::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest1::InternalSwap(UnknownRequest1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownRequest1, _impl_.unknown_field_2_)
      + sizeof(UnknownRequest1::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownRequest1, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[15]);
}

// ===================================================================

class UnknownRequest2::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest2>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest2::UnknownRequest2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest2)
}
UnknownRequest2::UnknownRequest2(const UnknownRequest2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.unknown_field_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest2)
}

inline void UnknownRequest2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
  };
}

UnknownRequest2::~UnknownRequest2() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest2::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // optional int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest2)
  return target;
}

size_t UnknownRequest2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest2)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

    // optional int64 unknown_field_3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest2::GetClassData() const { return &_class_data_; }


void UnknownRequest2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest2*>(&to_msg);
  auto& from = static_cast<const UnknownRequest2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest2::CopyFrom(const UnknownRequest2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest2::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest2::InternalSwap(UnknownRequest2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownRequest2, _impl_.unknown_field_3_)
      + sizeof(UnknownRequest2::_impl_.unknown_field_3_)
      - PROTOBUF_FIELD_OFFSET(UnknownRequest2, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[16]);
}

// ===================================================================

class UnknownRequest3::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest3>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest3::UnknownRequest3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest3)
}
UnknownRequest3::UnknownRequest3(const UnknownRequest3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest3)
}

inline void UnknownRequest3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest3::~UnknownRequest3() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest3::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest3)
  return target;
}

size_t UnknownRequest3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest3)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest3::GetClassData() const { return &_class_data_; }


void UnknownRequest3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest3*>(&to_msg);
  auto& from = static_cast<const UnknownRequest3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest3::CopyFrom(const UnknownRequest3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest3::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest3::InternalSwap(UnknownRequest3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[17]);
}

// ===================================================================

class UnknownRequest4::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest4>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_10(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_30(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest4::UnknownRequest4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest4)
}
UnknownRequest4::UnknownRequest4(const UnknownRequest4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest4* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_10_){}
    , decltype(_impl_.unknown_field_30_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_30_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_30_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest4)
}

inline void UnknownRequest4::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_10_){int64_t{0}}
    , decltype(_impl_.unknown_field_30_){int64_t{0}}
  };
}

UnknownRequest4::~UnknownRequest4() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest4)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest4::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest4::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest4::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest4)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_30_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_30_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest4::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_10 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_unknown_field_10(&has_bits);
          _impl_.unknown_field_10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_30 = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_unknown_field_30(&has_bits);
          _impl_.unknown_field_30_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest4::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest4)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_10 = 10;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_unknown_field_10(), target);
  }

  // optional int64 unknown_field_30 = 30;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(30, this->_internal_unknown_field_30(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest4)
  return target;
}

size_t UnknownRequest4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest4)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional int64 unknown_field_10 = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_10());
    }

    // optional int64 unknown_field_30 = 30;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int64Size(
          this->_internal_unknown_field_30());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest4::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest4::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest4::GetClassData() const { return &_class_data_; }


void UnknownRequest4::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest4*>(&to_msg);
  auto& from = static_cast<const UnknownRequest4&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest4)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_10_ = from._impl_.unknown_field_10_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_30_ = from._impl_.unknown_field_30_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest4::CopyFrom(const UnknownRequest4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest4::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest4::InternalSwap(UnknownRequest4* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownRequest4, _impl_.unknown_field_30_)
      + sizeof(UnknownRequest4::_impl_.unknown_field_30_)
      - PROTOBUF_FIELD_OFFSET(UnknownRequest4, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest4::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[18]);
}

// ===================================================================

class UnknownRequest5::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest5>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest5::UnknownRequest5(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest5)
}
UnknownRequest5::UnknownRequest5(const UnknownRequest5& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest5* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest5)
}

inline void UnknownRequest5::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest5::~UnknownRequest5() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest5)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest5::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest5::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest5::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest5)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest5::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest5::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest5)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest5)
  return target;
}

size_t UnknownRequest5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest5)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest5::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest5::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest5::GetClassData() const { return &_class_data_; }


void UnknownRequest5::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest5*>(&to_msg);
  auto& from = static_cast<const UnknownRequest5&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest5)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest5::CopyFrom(const UnknownRequest5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest5::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest5::InternalSwap(UnknownRequest5* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest5::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[19]);
}

// ===================================================================

class UnknownRequest6::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest6>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest6::UnknownRequest6(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest6)
}
UnknownRequest6::UnknownRequest6(const UnknownRequest6& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest6* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest6)
}

inline void UnknownRequest6::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest6::~UnknownRequest6() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest6)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest6::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest6::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest6::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest6)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest6::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest6::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest6)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest6)
  return target;
}

size_t UnknownRequest6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest6)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest6::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest6::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest6::GetClassData() const { return &_class_data_; }


void UnknownRequest6::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest6*>(&to_msg);
  auto& from = static_cast<const UnknownRequest6&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest6)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest6::CopyFrom(const UnknownRequest6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest6::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest6::InternalSwap(UnknownRequest6* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest6::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[20]);
}

// ===================================================================

class UnknownResponse6::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownResponse6>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownResponse6::UnknownResponse6(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownResponse6)
}
UnknownResponse6::UnknownResponse6(const UnknownResponse6& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownResponse6* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownResponse6)
}

inline void UnknownResponse6::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownResponse6::~UnknownResponse6() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownResponse6)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownResponse6::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownResponse6::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownResponse6::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownResponse6)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownResponse6::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownResponse6::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownResponse6)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownResponse6)
  return target;
}

size_t UnknownResponse6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownResponse6)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownResponse6::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownResponse6::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownResponse6::GetClassData() const { return &_class_data_; }


void UnknownResponse6::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownResponse6*>(&to_msg);
  auto& from = static_cast<const UnknownResponse6&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownResponse6)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownResponse6::CopyFrom(const UnknownResponse6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownResponse6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownResponse6::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownResponse6::InternalSwap(UnknownResponse6* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownResponse6, _impl_.unknown_field_2_)
      + sizeof(UnknownResponse6::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownResponse6, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownResponse6::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[21]);
}

// ===================================================================

class UnknownRequest7::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest7>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest7::UnknownRequest7(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest7)
}
UnknownRequest7::UnknownRequest7(const UnknownRequest7& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest7* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest7)
}

inline void UnknownRequest7::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest7::~UnknownRequest7() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest7)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest7::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest7::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest7::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest7)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest7::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest7::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest7)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest7)
  return target;
}

size_t UnknownRequest7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest7)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest7::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest7::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest7::GetClassData() const { return &_class_data_; }


void UnknownRequest7::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest7*>(&to_msg);
  auto& from = static_cast<const UnknownRequest7&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest7)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest7::CopyFrom(const UnknownRequest7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest7::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest7::InternalSwap(UnknownRequest7* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest7::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[22]);
}

// ===================================================================

class UnknownResponse7::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownResponse7>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownResponse7::UnknownResponse7(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownResponse7)
}
UnknownResponse7::UnknownResponse7(const UnknownResponse7& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownResponse7* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownResponse7)
}

inline void UnknownResponse7::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownResponse7::~UnknownResponse7() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownResponse7)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownResponse7::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownResponse7::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownResponse7::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownResponse7)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownResponse7::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownResponse7::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownResponse7)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownResponse7)
  return target;
}

size_t UnknownResponse7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownResponse7)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownResponse7::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownResponse7::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownResponse7::GetClassData() const { return &_class_data_; }


void UnknownResponse7::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownResponse7*>(&to_msg);
  auto& from = static_cast<const UnknownResponse7&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownResponse7)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownResponse7::CopyFrom(const UnknownResponse7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownResponse7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownResponse7::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownResponse7::InternalSwap(UnknownResponse7* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownResponse7, _impl_.unknown_field_2_)
      + sizeof(UnknownResponse7::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownResponse7, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownResponse7::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[23]);
}

// ===================================================================

class UnknownRequest8::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest8>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest8::UnknownRequest8(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest8)
}
UnknownRequest8::UnknownRequest8(const UnknownRequest8& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest8* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest8)
}

inline void UnknownRequest8::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest8::~UnknownRequest8() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest8)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest8::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest8::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest8::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest8)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest8::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest8::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest8)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest8)
  return target;
}

size_t UnknownRequest8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest8)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest8::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest8::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest8::GetClassData() const { return &_class_data_; }


void UnknownRequest8::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest8*>(&to_msg);
  auto& from = static_cast<const UnknownRequest8&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest8)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest8::CopyFrom(const UnknownRequest8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest8::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest8::InternalSwap(UnknownRequest8* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest8::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[24]);
}

// ===================================================================

class UnknownResponse8::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownResponse8>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownResponse8::UnknownResponse8(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownResponse8)
}
UnknownResponse8::UnknownResponse8(const UnknownResponse8& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownResponse8* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownResponse8)
}

inline void UnknownResponse8::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownResponse8::~UnknownResponse8() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownResponse8)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownResponse8::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownResponse8::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownResponse8::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownResponse8)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownResponse8::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownResponse8::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownResponse8)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownResponse8)
  return target;
}

size_t UnknownResponse8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownResponse8)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownResponse8::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownResponse8::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownResponse8::GetClassData() const { return &_class_data_; }


void UnknownResponse8::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownResponse8*>(&to_msg);
  auto& from = static_cast<const UnknownResponse8&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownResponse8)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownResponse8::CopyFrom(const UnknownResponse8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownResponse8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownResponse8::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownResponse8::InternalSwap(UnknownResponse8* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownResponse8, _impl_.unknown_field_2_)
      + sizeof(UnknownResponse8::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownResponse8, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownResponse8::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[25]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace openfoxwq
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::openfoxwq::LoginBroadcastServerRequest*
Arena::CreateMaybeMessage< ::openfoxwq::LoginBroadcastServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LoginBroadcastServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::LoginBroadcastServerResponse*
Arena::CreateMaybeMessage< ::openfoxwq::LoginBroadcastServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LoginBroadcastServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::ListBroadcastsRequest*
Arena::CreateMaybeMessage< ::openfoxwq::ListBroadcastsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::ListBroadcastsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::ListBroadcastsResponse*
Arena::CreateMaybeMessage< ::openfoxwq::ListBroadcastsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::ListBroadcastsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::EnterBroadcastRequest*
Arena::CreateMaybeMessage< ::openfoxwq::EnterBroadcastRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::EnterBroadcastRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::EnterBroadcastResponse*
Arena::CreateMaybeMessage< ::openfoxwq::EnterBroadcastResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::EnterBroadcastResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::LeaveBroadcastRequest*
Arena::CreateMaybeMessage< ::openfoxwq::LeaveBroadcastRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LeaveBroadcastRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::LeaveBroadcastResponse*
Arena::CreateMaybeMessage< ::openfoxwq::LeaveBroadcastResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LeaveBroadcastResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::HeartbeatRequest*
Arena::CreateMaybeMessage< ::openfoxwq::HeartbeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::HeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::BroadcastSettingEvent*
Arena::CreateMaybeMessage< ::openfoxwq::BroadcastSettingEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::BroadcastSettingEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::BroadcastStateEvent_BroadcastState*
Arena::CreateMaybeMessage< ::openfoxwq::BroadcastStateEvent_BroadcastState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::BroadcastStateEvent_BroadcastState >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::BroadcastStateEvent*
Arena::CreateMaybeMessage< ::openfoxwq::BroadcastStateEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::BroadcastStateEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::BroadcastMoveEvent*
Arena::CreateMaybeMessage< ::openfoxwq::BroadcastMoveEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::BroadcastMoveEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::BroadcastGameResultEvent*
Arena::CreateMaybeMessage< ::openfoxwq::BroadcastGameResultEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::BroadcastGameResultEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::BroadcastTimeControlEvent*
Arena::CreateMaybeMessage< ::openfoxwq::BroadcastTimeControlEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::BroadcastTimeControlEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest1*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest1 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest2*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest2 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest3*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest3 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest4*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest4 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest5*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest5 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest5 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest6*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest6 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest6 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownResponse6*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownResponse6 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownResponse6 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest7*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest7 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest7 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownResponse7*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownResponse7 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownResponse7 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest8*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest8 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest8 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownResponse8*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownResponse8 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownResponse8 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
