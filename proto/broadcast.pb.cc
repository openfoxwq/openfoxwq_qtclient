// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/broadcast.proto

#include "proto/broadcast.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace openfoxwq {
PROTOBUF_CONSTEXPR LoginBroadcastServerRequest::LoginBroadcastServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_4_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_6_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_7_)*/int64_t{0}} {}
struct LoginBroadcastServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginBroadcastServerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginBroadcastServerRequestDefaultTypeInternal() {}
  union {
    LoginBroadcastServerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginBroadcastServerRequestDefaultTypeInternal _LoginBroadcastServerRequest_default_instance_;
PROTOBUF_CONSTEXPR LoginBroadcastServerResponse::LoginBroadcastServerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_3_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct LoginBroadcastServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginBroadcastServerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginBroadcastServerResponseDefaultTypeInternal() {}
  union {
    LoginBroadcastServerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginBroadcastServerResponseDefaultTypeInternal _LoginBroadcastServerResponse_default_instance_;
PROTOBUF_CONSTEXPR ListRoomsRequest::ListRoomsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}} {}
struct ListRoomsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRoomsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRoomsRequestDefaultTypeInternal() {}
  union {
    ListRoomsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRoomsRequestDefaultTypeInternal _ListRoomsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListRoomsResponse::ListRoomsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.room_info_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.page_index_)*/int64_t{0}
  , /*decltype(_impl_.page_count_)*/int64_t{0}} {}
struct ListRoomsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRoomsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRoomsResponseDefaultTypeInternal() {}
  union {
    ListRoomsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRoomsResponseDefaultTypeInternal _ListRoomsResponse_default_instance_;
PROTOBUF_CONSTEXPR EnterRoomRequest::EnterRoomRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}} {}
struct EnterRoomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterRoomRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterRoomRequestDefaultTypeInternal() {}
  union {
    EnterRoomRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterRoomRequestDefaultTypeInternal _EnterRoomRequest_default_instance_;
PROTOBUF_CONSTEXPR EnterRoomResponse::EnterRoomResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}} {}
struct EnterRoomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterRoomResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterRoomResponseDefaultTypeInternal() {}
  union {
    EnterRoomResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterRoomResponseDefaultTypeInternal _EnterRoomResponse_default_instance_;
PROTOBUF_CONSTEXPR LeaveRoomRequest::LeaveRoomRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}} {}
struct LeaveRoomRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveRoomRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveRoomRequestDefaultTypeInternal() {}
  union {
    LeaveRoomRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveRoomRequestDefaultTypeInternal _LeaveRoomRequest_default_instance_;
PROTOBUF_CONSTEXPR LeaveRoomResponse::LeaveRoomResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}} {}
struct LeaveRoomResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LeaveRoomResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LeaveRoomResponseDefaultTypeInternal() {}
  union {
    LeaveRoomResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LeaveRoomResponseDefaultTypeInternal _LeaveRoomResponse_default_instance_;
PROTOBUF_CONSTEXPR HeartbeatRequest::HeartbeatRequest(
    ::_pbi::ConstantInitialized) {}
struct HeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatRequestDefaultTypeInternal() {}
  union {
    HeartbeatRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;
PROTOBUF_CONSTEXPR RoomConfigEvent_RoomConfig::RoomConfigEvent_RoomConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_first_)*/int64_t{0}
  , /*decltype(_impl_.player_id_second_)*/int64_t{0}
  , /*decltype(_impl_.handicap_)*/int64_t{0}
  , /*decltype(_impl_.komi_)*/int64_t{0}
  , /*decltype(_impl_.main_time_sec_)*/int64_t{0}
  , /*decltype(_impl_.byoyomi_time_sec_)*/int64_t{0}
  , /*decltype(_impl_.byoyomi_periods_)*/int64_t{0}
  , /*decltype(_impl_.board_size_)*/int64_t{0}
  , /*decltype(_impl_.chinese_rules_)*/false} {}
struct RoomConfigEvent_RoomConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomConfigEvent_RoomConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomConfigEvent_RoomConfigDefaultTypeInternal() {}
  union {
    RoomConfigEvent_RoomConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomConfigEvent_RoomConfigDefaultTypeInternal _RoomConfigEvent_RoomConfig_default_instance_;
PROTOBUF_CONSTEXPR RoomConfigEvent::RoomConfigEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.config_)*/nullptr
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}
  , /*decltype(_impl_.player_id_black_)*/int64_t{0}
  , /*decltype(_impl_.player_id_white_)*/int64_t{0}} {}
struct RoomConfigEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomConfigEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomConfigEventDefaultTypeInternal() {}
  union {
    RoomConfigEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomConfigEventDefaultTypeInternal _RoomConfigEvent_default_instance_;
PROTOBUF_CONSTEXPR RoomStateEvent_RoomState::RoomStateEvent_RoomState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.encoded_moves_)*/{}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}} {}
struct RoomStateEvent_RoomStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomStateEvent_RoomStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomStateEvent_RoomStateDefaultTypeInternal() {}
  union {
    RoomStateEvent_RoomState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomStateEvent_RoomStateDefaultTypeInternal _RoomStateEvent_RoomState_default_instance_;
PROTOBUF_CONSTEXPR RoomStateEvent::RoomStateEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.state_)*/nullptr
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}
  , /*decltype(_impl_.move_count_)*/int64_t{0}} {}
struct RoomStateEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomStateEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomStateEventDefaultTypeInternal() {}
  union {
    RoomStateEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomStateEventDefaultTypeInternal _RoomStateEvent_default_instance_;
PROTOBUF_CONSTEXPR RoomMoveEvent::RoomMoveEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}
  , /*decltype(_impl_.encoded_move_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_5_)*/int64_t{0}
  , /*decltype(_impl_.time_left_)*/int64_t{0}
  , /*decltype(_impl_.move_number_)*/int64_t{0}} {}
struct RoomMoveEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomMoveEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomMoveEventDefaultTypeInternal() {}
  union {
    RoomMoveEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomMoveEventDefaultTypeInternal _RoomMoveEvent_default_instance_;
PROTOBUF_CONSTEXPR RoomGameResultEvent::RoomGameResultEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}
  , /*decltype(_impl_.score_lead_)*/int64_t{0}
  , /*decltype(_impl_.winner_)*/0} {}
struct RoomGameResultEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomGameResultEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomGameResultEventDefaultTypeInternal() {}
  union {
    RoomGameResultEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomGameResultEventDefaultTypeInternal _RoomGameResultEvent_default_instance_;
PROTOBUF_CONSTEXPR RoomTimeControlEvent::RoomTimeControlEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.room_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_4_)*/int64_t{0}
  , /*decltype(_impl_.current_period_)*/int64_t{0}
  , /*decltype(_impl_.time_left_)*/int64_t{0}} {}
struct RoomTimeControlEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomTimeControlEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomTimeControlEventDefaultTypeInternal() {}
  union {
    RoomTimeControlEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomTimeControlEventDefaultTypeInternal _RoomTimeControlEvent_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest1::UnknownRequest1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.unknown_field_1_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownRequest1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest1DefaultTypeInternal() {}
  union {
    UnknownRequest1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest1DefaultTypeInternal _UnknownRequest1_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest2::UnknownRequest2(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_3_)*/int64_t{0}} {}
struct UnknownRequest2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest2DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest2DefaultTypeInternal() {}
  union {
    UnknownRequest2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest2DefaultTypeInternal _UnknownRequest2_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest3::UnknownRequest3(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest3DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest3DefaultTypeInternal() {}
  union {
    UnknownRequest3 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest3DefaultTypeInternal _UnknownRequest3_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest4::UnknownRequest4(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_10_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_30_)*/int64_t{0}} {}
struct UnknownRequest4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest4DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest4DefaultTypeInternal() {}
  union {
    UnknownRequest4 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest4DefaultTypeInternal _UnknownRequest4_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest5::UnknownRequest5(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest5DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest5DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest5DefaultTypeInternal() {}
  union {
    UnknownRequest5 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest5DefaultTypeInternal _UnknownRequest5_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest6::UnknownRequest6(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest6DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest6DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest6DefaultTypeInternal() {}
  union {
    UnknownRequest6 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest6DefaultTypeInternal _UnknownRequest6_default_instance_;
PROTOBUF_CONSTEXPR UnknownResponse6::UnknownResponse6(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownResponse6DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownResponse6DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownResponse6DefaultTypeInternal() {}
  union {
    UnknownResponse6 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownResponse6DefaultTypeInternal _UnknownResponse6_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest7::UnknownRequest7(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest7DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest7DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest7DefaultTypeInternal() {}
  union {
    UnknownRequest7 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest7DefaultTypeInternal _UnknownRequest7_default_instance_;
PROTOBUF_CONSTEXPR UnknownResponse7::UnknownResponse7(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownResponse7DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownResponse7DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownResponse7DefaultTypeInternal() {}
  union {
    UnknownResponse7 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownResponse7DefaultTypeInternal _UnknownResponse7_default_instance_;
PROTOBUF_CONSTEXPR UnknownRequest8::UnknownRequest8(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}} {}
struct UnknownRequest8DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownRequest8DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownRequest8DefaultTypeInternal() {}
  union {
    UnknownRequest8 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownRequest8DefaultTypeInternal _UnknownRequest8_default_instance_;
PROTOBUF_CONSTEXPR UnknownResponse8::UnknownResponse8(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.player_id_)*/int64_t{0}
  , /*decltype(_impl_.unknown_field_2_)*/int64_t{0}} {}
struct UnknownResponse8DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnknownResponse8DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnknownResponse8DefaultTypeInternal() {}
  union {
    UnknownResponse8 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnknownResponse8DefaultTypeInternal _UnknownResponse8_default_instance_;
}  // namespace openfoxwq
static ::_pb::Metadata file_level_metadata_proto_2fbroadcast_2eproto[27];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2fbroadcast_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2fbroadcast_2eproto = nullptr;

const uint32_t TableStruct_proto_2fbroadcast_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_3_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_4_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_6_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerRequest, _impl_.unknown_field_7_),
  2,
  3,
  1,
  4,
  0,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LoginBroadcastServerResponse, _impl_.unknown_field_3_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsRequest, _impl_.unknown_field_2_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsRequest, _impl_.unknown_field_3_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsResponse, _impl_.room_info_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsResponse, _impl_.page_index_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsResponse, _impl_.page_count_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::ListRoomsResponse, _impl_.unknown_field_1_),
  ~0u,
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomRequest, _impl_.room_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomResponse, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomResponse, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::EnterRoomResponse, _impl_.unknown_field_1_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomRequest, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomRequest, _impl_.room_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomResponse, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomResponse, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::LeaveRoomResponse, _impl_.unknown_field_1_),
  1,
  2,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::HeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.player_id_first_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.player_id_second_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.handicap_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.komi_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.main_time_sec_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.byoyomi_time_sec_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.byoyomi_periods_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.chinese_rules_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent_RoomConfig, _impl_.board_size_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  8,
  7,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _impl_.player_id_black_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _impl_.player_id_white_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomConfigEvent, _impl_.config_),
  1,
  3,
  4,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent_RoomState, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent_RoomState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent_RoomState, _impl_.encoded_moves_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent_RoomState, _impl_.unknown_field_2_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent_RoomState, _impl_.unknown_field_3_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomStateEvent, _impl_.move_count_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_.encoded_move_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_.time_left_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_.move_number_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomMoveEvent, _impl_.unknown_field_5_),
  0,
  1,
  2,
  4,
  5,
  3,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _impl_.winner_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _impl_.score_lead_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomGameResultEvent, _impl_.unknown_field_2_),
  2,
  4,
  3,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _impl_.room_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _impl_.current_period_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _impl_.time_left_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::RoomTimeControlEvent, _impl_.unknown_field_4_),
  0,
  1,
  3,
  4,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _impl_.unknown_field_1_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest1, _impl_.unknown_field_2_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_.unknown_field_2_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest2, _impl_.unknown_field_3_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest3, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest3, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_.unknown_field_10_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest4, _impl_.unknown_field_30_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest5, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest5, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest5, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest6, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest6, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse6, _impl_.unknown_field_2_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest7, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest7, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse7, _impl_.unknown_field_2_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest8, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownRequest8, _impl_.player_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _impl_.player_id_),
  PROTOBUF_FIELD_OFFSET(::openfoxwq::UnknownResponse8, _impl_.unknown_field_2_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, -1, sizeof(::openfoxwq::LoginBroadcastServerRequest)},
  { 20, 29, -1, sizeof(::openfoxwq::LoginBroadcastServerResponse)},
  { 32, 41, -1, sizeof(::openfoxwq::ListRoomsRequest)},
  { 44, 54, -1, sizeof(::openfoxwq::ListRoomsResponse)},
  { 58, 66, -1, sizeof(::openfoxwq::EnterRoomRequest)},
  { 68, 77, -1, sizeof(::openfoxwq::EnterRoomResponse)},
  { 80, 88, -1, sizeof(::openfoxwq::LeaveRoomRequest)},
  { 90, 99, -1, sizeof(::openfoxwq::LeaveRoomResponse)},
  { 102, -1, -1, sizeof(::openfoxwq::HeartbeatRequest)},
  { 108, 123, -1, sizeof(::openfoxwq::RoomConfigEvent_RoomConfig)},
  { 132, 143, -1, sizeof(::openfoxwq::RoomConfigEvent)},
  { 148, 157, -1, sizeof(::openfoxwq::RoomStateEvent_RoomState)},
  { 160, 170, -1, sizeof(::openfoxwq::RoomStateEvent)},
  { 174, 186, -1, sizeof(::openfoxwq::RoomMoveEvent)},
  { 192, 203, -1, sizeof(::openfoxwq::RoomGameResultEvent)},
  { 208, 219, -1, sizeof(::openfoxwq::RoomTimeControlEvent)},
  { 224, 232, -1, sizeof(::openfoxwq::UnknownRequest1)},
  { 234, 243, -1, sizeof(::openfoxwq::UnknownRequest2)},
  { 246, 253, -1, sizeof(::openfoxwq::UnknownRequest3)},
  { 254, 263, -1, sizeof(::openfoxwq::UnknownRequest4)},
  { 266, 273, -1, sizeof(::openfoxwq::UnknownRequest5)},
  { 274, 281, -1, sizeof(::openfoxwq::UnknownRequest6)},
  { 282, 290, -1, sizeof(::openfoxwq::UnknownResponse6)},
  { 292, 299, -1, sizeof(::openfoxwq::UnknownRequest7)},
  { 300, 308, -1, sizeof(::openfoxwq::UnknownResponse7)},
  { 310, 317, -1, sizeof(::openfoxwq::UnknownRequest8)},
  { 318, 326, -1, sizeof(::openfoxwq::UnknownResponse8)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::openfoxwq::_LoginBroadcastServerRequest_default_instance_._instance,
  &::openfoxwq::_LoginBroadcastServerResponse_default_instance_._instance,
  &::openfoxwq::_ListRoomsRequest_default_instance_._instance,
  &::openfoxwq::_ListRoomsResponse_default_instance_._instance,
  &::openfoxwq::_EnterRoomRequest_default_instance_._instance,
  &::openfoxwq::_EnterRoomResponse_default_instance_._instance,
  &::openfoxwq::_LeaveRoomRequest_default_instance_._instance,
  &::openfoxwq::_LeaveRoomResponse_default_instance_._instance,
  &::openfoxwq::_HeartbeatRequest_default_instance_._instance,
  &::openfoxwq::_RoomConfigEvent_RoomConfig_default_instance_._instance,
  &::openfoxwq::_RoomConfigEvent_default_instance_._instance,
  &::openfoxwq::_RoomStateEvent_RoomState_default_instance_._instance,
  &::openfoxwq::_RoomStateEvent_default_instance_._instance,
  &::openfoxwq::_RoomMoveEvent_default_instance_._instance,
  &::openfoxwq::_RoomGameResultEvent_default_instance_._instance,
  &::openfoxwq::_RoomTimeControlEvent_default_instance_._instance,
  &::openfoxwq::_UnknownRequest1_default_instance_._instance,
  &::openfoxwq::_UnknownRequest2_default_instance_._instance,
  &::openfoxwq::_UnknownRequest3_default_instance_._instance,
  &::openfoxwq::_UnknownRequest4_default_instance_._instance,
  &::openfoxwq::_UnknownRequest5_default_instance_._instance,
  &::openfoxwq::_UnknownRequest6_default_instance_._instance,
  &::openfoxwq::_UnknownResponse6_default_instance_._instance,
  &::openfoxwq::_UnknownRequest7_default_instance_._instance,
  &::openfoxwq::_UnknownResponse7_default_instance_._instance,
  &::openfoxwq::_UnknownRequest8_default_instance_._instance,
  &::openfoxwq::_UnknownResponse8_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2fbroadcast_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025proto/broadcast.proto\022\topenfoxwq\032\033goog"
  "le/protobuf/empty.proto\032\025proto/reqOption"
  ".proto\032\022proto/common.proto\"\264\001\n\033LoginBroa"
  "dcastServerRequest\022\021\n\tplayer_id\030\001 \002(\003\022\017\n"
  "\007version\030\002 \002(\003\022\r\n\005token\030\005 \002(\t\022\027\n\017unknown"
  "_field_3\030\003 \002(\003\022\027\n\017unknown_field_4\030\004 \002(\t\022"
  "\027\n\017unknown_field_6\030\006 \002(\003\022\027\n\017unknown_fiel"
  "d_7\030\007 \002(\003\"c\n\034LoginBroadcastServerRespons"
  "e\022\021\n\tplayer_id\030\002 \001(\003\022\027\n\017unknown_field_1\030"
  "\001 \001(\003\022\027\n\017unknown_field_3\030\003 \001(\t\"W\n\020ListRo"
  "omsRequest\022\021\n\tplayer_id\030\001 \001(\003\022\027\n\017unknown"
  "_field_2\030\002 \001(\003\022\027\n\017unknown_field_3\030\003 \001(\003\""
  "\205\001\n\021ListRoomsResponse\022/\n\troom_info\030\003 \003(\013"
  "2\034.openfoxwq.BroadcastRoomInfo\022\022\n\npage_i"
  "ndex\030\004 \001(\003\022\022\n\npage_count\030\005 \001(\003\022\027\n\017unknow"
  "n_field_1\030\001 \001(\003\"6\n\020EnterRoomRequest\022\021\n\tp"
  "layer_id\030\001 \002(\003\022\017\n\007room_id\030\002 \002(\003\"P\n\021Enter"
  "RoomResponse\022\021\n\tplayer_id\030\002 \002(\003\022\017\n\007room_"
  "id\030\003 \002(\003\022\027\n\017unknown_field_1\030\001 \001(\003\"6\n\020Lea"
  "veRoomRequest\022\021\n\tplayer_id\030\001 \002(\003\022\017\n\007room"
  "_id\030\002 \002(\003\"P\n\021LeaveRoomResponse\022\021\n\tplayer"
  "_id\030\002 \002(\003\022\017\n\007room_id\030\003 \002(\003\022\027\n\017unknown_fi"
  "eld_1\030\001 \001(\003\"\022\n\020HeartbeatRequest\"\365\002\n\017Room"
  "ConfigEvent\022\021\n\tplayer_id\030\002 \002(\003\022\027\n\017player"
  "_id_black\030\004 \001(\003\022\027\n\017player_id_white\030\005 \001(\003"
  "\022\017\n\007room_id\030\003 \002(\003\0225\n\006config\030\006 \001(\0132%.open"
  "foxwq.RoomConfigEvent.RoomConfig\032\324\001\n\nRoo"
  "mConfig\022\027\n\017player_id_first\030\001 \002(\003\022\030\n\020play"
  "er_id_second\030\002 \002(\003\022\020\n\010handicap\030\004 \001(\003\022\014\n\004"
  "komi\030\005 \001(\003\022\025\n\rmain_time_sec\030\007 \002(\003\022\030\n\020byo"
  "yomi_time_sec\030\010 \002(\003\022\027\n\017byoyomi_periods\030\t"
  " \002(\003\022\025\n\rchinese_rules\030\n \001(\010\022\022\n\nboard_siz"
  "e\030\020 \002(\003\"\322\001\n\016RoomStateEvent\022\021\n\tplayer_id\030"
  "\002 \002(\003\022\017\n\007room_id\030\003 \002(\003\0222\n\005state\030\004 \001(\0132#."
  "openfoxwq.RoomStateEvent.RoomState\022\022\n\nmo"
  "ve_count\030\006 \001(\003\032T\n\tRoomState\022\025\n\rencoded_m"
  "oves\030\001 \003(\003\022\027\n\017unknown_field_2\030\002 \001(\003\022\027\n\017u"
  "nknown_field_3\030\003 \001(\003\"\212\001\n\rRoomMoveEvent\022\021"
  "\n\tplayer_id\030\002 \002(\003\022\017\n\007room_id\030\003 \002(\003\022\024\n\014en"
  "coded_move\030\004 \001(\003\022\021\n\ttime_left\030\006 \001(\003\022\023\n\013m"
  "ove_number\030\010 \001(\003\022\027\n\017unknown_field_5\030\005 \001("
  "\003\"\216\001\n\023RoomGameResultEvent\022\017\n\007room_id\030\003 \002"
  "(\003\022 \n\006winner\030\004 \001(\0162\020.openfoxwq.Color\022\022\n\n"
  "score_lead\030\005 \001(\003\022\027\n\017unknown_field_1\030\001 \001("
  "\003\022\027\n\017unknown_field_2\030\002 \001(\003\"~\n\024RoomTimeCo"
  "ntrolEvent\022\021\n\tplayer_id\030\002 \002(\003\022\017\n\007room_id"
  "\030\003 \002(\003\022\026\n\016current_period\030\005 \001(\003\022\021\n\ttime_l"
  "eft\030\006 \001(\003\022\027\n\017unknown_field_4\030\004 \001(\003\"C\n\017Un"
  "knownRequest1\022\027\n\017unknown_field_1\030\001 \002(\003\022\027"
  "\n\017unknown_field_2\030\002 \002(\003\"V\n\017UnknownReques"
  "t2\022\021\n\tplayer_id\030\001 \002(\003\022\027\n\017unknown_field_2"
  "\030\002 \001(\003\022\027\n\017unknown_field_3\030\003 \001(\003\"$\n\017Unkno"
  "wnRequest3\022\021\n\tplayer_id\030\001 \002(\003\"X\n\017Unknown"
  "Request4\022\021\n\tplayer_id\030\001 \002(\003\022\030\n\020unknown_f"
  "ield_10\030\n \001(\003\022\030\n\020unknown_field_30\030\036 \001(\003\""
  "$\n\017UnknownRequest5\022\021\n\tplayer_id\030\001 \002(\003\"$\n"
  "\017UnknownRequest6\022\021\n\tplayer_id\030\001 \002(\003\">\n\020U"
  "nknownResponse6\022\021\n\tplayer_id\030\001 \002(\003\022\027\n\017un"
  "known_field_2\030\002 \001(\003\"$\n\017UnknownRequest7\022\021"
  "\n\tplayer_id\030\001 \002(\003\">\n\020UnknownResponse7\022\021\n"
  "\tplayer_id\030\001 \002(\003\022\027\n\017unknown_field_2\030\002 \001("
  "\003\"$\n\017UnknownRequest8\022\021\n\tplayer_id\030\001 \002(\003\""
  ">\n\020UnknownResponse8\022\021\n\tplayer_id\030\001 \002(\003\022\027"
  "\n\017unknown_field_2\030\002 \001(\0032\232\014\n\tBroadcast\022d\n"
  "\005Login\022&.openfoxwq.LoginBroadcastServerR"
  "equest\032\'.openfoxwq.LoginBroadcastServerR"
  "esponse\"\n\202\265\030\006\010\240\037\020\245\037\022U\n\tListRooms\022\033.openf"
  "oxwq.ListRoomsRequest\032\034.openfoxwq.ListRo"
  "omsResponse\"\013\202\265\030\007\010\264\215\001\020\314\0370\001\022R\n\tEnterRoom\022"
  "\033.openfoxwq.EnterRoomRequest\032\034.openfoxwq"
  ".EnterRoomResponse\"\n\202\265\030\006\010\304\'\020\311\'\022W\n\026Listen"
  "RoomConfigEvents\022\026.google.protobuf.Empty"
  "\032\032.openfoxwq.RoomConfigEvent\"\007\202\265\030\003\020\231(0\001\022"
  "U\n\025ListenRoomStateEvents\022\026.google.protob"
  "uf.Empty\032\031.openfoxwq.RoomStateEvent\"\007\202\265\030"
  "\003\020\233(0\001\022S\n\024ListenRoomMoveEvents\022\026.google."
  "protobuf.Empty\032\030.openfoxwq.RoomMoveEvent"
  "\"\007\202\265\030\003\020\33660\001\022_\n\032ListenRoomGameResultEvent"
  "s\022\026.google.protobuf.Empty\032\036.openfoxwq.Ro"
  "omGameResultEvent\"\007\202\265\030\003\020\22280\001\022a\n\033ListenRo"
  "omTimeControlEvents\022\026.google.protobuf.Em"
  "pty\032\037.openfoxwq.RoomTimeControlEvent\"\007\202\265"
  "\030\003\020\23680\001\022R\n\tLeaveRoom\022\033.openfoxwq.LeaveRo"
  "omRequest\032\034.openfoxwq.LeaveRoomResponse\""
  "\n\202\265\030\006\010\330\'\020\335\'\022H\n\tHeartbeat\022\033.openfoxwq.Hea"
  "rtbeatRequest\032\026.google.protobuf.Empty\"\006\202"
  "\265\030\002\010d\022M\n\016UnknownMethod1\022\032.openfoxwq.Unkn"
  "ownRequest1\032\026.google.protobuf.Empty\"\007\202\265\030"
  "\003\010\344]\022M\n\016UnknownMethod2\022\032.openfoxwq.Unkno"
  "wnRequest2\032\026.google.protobuf.Empty\"\007\202\265\030\003"
  "\010\260m\022M\n\016UnknownMethod3\022\032.openfoxwq.Unknow"
  "nRequest3\032\026.google.protobuf.Empty\"\007\202\265\030\003\010"
  "\232G\022M\n\016UnknownMethod4\022\032.openfoxwq.Unknown"
  "Request4\032\026.google.protobuf.Empty\"\007\202\265\030\003\010\321"
  "s\022N\n\016UnknownMethod5\022\032.openfoxwq.UnknownR"
  "equest5\032\026.google.protobuf.Empty\"\010\202\265\030\004\010\271\215"
  "\001\022W\n\016UnknownMethod6\022\032.openfoxwq.UnknownR"
  "equest6\032\033.openfoxwq.UnknownResponse6\"\014\202\265"
  "\030\010\010\246\352\001\020\247\352\001\022W\n\016UnknownMethod7\022\032.openfoxwq"
  ".UnknownRequest7\032\033.openfoxwq.UnknownResp"
  "onse7\"\014\202\265\030\010\010\250\352\001\020\251\352\001\022W\n\016UnknownMethod8\022\032."
  "openfoxwq.UnknownRequest8\032\033.openfoxwq.Un"
  "knownResponse8\"\014\202\265\030\010\010\252\352\001\020\253\352\001B%Z#github.c"
  "om/ale64bit/openfoxwq/proto"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fbroadcast_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_proto_2fcommon_2eproto,
  &::descriptor_table_proto_2freqOption_2eproto,
};
static ::_pbi::once_flag descriptor_table_proto_2fbroadcast_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fbroadcast_2eproto = {
    false, false, 4147, descriptor_table_protodef_proto_2fbroadcast_2eproto,
    "proto/broadcast.proto",
    &descriptor_table_proto_2fbroadcast_2eproto_once, descriptor_table_proto_2fbroadcast_2eproto_deps, 3, 27,
    schemas, file_default_instances, TableStruct_proto_2fbroadcast_2eproto::offsets,
    file_level_metadata_proto_2fbroadcast_2eproto, file_level_enum_descriptors_proto_2fbroadcast_2eproto,
    file_level_service_descriptors_proto_2fbroadcast_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fbroadcast_2eproto_getter() {
  return &descriptor_table_proto_2fbroadcast_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fbroadcast_2eproto(&descriptor_table_proto_2fbroadcast_2eproto);
namespace openfoxwq {

// ===================================================================

class LoginBroadcastServerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginBroadcastServerRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_unknown_field_4(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_6(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_unknown_field_7(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000007f) ^ 0x0000007f) != 0;
  }
};

LoginBroadcastServerRequest::LoginBroadcastServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LoginBroadcastServerRequest)
}
LoginBroadcastServerRequest::LoginBroadcastServerRequest(const LoginBroadcastServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginBroadcastServerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_4_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_6_){}
    , decltype(_impl_.unknown_field_7_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.unknown_field_4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_field_4_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_unknown_field_4()) {
    _this->_impl_.unknown_field_4_.Set(from._internal_unknown_field_4(), 
      _this->GetArenaForAllocation());
  }
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_token()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_7_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_7_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LoginBroadcastServerRequest)
}

inline void LoginBroadcastServerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_4_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.version_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
    , decltype(_impl_.unknown_field_6_){int64_t{0}}
    , decltype(_impl_.unknown_field_7_){int64_t{0}}
  };
  _impl_.unknown_field_4_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_field_4_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginBroadcastServerRequest::~LoginBroadcastServerRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.LoginBroadcastServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginBroadcastServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unknown_field_4_.Destroy();
  _impl_.token_.Destroy();
}

void LoginBroadcastServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginBroadcastServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LoginBroadcastServerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.unknown_field_4_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_7_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_7_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginBroadcastServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_version(&has_bits);
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required string unknown_field_4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_unknown_field_4();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.LoginBroadcastServerRequest.unknown_field_4");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // required string token = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.LoginBroadcastServerRequest.token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_unknown_field_6(&has_bits);
          _impl_.unknown_field_6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_7 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_unknown_field_7(&has_bits);
          _impl_.unknown_field_7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginBroadcastServerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LoginBroadcastServerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required int64 version = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_version(), target);
  }

  // required int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  // required string unknown_field_4 = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_unknown_field_4().data(), static_cast<int>(this->_internal_unknown_field_4().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.LoginBroadcastServerRequest.unknown_field_4");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_unknown_field_4(), target);
  }

  // required string token = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.LoginBroadcastServerRequest.token");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_token(), target);
  }

  // required int64 unknown_field_6 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_unknown_field_6(), target);
  }

  // required int64 unknown_field_7 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_unknown_field_7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LoginBroadcastServerRequest)
  return target;
}

size_t LoginBroadcastServerRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.LoginBroadcastServerRequest)
  size_t total_size = 0;

  if (_internal_has_unknown_field_4()) {
    // required string unknown_field_4 = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unknown_field_4());
  }

  if (_internal_has_token()) {
    // required string token = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (_internal_has_player_id()) {
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_version()) {
    // required int64 version = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_version());
  }

  if (_internal_has_unknown_field_3()) {
    // required int64 unknown_field_3 = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
  }

  if (_internal_has_unknown_field_6()) {
    // required int64 unknown_field_6 = 6;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_6());
  }

  if (_internal_has_unknown_field_7()) {
    // required int64 unknown_field_7 = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_7());
  }

  return total_size;
}
size_t LoginBroadcastServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LoginBroadcastServerRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string unknown_field_4 = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unknown_field_4());

    // required string token = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());

    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 version = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_version());

    // required int64 unknown_field_3 = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());

    // required int64 unknown_field_6 = 6;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_6());

    // required int64 unknown_field_7 = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_7());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginBroadcastServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginBroadcastServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginBroadcastServerRequest::GetClassData() const { return &_class_data_; }


void LoginBroadcastServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginBroadcastServerRequest*>(&to_msg);
  auto& from = static_cast<const LoginBroadcastServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LoginBroadcastServerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_unknown_field_4(from._internal_unknown_field_4());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_token(from._internal_token());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.unknown_field_6_ = from._impl_.unknown_field_6_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.unknown_field_7_ = from._impl_.unknown_field_7_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginBroadcastServerRequest::CopyFrom(const LoginBroadcastServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LoginBroadcastServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginBroadcastServerRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void LoginBroadcastServerRequest::InternalSwap(LoginBroadcastServerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unknown_field_4_, lhs_arena,
      &other->_impl_.unknown_field_4_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginBroadcastServerRequest, _impl_.unknown_field_7_)
      + sizeof(LoginBroadcastServerRequest::_impl_.unknown_field_7_)
      - PROTOBUF_FIELD_OFFSET(LoginBroadcastServerRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginBroadcastServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[0]);
}

// ===================================================================

class LoginBroadcastServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginBroadcastServerResponse>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LoginBroadcastServerResponse::LoginBroadcastServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LoginBroadcastServerResponse)
}
LoginBroadcastServerResponse::LoginBroadcastServerResponse(const LoginBroadcastServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginBroadcastServerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.unknown_field_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_field_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_unknown_field_3()) {
    _this->_impl_.unknown_field_3_.Set(from._internal_unknown_field_3(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.player_id_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.player_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LoginBroadcastServerResponse)
}

inline void LoginBroadcastServerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_3_){}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
  _impl_.unknown_field_3_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unknown_field_3_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginBroadcastServerResponse::~LoginBroadcastServerResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.LoginBroadcastServerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginBroadcastServerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unknown_field_3_.Destroy();
}

void LoginBroadcastServerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginBroadcastServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LoginBroadcastServerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.unknown_field_3_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.player_id_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.player_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginBroadcastServerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_unknown_field_3();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "openfoxwq.LoginBroadcastServerResponse.unknown_field_3");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginBroadcastServerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LoginBroadcastServerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // optional int64 player_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // optional string unknown_field_3 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_unknown_field_3().data(), static_cast<int>(this->_internal_unknown_field_3().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "openfoxwq.LoginBroadcastServerResponse.unknown_field_3");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LoginBroadcastServerResponse)
  return target;
}

size_t LoginBroadcastServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LoginBroadcastServerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string unknown_field_3 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_unknown_field_3());
    }

    // optional int64 unknown_field_1 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
    }

    // optional int64 player_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginBroadcastServerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginBroadcastServerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginBroadcastServerResponse::GetClassData() const { return &_class_data_; }


void LoginBroadcastServerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginBroadcastServerResponse*>(&to_msg);
  auto& from = static_cast<const LoginBroadcastServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LoginBroadcastServerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_unknown_field_3(from._internal_unknown_field_3());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginBroadcastServerResponse::CopyFrom(const LoginBroadcastServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LoginBroadcastServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginBroadcastServerResponse::IsInitialized() const {
  return true;
}

void LoginBroadcastServerResponse::InternalSwap(LoginBroadcastServerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unknown_field_3_, lhs_arena,
      &other->_impl_.unknown_field_3_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginBroadcastServerResponse, _impl_.player_id_)
      + sizeof(LoginBroadcastServerResponse::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(LoginBroadcastServerResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginBroadcastServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[1]);
}

// ===================================================================

class ListRoomsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ListRoomsRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

ListRoomsRequest::ListRoomsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.ListRoomsRequest)
}
ListRoomsRequest::ListRoomsRequest(const ListRoomsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListRoomsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.unknown_field_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.ListRoomsRequest)
}

inline void ListRoomsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
  };
}

ListRoomsRequest::~ListRoomsRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.ListRoomsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRoomsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListRoomsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListRoomsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.ListRoomsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRoomsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRoomsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.ListRoomsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // optional int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.ListRoomsRequest)
  return target;
}

size_t ListRoomsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.ListRoomsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 player_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
    }

    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

    // optional int64 unknown_field_3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRoomsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListRoomsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRoomsRequest::GetClassData() const { return &_class_data_; }


void ListRoomsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListRoomsRequest*>(&to_msg);
  auto& from = static_cast<const ListRoomsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.ListRoomsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRoomsRequest::CopyFrom(const ListRoomsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.ListRoomsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRoomsRequest::IsInitialized() const {
  return true;
}

void ListRoomsRequest::InternalSwap(ListRoomsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListRoomsRequest, _impl_.unknown_field_3_)
      + sizeof(ListRoomsRequest::_impl_.unknown_field_3_)
      - PROTOBUF_FIELD_OFFSET(ListRoomsRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRoomsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[2]);
}

// ===================================================================

class ListRoomsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ListRoomsResponse>()._impl_._has_bits_);
  static void set_has_page_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_page_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void ListRoomsResponse::clear_room_info() {
  _impl_.room_info_.Clear();
}
ListRoomsResponse::ListRoomsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.ListRoomsResponse)
}
ListRoomsResponse::ListRoomsResponse(const ListRoomsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListRoomsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.room_info_){from._impl_.room_info_}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.page_index_){}
    , decltype(_impl_.page_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.page_count_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.page_count_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.ListRoomsResponse)
}

inline void ListRoomsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.room_info_){arena}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.page_index_){int64_t{0}}
    , decltype(_impl_.page_count_){int64_t{0}}
  };
}

ListRoomsResponse::~ListRoomsResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.ListRoomsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListRoomsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.room_info_.~RepeatedPtrField();
}

void ListRoomsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListRoomsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.ListRoomsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.room_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.page_count_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.page_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRoomsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .openfoxwq.BroadcastRoomInfo room_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_room_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional int64 page_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_page_index(&has_bits);
          _impl_.page_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 page_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_page_count(&has_bits);
          _impl_.page_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRoomsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.ListRoomsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // repeated .openfoxwq.BroadcastRoomInfo room_info = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_room_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_room_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int64 page_index = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_page_index(), target);
  }

  // optional int64 page_count = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_page_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.ListRoomsResponse)
  return target;
}

size_t ListRoomsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.ListRoomsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .openfoxwq.BroadcastRoomInfo room_info = 3;
  total_size += 1UL * this->_internal_room_info_size();
  for (const auto& msg : this->_impl_.room_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 unknown_field_1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
    }

    // optional int64 page_index = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_page_index());
    }

    // optional int64 page_count = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_page_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRoomsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListRoomsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRoomsResponse::GetClassData() const { return &_class_data_; }


void ListRoomsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListRoomsResponse*>(&to_msg);
  auto& from = static_cast<const ListRoomsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.ListRoomsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.room_info_.MergeFrom(from._impl_.room_info_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.page_index_ = from._impl_.page_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.page_count_ = from._impl_.page_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRoomsResponse::CopyFrom(const ListRoomsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.ListRoomsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRoomsResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.room_info_))
    return false;
  return true;
}

void ListRoomsResponse::InternalSwap(ListRoomsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.room_info_.InternalSwap(&other->_impl_.room_info_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListRoomsResponse, _impl_.page_count_)
      + sizeof(ListRoomsResponse::_impl_.page_count_)
      - PROTOBUF_FIELD_OFFSET(ListRoomsResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRoomsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[3]);
}

// ===================================================================

class EnterRoomRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<EnterRoomRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

EnterRoomRequest::EnterRoomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.EnterRoomRequest)
}
EnterRoomRequest::EnterRoomRequest(const EnterRoomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterRoomRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.EnterRoomRequest)
}

inline void EnterRoomRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
  };
}

EnterRoomRequest::~EnterRoomRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.EnterRoomRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterRoomRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnterRoomRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.EnterRoomRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.room_id_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.room_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterRoomRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterRoomRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.EnterRoomRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required int64 room_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.EnterRoomRequest)
  return target;
}

size_t EnterRoomRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.EnterRoomRequest)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t EnterRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.EnterRoomRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterRoomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterRoomRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterRoomRequest::GetClassData() const { return &_class_data_; }


void EnterRoomRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterRoomRequest*>(&to_msg);
  auto& from = static_cast<const EnterRoomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.EnterRoomRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterRoomRequest::CopyFrom(const EnterRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.EnterRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void EnterRoomRequest::InternalSwap(EnterRoomRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterRoomRequest, _impl_.room_id_)
      + sizeof(EnterRoomRequest::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(EnterRoomRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterRoomRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[4]);
}

// ===================================================================

class EnterRoomResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<EnterRoomResponse>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

EnterRoomResponse::EnterRoomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.EnterRoomResponse)
}
EnterRoomResponse::EnterRoomResponse(const EnterRoomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EnterRoomResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.EnterRoomResponse)
}

inline void EnterRoomResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
  };
}

EnterRoomResponse::~EnterRoomResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.EnterRoomResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EnterRoomResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnterRoomResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EnterRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.EnterRoomResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.room_id_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.room_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnterRoomResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnterRoomResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.EnterRoomResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.EnterRoomResponse)
  return target;
}

size_t EnterRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.EnterRoomResponse)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t EnterRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.EnterRoomResponse)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_1 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnterRoomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EnterRoomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnterRoomResponse::GetClassData() const { return &_class_data_; }


void EnterRoomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EnterRoomResponse*>(&to_msg);
  auto& from = static_cast<const EnterRoomResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.EnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnterRoomResponse::CopyFrom(const EnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.EnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void EnterRoomResponse::InternalSwap(EnterRoomResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnterRoomResponse, _impl_.room_id_)
      + sizeof(EnterRoomResponse::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(EnterRoomResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnterRoomResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[5]);
}

// ===================================================================

class LeaveRoomRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LeaveRoomRequest>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

LeaveRoomRequest::LeaveRoomRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LeaveRoomRequest)
}
LeaveRoomRequest::LeaveRoomRequest(const LeaveRoomRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaveRoomRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LeaveRoomRequest)
}

inline void LeaveRoomRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
  };
}

LeaveRoomRequest::~LeaveRoomRequest() {
  // @@protoc_insertion_point(destructor:openfoxwq.LeaveRoomRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaveRoomRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaveRoomRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaveRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LeaveRoomRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.room_id_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.room_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaveRoomRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaveRoomRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LeaveRoomRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required int64 room_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LeaveRoomRequest)
  return target;
}

size_t LeaveRoomRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.LeaveRoomRequest)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t LeaveRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LeaveRoomRequest)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaveRoomRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaveRoomRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaveRoomRequest::GetClassData() const { return &_class_data_; }


void LeaveRoomRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaveRoomRequest*>(&to_msg);
  auto& from = static_cast<const LeaveRoomRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LeaveRoomRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaveRoomRequest::CopyFrom(const LeaveRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LeaveRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveRoomRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void LeaveRoomRequest::InternalSwap(LeaveRoomRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.room_id_)
      + sizeof(LeaveRoomRequest::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(LeaveRoomRequest, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaveRoomRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[6]);
}

// ===================================================================

class LeaveRoomResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<LeaveRoomResponse>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

LeaveRoomResponse::LeaveRoomResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.LeaveRoomResponse)
}
LeaveRoomResponse::LeaveRoomResponse(const LeaveRoomResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LeaveRoomResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.room_id_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.room_id_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.LeaveRoomResponse)
}

inline void LeaveRoomResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
  };
}

LeaveRoomResponse::~LeaveRoomResponse() {
  // @@protoc_insertion_point(destructor:openfoxwq.LeaveRoomResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LeaveRoomResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LeaveRoomResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LeaveRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.LeaveRoomResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.room_id_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.room_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LeaveRoomResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LeaveRoomResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.LeaveRoomResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.LeaveRoomResponse)
  return target;
}

size_t LeaveRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.LeaveRoomResponse)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t LeaveRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.LeaveRoomResponse)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_1 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LeaveRoomResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LeaveRoomResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LeaveRoomResponse::GetClassData() const { return &_class_data_; }


void LeaveRoomResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LeaveRoomResponse*>(&to_msg);
  auto& from = static_cast<const LeaveRoomResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.LeaveRoomResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LeaveRoomResponse::CopyFrom(const LeaveRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.LeaveRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveRoomResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void LeaveRoomResponse::InternalSwap(LeaveRoomResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.room_id_)
      + sizeof(LeaveRoomResponse::_impl_.room_id_)
      - PROTOBUF_FIELD_OFFSET(LeaveRoomResponse, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaveRoomResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[7]);
}

// ===================================================================

class HeartbeatRequest::_Internal {
 public:
};

HeartbeatRequest::HeartbeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:openfoxwq.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  HeartbeatRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openfoxwq.HeartbeatRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HeartbeatRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HeartbeatRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[8]);
}

// ===================================================================

class RoomConfigEvent_RoomConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomConfigEvent_RoomConfig>()._impl_._has_bits_);
  static void set_has_player_id_first(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_player_id_second(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_handicap(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_komi(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_main_time_sec(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_byoyomi_time_sec(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_byoyomi_periods(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_chinese_rules(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_board_size(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000000f3) ^ 0x000000f3) != 0;
  }
};

RoomConfigEvent_RoomConfig::RoomConfigEvent_RoomConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomConfigEvent.RoomConfig)
}
RoomConfigEvent_RoomConfig::RoomConfigEvent_RoomConfig(const RoomConfigEvent_RoomConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomConfigEvent_RoomConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_first_){}
    , decltype(_impl_.player_id_second_){}
    , decltype(_impl_.handicap_){}
    , decltype(_impl_.komi_){}
    , decltype(_impl_.main_time_sec_){}
    , decltype(_impl_.byoyomi_time_sec_){}
    , decltype(_impl_.byoyomi_periods_){}
    , decltype(_impl_.board_size_){}
    , decltype(_impl_.chinese_rules_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_first_, &from._impl_.player_id_first_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.chinese_rules_) -
    reinterpret_cast<char*>(&_impl_.player_id_first_)) + sizeof(_impl_.chinese_rules_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomConfigEvent.RoomConfig)
}

inline void RoomConfigEvent_RoomConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_first_){int64_t{0}}
    , decltype(_impl_.player_id_second_){int64_t{0}}
    , decltype(_impl_.handicap_){int64_t{0}}
    , decltype(_impl_.komi_){int64_t{0}}
    , decltype(_impl_.main_time_sec_){int64_t{0}}
    , decltype(_impl_.byoyomi_time_sec_){int64_t{0}}
    , decltype(_impl_.byoyomi_periods_){int64_t{0}}
    , decltype(_impl_.board_size_){int64_t{0}}
    , decltype(_impl_.chinese_rules_){false}
  };
}

RoomConfigEvent_RoomConfig::~RoomConfigEvent_RoomConfig() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomConfigEvent.RoomConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomConfigEvent_RoomConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomConfigEvent_RoomConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomConfigEvent_RoomConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomConfigEvent.RoomConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.player_id_first_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.board_size_) -
        reinterpret_cast<char*>(&_impl_.player_id_first_)) + sizeof(_impl_.board_size_));
  }
  _impl_.chinese_rules_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomConfigEvent_RoomConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id_first = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id_first(&has_bits);
          _impl_.player_id_first_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 player_id_second = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id_second(&has_bits);
          _impl_.player_id_second_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 handicap = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_handicap(&has_bits);
          _impl_.handicap_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 komi = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_komi(&has_bits);
          _impl_.komi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 main_time_sec = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_main_time_sec(&has_bits);
          _impl_.main_time_sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 byoyomi_time_sec = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_byoyomi_time_sec(&has_bits);
          _impl_.byoyomi_time_sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 byoyomi_periods = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_byoyomi_periods(&has_bits);
          _impl_.byoyomi_periods_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool chinese_rules = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_chinese_rules(&has_bits);
          _impl_.chinese_rules_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 board_size = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_board_size(&has_bits);
          _impl_.board_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomConfigEvent_RoomConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomConfigEvent.RoomConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id_first = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id_first(), target);
  }

  // required int64 player_id_second = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id_second(), target);
  }

  // optional int64 handicap = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_handicap(), target);
  }

  // optional int64 komi = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_komi(), target);
  }

  // required int64 main_time_sec = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(7, this->_internal_main_time_sec(), target);
  }

  // required int64 byoyomi_time_sec = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_byoyomi_time_sec(), target);
  }

  // required int64 byoyomi_periods = 9;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(9, this->_internal_byoyomi_periods(), target);
  }

  // optional bool chinese_rules = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_chinese_rules(), target);
  }

  // required int64 board_size = 16;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(16, this->_internal_board_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomConfigEvent.RoomConfig)
  return target;
}

size_t RoomConfigEvent_RoomConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.RoomConfigEvent.RoomConfig)
  size_t total_size = 0;

  if (_internal_has_player_id_first()) {
    // required int64 player_id_first = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_first());
  }

  if (_internal_has_player_id_second()) {
    // required int64 player_id_second = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_second());
  }

  if (_internal_has_main_time_sec()) {
    // required int64 main_time_sec = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_main_time_sec());
  }

  if (_internal_has_byoyomi_time_sec()) {
    // required int64 byoyomi_time_sec = 8;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_byoyomi_time_sec());
  }

  if (_internal_has_byoyomi_periods()) {
    // required int64 byoyomi_periods = 9;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_byoyomi_periods());
  }

  if (_internal_has_board_size()) {
    // required int64 board_size = 16;
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_board_size());
  }

  return total_size;
}
size_t RoomConfigEvent_RoomConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomConfigEvent.RoomConfig)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x000000f3) ^ 0x000000f3) == 0) {  // All required fields are present.
    // required int64 player_id_first = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_first());

    // required int64 player_id_second = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_second());

    // required int64 main_time_sec = 7;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_main_time_sec());

    // required int64 byoyomi_time_sec = 8;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_byoyomi_time_sec());

    // required int64 byoyomi_periods = 9;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_byoyomi_periods());

    // required int64 board_size = 16;
    total_size += 2 +
      ::_pbi::WireFormatLite::Int64Size(
        this->_internal_board_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    // optional int64 handicap = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_handicap());
    }

    // optional int64 komi = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_komi());
    }

  }
  // optional bool chinese_rules = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomConfigEvent_RoomConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomConfigEvent_RoomConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomConfigEvent_RoomConfig::GetClassData() const { return &_class_data_; }


void RoomConfigEvent_RoomConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomConfigEvent_RoomConfig*>(&to_msg);
  auto& from = static_cast<const RoomConfigEvent_RoomConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomConfigEvent.RoomConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_first_ = from._impl_.player_id_first_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_second_ = from._impl_.player_id_second_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.handicap_ = from._impl_.handicap_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.komi_ = from._impl_.komi_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.main_time_sec_ = from._impl_.main_time_sec_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.byoyomi_time_sec_ = from._impl_.byoyomi_time_sec_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.byoyomi_periods_ = from._impl_.byoyomi_periods_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.board_size_ = from._impl_.board_size_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_chinese_rules(from._internal_chinese_rules());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomConfigEvent_RoomConfig::CopyFrom(const RoomConfigEvent_RoomConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomConfigEvent.RoomConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomConfigEvent_RoomConfig::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void RoomConfigEvent_RoomConfig::InternalSwap(RoomConfigEvent_RoomConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomConfigEvent_RoomConfig, _impl_.chinese_rules_)
      + sizeof(RoomConfigEvent_RoomConfig::_impl_.chinese_rules_)
      - PROTOBUF_FIELD_OFFSET(RoomConfigEvent_RoomConfig, _impl_.player_id_first_)>(
          reinterpret_cast<char*>(&_impl_.player_id_first_),
          reinterpret_cast<char*>(&other->_impl_.player_id_first_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomConfigEvent_RoomConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[9]);
}

// ===================================================================

class RoomConfigEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomConfigEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_player_id_black(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_player_id_white(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::openfoxwq::RoomConfigEvent_RoomConfig& config(const RoomConfigEvent* msg);
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

const ::openfoxwq::RoomConfigEvent_RoomConfig&
RoomConfigEvent::_Internal::config(const RoomConfigEvent* msg) {
  return *msg->_impl_.config_;
}
RoomConfigEvent::RoomConfigEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomConfigEvent)
}
RoomConfigEvent::RoomConfigEvent(const RoomConfigEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomConfigEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_){nullptr}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.player_id_black_){}
    , decltype(_impl_.player_id_white_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    _this->_impl_.config_ = new ::openfoxwq::RoomConfigEvent_RoomConfig(*from._impl_.config_);
  }
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.player_id_white_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.player_id_white_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomConfigEvent)
}

inline void RoomConfigEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.config_){nullptr}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
    , decltype(_impl_.player_id_black_){int64_t{0}}
    , decltype(_impl_.player_id_white_){int64_t{0}}
  };
}

RoomConfigEvent::~RoomConfigEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomConfigEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomConfigEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.config_;
}

void RoomConfigEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomConfigEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomConfigEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.config_ != nullptr);
    _impl_.config_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.player_id_white_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.player_id_white_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomConfigEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 player_id_black = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_player_id_black(&has_bits);
          _impl_.player_id_black_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 player_id_white = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_player_id_white(&has_bits);
          _impl_.player_id_white_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .openfoxwq.RoomConfigEvent.RoomConfig config = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomConfigEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomConfigEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  // optional int64 player_id_black = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_player_id_black(), target);
  }

  // optional int64 player_id_white = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_player_id_white(), target);
  }

  // optional .openfoxwq.RoomConfigEvent.RoomConfig config = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::config(this),
        _Internal::config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomConfigEvent)
  return target;
}

size_t RoomConfigEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.RoomConfigEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t RoomConfigEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomConfigEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .openfoxwq.RoomConfigEvent.RoomConfig config = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.config_);
  }

  if (cached_has_bits & 0x00000018u) {
    // optional int64 player_id_black = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_black());
    }

    // optional int64 player_id_white = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id_white());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomConfigEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomConfigEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomConfigEvent::GetClassData() const { return &_class_data_; }


void RoomConfigEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomConfigEvent*>(&to_msg);
  auto& from = static_cast<const RoomConfigEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomConfigEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_config()->::openfoxwq::RoomConfigEvent_RoomConfig::MergeFrom(
          from._internal_config());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.player_id_black_ = from._impl_.player_id_black_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.player_id_white_ = from._impl_.player_id_white_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomConfigEvent::CopyFrom(const RoomConfigEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomConfigEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomConfigEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_config()) {
    if (!_impl_.config_->IsInitialized()) return false;
  }
  return true;
}

void RoomConfigEvent::InternalSwap(RoomConfigEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomConfigEvent, _impl_.player_id_white_)
      + sizeof(RoomConfigEvent::_impl_.player_id_white_)
      - PROTOBUF_FIELD_OFFSET(RoomConfigEvent, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomConfigEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[10]);
}

// ===================================================================

class RoomStateEvent_RoomState::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomStateEvent_RoomState>()._impl_._has_bits_);
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

RoomStateEvent_RoomState::RoomStateEvent_RoomState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomStateEvent.RoomState)
}
RoomStateEvent_RoomState::RoomStateEvent_RoomState(const RoomStateEvent_RoomState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomStateEvent_RoomState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.encoded_moves_){from._impl_.encoded_moves_}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.unknown_field_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_2_, &from._impl_.unknown_field_2_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_2_)) + sizeof(_impl_.unknown_field_3_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomStateEvent.RoomState)
}

inline void RoomStateEvent_RoomState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.encoded_moves_){arena}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
  };
}

RoomStateEvent_RoomState::~RoomStateEvent_RoomState() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomStateEvent.RoomState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomStateEvent_RoomState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.encoded_moves_.~RepeatedField();
}

void RoomStateEvent_RoomState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomStateEvent_RoomState::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomStateEvent.RoomState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.encoded_moves_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.unknown_field_2_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_2_)) + sizeof(_impl_.unknown_field_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomStateEvent_RoomState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 encoded_moves = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_encoded_moves(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_encoded_moves(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomStateEvent_RoomState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomStateEvent.RoomState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 encoded_moves = 1;
  for (int i = 0, n = this->_internal_encoded_moves_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_encoded_moves(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // optional int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomStateEvent.RoomState)
  return target;
}

size_t RoomStateEvent_RoomState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomStateEvent.RoomState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 encoded_moves = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.encoded_moves_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_encoded_moves_size());
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

    // optional int64 unknown_field_3 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomStateEvent_RoomState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomStateEvent_RoomState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomStateEvent_RoomState::GetClassData() const { return &_class_data_; }


void RoomStateEvent_RoomState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomStateEvent_RoomState*>(&to_msg);
  auto& from = static_cast<const RoomStateEvent_RoomState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomStateEvent.RoomState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.encoded_moves_.MergeFrom(from._impl_.encoded_moves_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomStateEvent_RoomState::CopyFrom(const RoomStateEvent_RoomState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomStateEvent.RoomState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomStateEvent_RoomState::IsInitialized() const {
  return true;
}

void RoomStateEvent_RoomState::InternalSwap(RoomStateEvent_RoomState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.encoded_moves_.InternalSwap(&other->_impl_.encoded_moves_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomStateEvent_RoomState, _impl_.unknown_field_3_)
      + sizeof(RoomStateEvent_RoomState::_impl_.unknown_field_3_)
      - PROTOBUF_FIELD_OFFSET(RoomStateEvent_RoomState, _impl_.unknown_field_2_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_2_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_2_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomStateEvent_RoomState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[11]);
}

// ===================================================================

class RoomStateEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomStateEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::openfoxwq::RoomStateEvent_RoomState& state(const RoomStateEvent* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_move_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

const ::openfoxwq::RoomStateEvent_RoomState&
RoomStateEvent::_Internal::state(const RoomStateEvent* msg) {
  return *msg->_impl_.state_;
}
RoomStateEvent::RoomStateEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomStateEvent)
}
RoomStateEvent::RoomStateEvent(const RoomStateEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomStateEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.move_count_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    _this->_impl_.state_ = new ::openfoxwq::RoomStateEvent_RoomState(*from._impl_.state_);
  }
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.move_count_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_count_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomStateEvent)
}

inline void RoomStateEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.state_){nullptr}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
    , decltype(_impl_.move_count_){int64_t{0}}
  };
}

RoomStateEvent::~RoomStateEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomStateEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomStateEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.state_;
}

void RoomStateEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomStateEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomStateEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.move_count_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomStateEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .openfoxwq.RoomStateEvent.RoomState state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 move_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_move_count(&has_bits);
          _impl_.move_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomStateEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomStateEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  // optional .openfoxwq.RoomStateEvent.RoomState state = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  // optional int64 move_count = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_move_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomStateEvent)
  return target;
}

size_t RoomStateEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.RoomStateEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t RoomStateEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomStateEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .openfoxwq.RoomStateEvent.RoomState state = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  // optional int64 move_count = 6;
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_move_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomStateEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomStateEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomStateEvent::GetClassData() const { return &_class_data_; }


void RoomStateEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomStateEvent*>(&to_msg);
  auto& from = static_cast<const RoomStateEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomStateEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_state()->::openfoxwq::RoomStateEvent_RoomState::MergeFrom(
          from._internal_state());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.move_count_ = from._impl_.move_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomStateEvent::CopyFrom(const RoomStateEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomStateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomStateEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void RoomStateEvent::InternalSwap(RoomStateEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomStateEvent, _impl_.move_count_)
      + sizeof(RoomStateEvent::_impl_.move_count_)
      - PROTOBUF_FIELD_OFFSET(RoomStateEvent, _impl_.state_)>(
          reinterpret_cast<char*>(&_impl_.state_),
          reinterpret_cast<char*>(&other->_impl_.state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomStateEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[12]);
}

// ===================================================================

class RoomMoveEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomMoveEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_encoded_move(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_time_left(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_move_number(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_unknown_field_5(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RoomMoveEvent::RoomMoveEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomMoveEvent)
}
RoomMoveEvent::RoomMoveEvent(const RoomMoveEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomMoveEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.encoded_move_){}
    , decltype(_impl_.unknown_field_5_){}
    , decltype(_impl_.time_left_){}
    , decltype(_impl_.move_number_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.move_number_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_number_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomMoveEvent)
}

inline void RoomMoveEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
    , decltype(_impl_.encoded_move_){int64_t{0}}
    , decltype(_impl_.unknown_field_5_){int64_t{0}}
    , decltype(_impl_.time_left_){int64_t{0}}
    , decltype(_impl_.move_number_){int64_t{0}}
  };
}

RoomMoveEvent::~RoomMoveEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomMoveEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomMoveEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomMoveEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomMoveEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomMoveEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.move_number_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.move_number_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomMoveEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 encoded_move = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_encoded_move(&has_bits);
          _impl_.encoded_move_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_unknown_field_5(&has_bits);
          _impl_.unknown_field_5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 time_left = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_time_left(&has_bits);
          _impl_.time_left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 move_number = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_move_number(&has_bits);
          _impl_.move_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomMoveEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomMoveEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  // optional int64 encoded_move = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_encoded_move(), target);
  }

  // optional int64 unknown_field_5 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_unknown_field_5(), target);
  }

  // optional int64 time_left = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_time_left(), target);
  }

  // optional int64 move_number = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_move_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomMoveEvent)
  return target;
}

size_t RoomMoveEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.RoomMoveEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t RoomMoveEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomMoveEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003cu) {
    // optional int64 encoded_move = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_encoded_move());
    }

    // optional int64 unknown_field_5 = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_5());
    }

    // optional int64 time_left = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time_left());
    }

    // optional int64 move_number = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_move_number());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomMoveEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomMoveEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomMoveEvent::GetClassData() const { return &_class_data_; }


void RoomMoveEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomMoveEvent*>(&to_msg);
  auto& from = static_cast<const RoomMoveEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomMoveEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.encoded_move_ = from._impl_.encoded_move_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.unknown_field_5_ = from._impl_.unknown_field_5_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.time_left_ = from._impl_.time_left_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.move_number_ = from._impl_.move_number_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomMoveEvent::CopyFrom(const RoomMoveEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomMoveEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomMoveEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void RoomMoveEvent::InternalSwap(RoomMoveEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomMoveEvent, _impl_.move_number_)
      + sizeof(RoomMoveEvent::_impl_.move_number_)
      - PROTOBUF_FIELD_OFFSET(RoomMoveEvent, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomMoveEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[13]);
}

// ===================================================================

class RoomGameResultEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomGameResultEvent>()._impl_._has_bits_);
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_winner(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_score_lead(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000004) ^ 0x00000004) != 0;
  }
};

RoomGameResultEvent::RoomGameResultEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomGameResultEvent)
}
RoomGameResultEvent::RoomGameResultEvent(const RoomGameResultEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomGameResultEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.score_lead_){}
    , decltype(_impl_.winner_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.winner_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.winner_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomGameResultEvent)
}

inline void RoomGameResultEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
    , decltype(_impl_.score_lead_){int64_t{0}}
    , decltype(_impl_.winner_){0}
  };
}

RoomGameResultEvent::~RoomGameResultEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomGameResultEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomGameResultEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomGameResultEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomGameResultEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomGameResultEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.winner_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.winner_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomGameResultEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .openfoxwq.Color winner = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::openfoxwq::Color_IsValid(val))) {
            _internal_set_winner(static_cast<::openfoxwq::Color>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional int64 score_lead = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_score_lead(&has_bits);
          _impl_.score_lead_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomGameResultEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomGameResultEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  // optional .openfoxwq.Color winner = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_winner(), target);
  }

  // optional int64 score_lead = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_score_lead(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomGameResultEvent)
  return target;
}

size_t RoomGameResultEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomGameResultEvent)
  size_t total_size = 0;

  // required int64 room_id = 3;
  if (_internal_has_room_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 unknown_field_1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
    }

    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // optional int64 score_lead = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_score_lead());
    }

    // optional .openfoxwq.Color winner = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_winner());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomGameResultEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomGameResultEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomGameResultEvent::GetClassData() const { return &_class_data_; }


void RoomGameResultEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomGameResultEvent*>(&to_msg);
  auto& from = static_cast<const RoomGameResultEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomGameResultEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.score_lead_ = from._impl_.score_lead_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.winner_ = from._impl_.winner_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomGameResultEvent::CopyFrom(const RoomGameResultEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomGameResultEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomGameResultEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void RoomGameResultEvent::InternalSwap(RoomGameResultEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomGameResultEvent, _impl_.winner_)
      + sizeof(RoomGameResultEvent::_impl_.winner_)
      - PROTOBUF_FIELD_OFFSET(RoomGameResultEvent, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomGameResultEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[14]);
}

// ===================================================================

class RoomTimeControlEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RoomTimeControlEvent>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_room_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_current_period(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_time_left(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_unknown_field_4(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RoomTimeControlEvent::RoomTimeControlEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.RoomTimeControlEvent)
}
RoomTimeControlEvent::RoomTimeControlEvent(const RoomTimeControlEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomTimeControlEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.room_id_){}
    , decltype(_impl_.unknown_field_4_){}
    , decltype(_impl_.current_period_){}
    , decltype(_impl_.time_left_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.time_left_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.time_left_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.RoomTimeControlEvent)
}

inline void RoomTimeControlEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.room_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_4_){int64_t{0}}
    , decltype(_impl_.current_period_){int64_t{0}}
    , decltype(_impl_.time_left_){int64_t{0}}
  };
}

RoomTimeControlEvent::~RoomTimeControlEvent() {
  // @@protoc_insertion_point(destructor:openfoxwq.RoomTimeControlEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomTimeControlEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomTimeControlEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomTimeControlEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.RoomTimeControlEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.time_left_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.time_left_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomTimeControlEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 room_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_room_id(&has_bits);
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_unknown_field_4(&has_bits);
          _impl_.unknown_field_4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 current_period = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_current_period(&has_bits);
          _impl_.current_period_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 time_left = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_time_left(&has_bits);
          _impl_.time_left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomTimeControlEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.RoomTimeControlEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_player_id(), target);
  }

  // required int64 room_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_room_id(), target);
  }

  // optional int64 unknown_field_4 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_unknown_field_4(), target);
  }

  // optional int64 current_period = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_current_period(), target);
  }

  // optional int64 time_left = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_time_left(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.RoomTimeControlEvent)
  return target;
}

size_t RoomTimeControlEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.RoomTimeControlEvent)
  size_t total_size = 0;

  if (_internal_has_player_id()) {
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }

  if (_internal_has_room_id()) {
    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());
  }

  return total_size;
}
size_t RoomTimeControlEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.RoomTimeControlEvent)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 player_id = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());

    // required int64 room_id = 3;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_room_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001cu) {
    // optional int64 unknown_field_4 = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_4());
    }

    // optional int64 current_period = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_current_period());
    }

    // optional int64 time_left = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time_left());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomTimeControlEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomTimeControlEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomTimeControlEvent::GetClassData() const { return &_class_data_; }


void RoomTimeControlEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomTimeControlEvent*>(&to_msg);
  auto& from = static_cast<const RoomTimeControlEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.RoomTimeControlEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.room_id_ = from._impl_.room_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_4_ = from._impl_.unknown_field_4_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.current_period_ = from._impl_.current_period_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.time_left_ = from._impl_.time_left_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomTimeControlEvent::CopyFrom(const RoomTimeControlEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.RoomTimeControlEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomTimeControlEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void RoomTimeControlEvent::InternalSwap(RoomTimeControlEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomTimeControlEvent, _impl_.time_left_)
      + sizeof(RoomTimeControlEvent::_impl_.time_left_)
      - PROTOBUF_FIELD_OFFSET(RoomTimeControlEvent, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomTimeControlEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[15]);
}

// ===================================================================

class UnknownRequest1::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest1>()._impl_._has_bits_);
  static void set_has_unknown_field_1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

UnknownRequest1::UnknownRequest1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest1)
}
UnknownRequest1::UnknownRequest1(const UnknownRequest1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.unknown_field_1_, &from._impl_.unknown_field_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest1)
}

inline void UnknownRequest1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.unknown_field_1_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownRequest1::~UnknownRequest1() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest1::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.unknown_field_1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.unknown_field_1_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 unknown_field_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_unknown_field_1(&has_bits);
          _impl_.unknown_field_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 unknown_field_1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_unknown_field_1(), target);
  }

  // required int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest1)
  return target;
}

size_t UnknownRequest1::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:openfoxwq.UnknownRequest1)
  size_t total_size = 0;

  if (_internal_has_unknown_field_1()) {
    // required int64 unknown_field_1 = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());
  }

  if (_internal_has_unknown_field_2()) {
    // required int64 unknown_field_2 = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return total_size;
}
size_t UnknownRequest1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest1)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 unknown_field_1 = 1;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_1());

    // required int64 unknown_field_2 = 2;
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest1::GetClassData() const { return &_class_data_; }


void UnknownRequest1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest1*>(&to_msg);
  auto& from = static_cast<const UnknownRequest1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unknown_field_1_ = from._impl_.unknown_field_1_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest1::CopyFrom(const UnknownRequest1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest1::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest1::InternalSwap(UnknownRequest1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownRequest1, _impl_.unknown_field_2_)
      + sizeof(UnknownRequest1::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownRequest1, _impl_.unknown_field_1_)>(
          reinterpret_cast<char*>(&_impl_.unknown_field_1_),
          reinterpret_cast<char*>(&other->_impl_.unknown_field_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[16]);
}

// ===================================================================

class UnknownRequest2::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest2>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest2::UnknownRequest2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest2)
}
UnknownRequest2::UnknownRequest2(const UnknownRequest2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest2* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}
    , decltype(_impl_.unknown_field_3_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest2)
}

inline void UnknownRequest2::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
    , decltype(_impl_.unknown_field_3_){int64_t{0}}
  };
}

UnknownRequest2::~UnknownRequest2() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest2)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest2::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest2::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_3_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest2::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_unknown_field_3(&has_bits);
          _impl_.unknown_field_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  // optional int64 unknown_field_3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_unknown_field_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest2)
  return target;
}

size_t UnknownRequest2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest2)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional int64 unknown_field_2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
    }

    // optional int64 unknown_field_3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest2::GetClassData() const { return &_class_data_; }


void UnknownRequest2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest2*>(&to_msg);
  auto& from = static_cast<const UnknownRequest2&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest2)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_3_ = from._impl_.unknown_field_3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest2::CopyFrom(const UnknownRequest2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest2::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest2::InternalSwap(UnknownRequest2* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownRequest2, _impl_.unknown_field_3_)
      + sizeof(UnknownRequest2::_impl_.unknown_field_3_)
      - PROTOBUF_FIELD_OFFSET(UnknownRequest2, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest2::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[17]);
}

// ===================================================================

class UnknownRequest3::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest3>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest3::UnknownRequest3(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest3)
}
UnknownRequest3::UnknownRequest3(const UnknownRequest3& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest3* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest3)
}

inline void UnknownRequest3::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest3::~UnknownRequest3() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest3)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest3::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest3::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest3::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest3)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest3::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest3::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest3)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest3)
  return target;
}

size_t UnknownRequest3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest3)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest3::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest3::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest3::GetClassData() const { return &_class_data_; }


void UnknownRequest3::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest3*>(&to_msg);
  auto& from = static_cast<const UnknownRequest3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest3)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest3::CopyFrom(const UnknownRequest3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest3::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest3::InternalSwap(UnknownRequest3* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest3::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[18]);
}

// ===================================================================

class UnknownRequest4::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest4>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_10(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unknown_field_30(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest4::UnknownRequest4(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest4)
}
UnknownRequest4::UnknownRequest4(const UnknownRequest4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest4* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_10_){}
    , decltype(_impl_.unknown_field_30_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_30_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_30_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest4)
}

inline void UnknownRequest4::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_10_){int64_t{0}}
    , decltype(_impl_.unknown_field_30_){int64_t{0}}
  };
}

UnknownRequest4::~UnknownRequest4() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest4)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest4::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest4::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest4::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest4)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_30_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_30_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest4::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_10 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_unknown_field_10(&has_bits);
          _impl_.unknown_field_10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_30 = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _Internal::set_has_unknown_field_30(&has_bits);
          _impl_.unknown_field_30_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest4::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest4)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_10 = 10;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_unknown_field_10(), target);
  }

  // optional int64 unknown_field_30 = 30;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(30, this->_internal_unknown_field_30(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest4)
  return target;
}

size_t UnknownRequest4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest4)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional int64 unknown_field_10 = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_10());
    }

    // optional int64 unknown_field_30 = 30;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int64Size(
          this->_internal_unknown_field_30());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest4::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest4::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest4::GetClassData() const { return &_class_data_; }


void UnknownRequest4::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest4*>(&to_msg);
  auto& from = static_cast<const UnknownRequest4&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest4)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_10_ = from._impl_.unknown_field_10_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.unknown_field_30_ = from._impl_.unknown_field_30_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest4::CopyFrom(const UnknownRequest4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest4::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest4::InternalSwap(UnknownRequest4* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownRequest4, _impl_.unknown_field_30_)
      + sizeof(UnknownRequest4::_impl_.unknown_field_30_)
      - PROTOBUF_FIELD_OFFSET(UnknownRequest4, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest4::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[19]);
}

// ===================================================================

class UnknownRequest5::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest5>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest5::UnknownRequest5(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest5)
}
UnknownRequest5::UnknownRequest5(const UnknownRequest5& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest5* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest5)
}

inline void UnknownRequest5::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest5::~UnknownRequest5() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest5)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest5::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest5::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest5::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest5)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest5::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest5::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest5)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest5)
  return target;
}

size_t UnknownRequest5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest5)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest5::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest5::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest5::GetClassData() const { return &_class_data_; }


void UnknownRequest5::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest5*>(&to_msg);
  auto& from = static_cast<const UnknownRequest5&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest5)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest5::CopyFrom(const UnknownRequest5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest5::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest5::InternalSwap(UnknownRequest5* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest5::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[20]);
}

// ===================================================================

class UnknownRequest6::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest6>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest6::UnknownRequest6(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest6)
}
UnknownRequest6::UnknownRequest6(const UnknownRequest6& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest6* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest6)
}

inline void UnknownRequest6::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest6::~UnknownRequest6() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest6)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest6::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest6::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest6::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest6)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest6::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest6::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest6)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest6)
  return target;
}

size_t UnknownRequest6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest6)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest6::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest6::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest6::GetClassData() const { return &_class_data_; }


void UnknownRequest6::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest6*>(&to_msg);
  auto& from = static_cast<const UnknownRequest6&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest6)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest6::CopyFrom(const UnknownRequest6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest6::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest6::InternalSwap(UnknownRequest6* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest6::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[21]);
}

// ===================================================================

class UnknownResponse6::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownResponse6>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownResponse6::UnknownResponse6(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownResponse6)
}
UnknownResponse6::UnknownResponse6(const UnknownResponse6& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownResponse6* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownResponse6)
}

inline void UnknownResponse6::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownResponse6::~UnknownResponse6() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownResponse6)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownResponse6::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownResponse6::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownResponse6::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownResponse6)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownResponse6::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownResponse6::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownResponse6)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownResponse6)
  return target;
}

size_t UnknownResponse6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownResponse6)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownResponse6::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownResponse6::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownResponse6::GetClassData() const { return &_class_data_; }


void UnknownResponse6::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownResponse6*>(&to_msg);
  auto& from = static_cast<const UnknownResponse6&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownResponse6)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownResponse6::CopyFrom(const UnknownResponse6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownResponse6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownResponse6::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownResponse6::InternalSwap(UnknownResponse6* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownResponse6, _impl_.unknown_field_2_)
      + sizeof(UnknownResponse6::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownResponse6, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownResponse6::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[22]);
}

// ===================================================================

class UnknownRequest7::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest7>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest7::UnknownRequest7(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest7)
}
UnknownRequest7::UnknownRequest7(const UnknownRequest7& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest7* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest7)
}

inline void UnknownRequest7::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest7::~UnknownRequest7() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest7)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest7::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest7::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest7::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest7)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest7::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest7::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest7)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest7)
  return target;
}

size_t UnknownRequest7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest7)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest7::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest7::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest7::GetClassData() const { return &_class_data_; }


void UnknownRequest7::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest7*>(&to_msg);
  auto& from = static_cast<const UnknownRequest7&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest7)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest7::CopyFrom(const UnknownRequest7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest7::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest7::InternalSwap(UnknownRequest7* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest7::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[23]);
}

// ===================================================================

class UnknownResponse7::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownResponse7>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownResponse7::UnknownResponse7(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownResponse7)
}
UnknownResponse7::UnknownResponse7(const UnknownResponse7& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownResponse7* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownResponse7)
}

inline void UnknownResponse7::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownResponse7::~UnknownResponse7() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownResponse7)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownResponse7::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownResponse7::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownResponse7::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownResponse7)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownResponse7::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownResponse7::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownResponse7)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownResponse7)
  return target;
}

size_t UnknownResponse7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownResponse7)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownResponse7::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownResponse7::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownResponse7::GetClassData() const { return &_class_data_; }


void UnknownResponse7::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownResponse7*>(&to_msg);
  auto& from = static_cast<const UnknownResponse7&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownResponse7)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownResponse7::CopyFrom(const UnknownResponse7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownResponse7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownResponse7::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownResponse7::InternalSwap(UnknownResponse7* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownResponse7, _impl_.unknown_field_2_)
      + sizeof(UnknownResponse7::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownResponse7, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownResponse7::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[24]);
}

// ===================================================================

class UnknownRequest8::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownRequest8>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownRequest8::UnknownRequest8(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownRequest8)
}
UnknownRequest8::UnknownRequest8(const UnknownRequest8& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownRequest8* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.player_id_ = from._impl_.player_id_;
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownRequest8)
}

inline void UnknownRequest8::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
  };
}

UnknownRequest8::~UnknownRequest8() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownRequest8)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownRequest8::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownRequest8::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownRequest8::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownRequest8)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownRequest8::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownRequest8::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownRequest8)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownRequest8)
  return target;
}

size_t UnknownRequest8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownRequest8)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownRequest8::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownRequest8::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownRequest8::GetClassData() const { return &_class_data_; }


void UnknownRequest8::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownRequest8*>(&to_msg);
  auto& from = static_cast<const UnknownRequest8&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownRequest8)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_id()) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownRequest8::CopyFrom(const UnknownRequest8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownRequest8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownRequest8::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownRequest8::InternalSwap(UnknownRequest8* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.player_id_, other->_impl_.player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownRequest8::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[25]);
}

// ===================================================================

class UnknownResponse8::_Internal {
 public:
  using HasBits = decltype(std::declval<UnknownResponse8>()._impl_._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknown_field_2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

UnknownResponse8::UnknownResponse8(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:openfoxwq.UnknownResponse8)
}
UnknownResponse8::UnknownResponse8(const UnknownResponse8& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnknownResponse8* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){}
    , decltype(_impl_.unknown_field_2_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.player_id_, &from._impl_.player_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
    reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  // @@protoc_insertion_point(copy_constructor:openfoxwq.UnknownResponse8)
}

inline void UnknownResponse8::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.player_id_){int64_t{0}}
    , decltype(_impl_.unknown_field_2_){int64_t{0}}
  };
}

UnknownResponse8::~UnknownResponse8() {
  // @@protoc_insertion_point(destructor:openfoxwq.UnknownResponse8)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnknownResponse8::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnknownResponse8::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnknownResponse8::Clear() {
// @@protoc_insertion_point(message_clear_start:openfoxwq.UnknownResponse8)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.player_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.unknown_field_2_) -
        reinterpret_cast<char*>(&_impl_.player_id_)) + sizeof(_impl_.unknown_field_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownResponse8::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          _impl_.player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 unknown_field_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_unknown_field_2(&has_bits);
          _impl_.unknown_field_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnknownResponse8::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:openfoxwq.UnknownResponse8)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // optional int64 unknown_field_2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_unknown_field_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openfoxwq.UnknownResponse8)
  return target;
}

size_t UnknownResponse8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openfoxwq.UnknownResponse8)
  size_t total_size = 0;

  // required int64 player_id = 1;
  if (_internal_has_player_id()) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_player_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 unknown_field_2 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_unknown_field_2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnknownResponse8::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnknownResponse8::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnknownResponse8::GetClassData() const { return &_class_data_; }


void UnknownResponse8::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnknownResponse8*>(&to_msg);
  auto& from = static_cast<const UnknownResponse8&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:openfoxwq.UnknownResponse8)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.player_id_ = from._impl_.player_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.unknown_field_2_ = from._impl_.unknown_field_2_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnknownResponse8::CopyFrom(const UnknownResponse8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openfoxwq.UnknownResponse8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownResponse8::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void UnknownResponse8::InternalSwap(UnknownResponse8* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnknownResponse8, _impl_.unknown_field_2_)
      + sizeof(UnknownResponse8::_impl_.unknown_field_2_)
      - PROTOBUF_FIELD_OFFSET(UnknownResponse8, _impl_.player_id_)>(
          reinterpret_cast<char*>(&_impl_.player_id_),
          reinterpret_cast<char*>(&other->_impl_.player_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownResponse8::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fbroadcast_2eproto_getter, &descriptor_table_proto_2fbroadcast_2eproto_once,
      file_level_metadata_proto_2fbroadcast_2eproto[26]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace openfoxwq
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::openfoxwq::LoginBroadcastServerRequest*
Arena::CreateMaybeMessage< ::openfoxwq::LoginBroadcastServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LoginBroadcastServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::LoginBroadcastServerResponse*
Arena::CreateMaybeMessage< ::openfoxwq::LoginBroadcastServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LoginBroadcastServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::ListRoomsRequest*
Arena::CreateMaybeMessage< ::openfoxwq::ListRoomsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::ListRoomsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::ListRoomsResponse*
Arena::CreateMaybeMessage< ::openfoxwq::ListRoomsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::ListRoomsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::EnterRoomRequest*
Arena::CreateMaybeMessage< ::openfoxwq::EnterRoomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::EnterRoomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::EnterRoomResponse*
Arena::CreateMaybeMessage< ::openfoxwq::EnterRoomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::EnterRoomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::LeaveRoomRequest*
Arena::CreateMaybeMessage< ::openfoxwq::LeaveRoomRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LeaveRoomRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::LeaveRoomResponse*
Arena::CreateMaybeMessage< ::openfoxwq::LeaveRoomResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::LeaveRoomResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::HeartbeatRequest*
Arena::CreateMaybeMessage< ::openfoxwq::HeartbeatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::HeartbeatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomConfigEvent_RoomConfig*
Arena::CreateMaybeMessage< ::openfoxwq::RoomConfigEvent_RoomConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomConfigEvent_RoomConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomConfigEvent*
Arena::CreateMaybeMessage< ::openfoxwq::RoomConfigEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomConfigEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomStateEvent_RoomState*
Arena::CreateMaybeMessage< ::openfoxwq::RoomStateEvent_RoomState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomStateEvent_RoomState >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomStateEvent*
Arena::CreateMaybeMessage< ::openfoxwq::RoomStateEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomStateEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomMoveEvent*
Arena::CreateMaybeMessage< ::openfoxwq::RoomMoveEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomMoveEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomGameResultEvent*
Arena::CreateMaybeMessage< ::openfoxwq::RoomGameResultEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomGameResultEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::RoomTimeControlEvent*
Arena::CreateMaybeMessage< ::openfoxwq::RoomTimeControlEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::RoomTimeControlEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest1*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest1 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest2*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest2 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest3*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest3 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest3 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest4*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest4 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest5*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest5 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest5 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest6*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest6 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest6 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownResponse6*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownResponse6 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownResponse6 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest7*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest7 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest7 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownResponse7*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownResponse7 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownResponse7 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownRequest8*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownRequest8 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownRequest8 >(arena);
}
template<> PROTOBUF_NOINLINE ::openfoxwq::UnknownResponse8*
Arena::CreateMaybeMessage< ::openfoxwq::UnknownResponse8 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::openfoxwq::UnknownResponse8 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
