// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/play.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fplay_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fplay_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
#include "proto/reqOption.pb.h"
#include "proto/common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2fplay_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fplay_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fplay_2eproto;
namespace openfoxwq {
class GetPlayerInfoRequest;
struct GetPlayerInfoRequestDefaultTypeInternal;
extern GetPlayerInfoRequestDefaultTypeInternal _GetPlayerInfoRequest_default_instance_;
class GetPlayerInfoResponse;
struct GetPlayerInfoResponseDefaultTypeInternal;
extern GetPlayerInfoResponseDefaultTypeInternal _GetPlayerInfoResponse_default_instance_;
class GetPlayerInfoResponse_RegisterInfo;
struct GetPlayerInfoResponse_RegisterInfoDefaultTypeInternal;
extern GetPlayerInfoResponse_RegisterInfoDefaultTypeInternal _GetPlayerInfoResponse_RegisterInfo_default_instance_;
class InfoOptions;
struct InfoOptionsDefaultTypeInternal;
extern InfoOptionsDefaultTypeInternal _InfoOptions_default_instance_;
class ListPlayersRequest;
struct ListPlayersRequestDefaultTypeInternal;
extern ListPlayersRequestDefaultTypeInternal _ListPlayersRequest_default_instance_;
class ListPlayersResponse;
struct ListPlayersResponseDefaultTypeInternal;
extern ListPlayersResponseDefaultTypeInternal _ListPlayersResponse_default_instance_;
class LoginPlayServerRequest;
struct LoginPlayServerRequestDefaultTypeInternal;
extern LoginPlayServerRequestDefaultTypeInternal _LoginPlayServerRequest_default_instance_;
class LoginPlayServerResponse;
struct LoginPlayServerResponseDefaultTypeInternal;
extern LoginPlayServerResponseDefaultTypeInternal _LoginPlayServerResponse_default_instance_;
class PlayerStateEvent;
struct PlayerStateEventDefaultTypeInternal;
extern PlayerStateEventDefaultTypeInternal _PlayerStateEvent_default_instance_;
class SyncPlayersRequest;
struct SyncPlayersRequestDefaultTypeInternal;
extern SyncPlayersRequestDefaultTypeInternal _SyncPlayersRequest_default_instance_;
class SyncPlayersResponse;
struct SyncPlayersResponseDefaultTypeInternal;
extern SyncPlayersResponseDefaultTypeInternal _SyncPlayersResponse_default_instance_;
class SyncTimeRequest;
struct SyncTimeRequestDefaultTypeInternal;
extern SyncTimeRequestDefaultTypeInternal _SyncTimeRequest_default_instance_;
class SyncTimeResponse;
struct SyncTimeResponseDefaultTypeInternal;
extern SyncTimeResponseDefaultTypeInternal _SyncTimeResponse_default_instance_;
class UnknownPlayRequest1;
struct UnknownPlayRequest1DefaultTypeInternal;
extern UnknownPlayRequest1DefaultTypeInternal _UnknownPlayRequest1_default_instance_;
class UnknownPlayRequest1_UnknownPlayRequest1Nested1;
struct UnknownPlayRequest1_UnknownPlayRequest1Nested1DefaultTypeInternal;
extern UnknownPlayRequest1_UnknownPlayRequest1Nested1DefaultTypeInternal _UnknownPlayRequest1_UnknownPlayRequest1Nested1_default_instance_;
class UnknownPlayResponse1;
struct UnknownPlayResponse1DefaultTypeInternal;
extern UnknownPlayResponse1DefaultTypeInternal _UnknownPlayResponse1_default_instance_;
class UnknownPlayerEvent1;
struct UnknownPlayerEvent1DefaultTypeInternal;
extern UnknownPlayerEvent1DefaultTypeInternal _UnknownPlayerEvent1_default_instance_;
}  // namespace openfoxwq
PROTOBUF_NAMESPACE_OPEN
template<> ::openfoxwq::GetPlayerInfoRequest* Arena::CreateMaybeMessage<::openfoxwq::GetPlayerInfoRequest>(Arena*);
template<> ::openfoxwq::GetPlayerInfoResponse* Arena::CreateMaybeMessage<::openfoxwq::GetPlayerInfoResponse>(Arena*);
template<> ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* Arena::CreateMaybeMessage<::openfoxwq::GetPlayerInfoResponse_RegisterInfo>(Arena*);
template<> ::openfoxwq::InfoOptions* Arena::CreateMaybeMessage<::openfoxwq::InfoOptions>(Arena*);
template<> ::openfoxwq::ListPlayersRequest* Arena::CreateMaybeMessage<::openfoxwq::ListPlayersRequest>(Arena*);
template<> ::openfoxwq::ListPlayersResponse* Arena::CreateMaybeMessage<::openfoxwq::ListPlayersResponse>(Arena*);
template<> ::openfoxwq::LoginPlayServerRequest* Arena::CreateMaybeMessage<::openfoxwq::LoginPlayServerRequest>(Arena*);
template<> ::openfoxwq::LoginPlayServerResponse* Arena::CreateMaybeMessage<::openfoxwq::LoginPlayServerResponse>(Arena*);
template<> ::openfoxwq::PlayerStateEvent* Arena::CreateMaybeMessage<::openfoxwq::PlayerStateEvent>(Arena*);
template<> ::openfoxwq::SyncPlayersRequest* Arena::CreateMaybeMessage<::openfoxwq::SyncPlayersRequest>(Arena*);
template<> ::openfoxwq::SyncPlayersResponse* Arena::CreateMaybeMessage<::openfoxwq::SyncPlayersResponse>(Arena*);
template<> ::openfoxwq::SyncTimeRequest* Arena::CreateMaybeMessage<::openfoxwq::SyncTimeRequest>(Arena*);
template<> ::openfoxwq::SyncTimeResponse* Arena::CreateMaybeMessage<::openfoxwq::SyncTimeResponse>(Arena*);
template<> ::openfoxwq::UnknownPlayRequest1* Arena::CreateMaybeMessage<::openfoxwq::UnknownPlayRequest1>(Arena*);
template<> ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* Arena::CreateMaybeMessage<::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1>(Arena*);
template<> ::openfoxwq::UnknownPlayResponse1* Arena::CreateMaybeMessage<::openfoxwq::UnknownPlayResponse1>(Arena*);
template<> ::openfoxwq::UnknownPlayerEvent1* Arena::CreateMaybeMessage<::openfoxwq::UnknownPlayerEvent1>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace openfoxwq {

// ===================================================================

class LoginPlayServerRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.LoginPlayServerRequest) */ {
 public:
  inline LoginPlayServerRequest() : LoginPlayServerRequest(nullptr) {}
  ~LoginPlayServerRequest() override;
  explicit PROTOBUF_CONSTEXPR LoginPlayServerRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LoginPlayServerRequest(const LoginPlayServerRequest& from);
  LoginPlayServerRequest(LoginPlayServerRequest&& from) noexcept
    : LoginPlayServerRequest() {
    *this = ::std::move(from);
  }

  inline LoginPlayServerRequest& operator=(const LoginPlayServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginPlayServerRequest& operator=(LoginPlayServerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginPlayServerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginPlayServerRequest* internal_default_instance() {
    return reinterpret_cast<const LoginPlayServerRequest*>(
               &_LoginPlayServerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LoginPlayServerRequest& a, LoginPlayServerRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginPlayServerRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginPlayServerRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginPlayServerRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginPlayServerRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const LoginPlayServerRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const LoginPlayServerRequest& from) {
    LoginPlayServerRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginPlayServerRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.LoginPlayServerRequest";
  }
  protected:
  explicit LoginPlayServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // required string token = 1;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const std::string& token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.LoginPlayServerRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class LoginPlayServerResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.LoginPlayServerResponse) */ {
 public:
  inline LoginPlayServerResponse() : LoginPlayServerResponse(nullptr) {}
  ~LoginPlayServerResponse() override;
  explicit PROTOBUF_CONSTEXPR LoginPlayServerResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  LoginPlayServerResponse(const LoginPlayServerResponse& from);
  LoginPlayServerResponse(LoginPlayServerResponse&& from) noexcept
    : LoginPlayServerResponse() {
    *this = ::std::move(from);
  }

  inline LoginPlayServerResponse& operator=(const LoginPlayServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginPlayServerResponse& operator=(LoginPlayServerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginPlayServerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginPlayServerResponse* internal_default_instance() {
    return reinterpret_cast<const LoginPlayServerResponse*>(
               &_LoginPlayServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LoginPlayServerResponse& a, LoginPlayServerResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginPlayServerResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginPlayServerResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginPlayServerResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LoginPlayServerResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const LoginPlayServerResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const LoginPlayServerResponse& from) {
    LoginPlayServerResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginPlayServerResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.LoginPlayServerResponse";
  }
  protected:
  explicit LoginPlayServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
    kUnknownField2FieldNumber = 2,
    kUnknownField3FieldNumber = 3,
    kUnknownField4FieldNumber = 4,
  };
  // optional int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // optional int64 unknown_field_2 = 2;
  bool has_unknown_field_2() const;
  private:
  bool _internal_has_unknown_field_2() const;
  public:
  void clear_unknown_field_2();
  int64_t unknown_field_2() const;
  void set_unknown_field_2(int64_t value);
  private:
  int64_t _internal_unknown_field_2() const;
  void _internal_set_unknown_field_2(int64_t value);
  public:

  // optional int64 unknown_field_3 = 3;
  bool has_unknown_field_3() const;
  private:
  bool _internal_has_unknown_field_3() const;
  public:
  void clear_unknown_field_3();
  int64_t unknown_field_3() const;
  void set_unknown_field_3(int64_t value);
  private:
  int64_t _internal_unknown_field_3() const;
  void _internal_set_unknown_field_3(int64_t value);
  public:

  // optional int64 unknown_field_4 = 4;
  bool has_unknown_field_4() const;
  private:
  bool _internal_has_unknown_field_4() const;
  public:
  void clear_unknown_field_4();
  int64_t unknown_field_4() const;
  void set_unknown_field_4(int64_t value);
  private:
  int64_t _internal_unknown_field_4() const;
  void _internal_set_unknown_field_4(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.LoginPlayServerResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
    int64_t unknown_field_2_;
    int64_t unknown_field_3_;
    int64_t unknown_field_4_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class ListPlayersRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.ListPlayersRequest) */ {
 public:
  inline ListPlayersRequest() : ListPlayersRequest(nullptr) {}
  ~ListPlayersRequest() override;
  explicit PROTOBUF_CONSTEXPR ListPlayersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListPlayersRequest(const ListPlayersRequest& from);
  ListPlayersRequest(ListPlayersRequest&& from) noexcept
    : ListPlayersRequest() {
    *this = ::std::move(from);
  }

  inline ListPlayersRequest& operator=(const ListPlayersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPlayersRequest& operator=(ListPlayersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPlayersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPlayersRequest* internal_default_instance() {
    return reinterpret_cast<const ListPlayersRequest*>(
               &_ListPlayersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListPlayersRequest& a, ListPlayersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListPlayersRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPlayersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPlayersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListPlayersRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListPlayersRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListPlayersRequest& from) {
    ListPlayersRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListPlayersRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.ListPlayersRequest";
  }
  protected:
  explicit ListPlayersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
  };
  // required int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.ListPlayersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class ListPlayersResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.ListPlayersResponse) */ {
 public:
  inline ListPlayersResponse() : ListPlayersResponse(nullptr) {}
  ~ListPlayersResponse() override;
  explicit PROTOBUF_CONSTEXPR ListPlayersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ListPlayersResponse(const ListPlayersResponse& from);
  ListPlayersResponse(ListPlayersResponse&& from) noexcept
    : ListPlayersResponse() {
    *this = ::std::move(from);
  }

  inline ListPlayersResponse& operator=(const ListPlayersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPlayersResponse& operator=(ListPlayersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPlayersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPlayersResponse* internal_default_instance() {
    return reinterpret_cast<const ListPlayersResponse*>(
               &_ListPlayersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ListPlayersResponse& a, ListPlayersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListPlayersResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPlayersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPlayersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListPlayersResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ListPlayersResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ListPlayersResponse& from) {
    ListPlayersResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListPlayersResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.ListPlayersResponse";
  }
  protected:
  explicit ListPlayersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 2,
    kUnknownField1FieldNumber = 1,
    kPageIndexFieldNumber = 3,
    kPageCountFieldNumber = 4,
    kUnknownField5FieldNumber = 5,
    kUnknownField6FieldNumber = 6,
  };
  // repeated .openfoxwq.PlayerInfo players = 2;
  int players_size() const;
  private:
  int _internal_players_size() const;
  public:
  void clear_players();
  ::openfoxwq::PlayerInfo* mutable_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::PlayerInfo >*
      mutable_players();
  private:
  const ::openfoxwq::PlayerInfo& _internal_players(int index) const;
  ::openfoxwq::PlayerInfo* _internal_add_players();
  public:
  const ::openfoxwq::PlayerInfo& players(int index) const;
  ::openfoxwq::PlayerInfo* add_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::PlayerInfo >&
      players() const;

  // optional int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // required int64 page_index = 3;
  bool has_page_index() const;
  private:
  bool _internal_has_page_index() const;
  public:
  void clear_page_index();
  int64_t page_index() const;
  void set_page_index(int64_t value);
  private:
  int64_t _internal_page_index() const;
  void _internal_set_page_index(int64_t value);
  public:

  // required int64 page_count = 4;
  bool has_page_count() const;
  private:
  bool _internal_has_page_count() const;
  public:
  void clear_page_count();
  int64_t page_count() const;
  void set_page_count(int64_t value);
  private:
  int64_t _internal_page_count() const;
  void _internal_set_page_count(int64_t value);
  public:

  // optional int64 unknown_field_5 = 5;
  bool has_unknown_field_5() const;
  private:
  bool _internal_has_unknown_field_5() const;
  public:
  void clear_unknown_field_5();
  int64_t unknown_field_5() const;
  void set_unknown_field_5(int64_t value);
  private:
  int64_t _internal_unknown_field_5() const;
  void _internal_set_unknown_field_5(int64_t value);
  public:

  // optional int64 unknown_field_6 = 6;
  bool has_unknown_field_6() const;
  private:
  bool _internal_has_unknown_field_6() const;
  public:
  void clear_unknown_field_6();
  int64_t unknown_field_6() const;
  void set_unknown_field_6(int64_t value);
  private:
  int64_t _internal_unknown_field_6() const;
  void _internal_set_unknown_field_6(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.ListPlayersResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::PlayerInfo > players_;
    int64_t unknown_field_1_;
    int64_t page_index_;
    int64_t page_count_;
    int64_t unknown_field_5_;
    int64_t unknown_field_6_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class GetPlayerInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.GetPlayerInfoRequest) */ {
 public:
  inline GetPlayerInfoRequest() : GetPlayerInfoRequest(nullptr) {}
  ~GetPlayerInfoRequest() override;
  explicit PROTOBUF_CONSTEXPR GetPlayerInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPlayerInfoRequest(const GetPlayerInfoRequest& from);
  GetPlayerInfoRequest(GetPlayerInfoRequest&& from) noexcept
    : GetPlayerInfoRequest() {
    *this = ::std::move(from);
  }

  inline GetPlayerInfoRequest& operator=(const GetPlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlayerInfoRequest& operator=(GetPlayerInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPlayerInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPlayerInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetPlayerInfoRequest*>(
               &_GetPlayerInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetPlayerInfoRequest& a, GetPlayerInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPlayerInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPlayerInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPlayerInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPlayerInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetPlayerInfoRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetPlayerInfoRequest& from) {
    GetPlayerInfoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPlayerInfoRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.GetPlayerInfoRequest";
  }
  protected:
  explicit GetPlayerInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoOptionsFieldNumber = 3,
    kPlayerIdFieldNumber = 1,
  };
  // required .openfoxwq.InfoOptions info_options = 3;
  bool has_info_options() const;
  private:
  bool _internal_has_info_options() const;
  public:
  void clear_info_options();
  const ::openfoxwq::InfoOptions& info_options() const;
  PROTOBUF_NODISCARD ::openfoxwq::InfoOptions* release_info_options();
  ::openfoxwq::InfoOptions* mutable_info_options();
  void set_allocated_info_options(::openfoxwq::InfoOptions* info_options);
  private:
  const ::openfoxwq::InfoOptions& _internal_info_options() const;
  ::openfoxwq::InfoOptions* _internal_mutable_info_options();
  public:
  void unsafe_arena_set_allocated_info_options(
      ::openfoxwq::InfoOptions* info_options);
  ::openfoxwq::InfoOptions* unsafe_arena_release_info_options();

  // required int64 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.GetPlayerInfoRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::openfoxwq::InfoOptions* info_options_;
    int64_t player_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class GetPlayerInfoResponse_RegisterInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.GetPlayerInfoResponse.RegisterInfo) */ {
 public:
  inline GetPlayerInfoResponse_RegisterInfo() : GetPlayerInfoResponse_RegisterInfo(nullptr) {}
  ~GetPlayerInfoResponse_RegisterInfo() override;
  explicit PROTOBUF_CONSTEXPR GetPlayerInfoResponse_RegisterInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPlayerInfoResponse_RegisterInfo(const GetPlayerInfoResponse_RegisterInfo& from);
  GetPlayerInfoResponse_RegisterInfo(GetPlayerInfoResponse_RegisterInfo&& from) noexcept
    : GetPlayerInfoResponse_RegisterInfo() {
    *this = ::std::move(from);
  }

  inline GetPlayerInfoResponse_RegisterInfo& operator=(const GetPlayerInfoResponse_RegisterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlayerInfoResponse_RegisterInfo& operator=(GetPlayerInfoResponse_RegisterInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPlayerInfoResponse_RegisterInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPlayerInfoResponse_RegisterInfo* internal_default_instance() {
    return reinterpret_cast<const GetPlayerInfoResponse_RegisterInfo*>(
               &_GetPlayerInfoResponse_RegisterInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetPlayerInfoResponse_RegisterInfo& a, GetPlayerInfoResponse_RegisterInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPlayerInfoResponse_RegisterInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPlayerInfoResponse_RegisterInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPlayerInfoResponse_RegisterInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPlayerInfoResponse_RegisterInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetPlayerInfoResponse_RegisterInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetPlayerInfoResponse_RegisterInfo& from) {
    GetPlayerInfoResponse_RegisterInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPlayerInfoResponse_RegisterInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.GetPlayerInfoResponse.RegisterInfo";
  }
  protected:
  explicit GetPlayerInfoResponse_RegisterInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameNativeFieldNumber = 4,
    kNameFieldNumber = 5,
    kPlayerIdFieldNumber = 1,
    kUnknownField2FieldNumber = 2,
    kUnknownField3FieldNumber = 3,
    kUnknownField7FieldNumber = 7,
    kMemberSinceUnixTsFieldNumber = 8,
  };
  // required string name_native = 4;
  bool has_name_native() const;
  private:
  bool _internal_has_name_native() const;
  public:
  void clear_name_native();
  const std::string& name_native() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name_native(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name_native();
  PROTOBUF_NODISCARD std::string* release_name_native();
  void set_allocated_name_native(std::string* name_native);
  private:
  const std::string& _internal_name_native() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name_native(const std::string& value);
  std::string* _internal_mutable_name_native();
  public:

  // required string name = 5;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required int64 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // required int64 unknown_field_2 = 2;
  bool has_unknown_field_2() const;
  private:
  bool _internal_has_unknown_field_2() const;
  public:
  void clear_unknown_field_2();
  int64_t unknown_field_2() const;
  void set_unknown_field_2(int64_t value);
  private:
  int64_t _internal_unknown_field_2() const;
  void _internal_set_unknown_field_2(int64_t value);
  public:

  // required int64 unknown_field_3 = 3;
  bool has_unknown_field_3() const;
  private:
  bool _internal_has_unknown_field_3() const;
  public:
  void clear_unknown_field_3();
  int64_t unknown_field_3() const;
  void set_unknown_field_3(int64_t value);
  private:
  int64_t _internal_unknown_field_3() const;
  void _internal_set_unknown_field_3(int64_t value);
  public:

  // required int64 unknown_field_7 = 7;
  bool has_unknown_field_7() const;
  private:
  bool _internal_has_unknown_field_7() const;
  public:
  void clear_unknown_field_7();
  int64_t unknown_field_7() const;
  void set_unknown_field_7(int64_t value);
  private:
  int64_t _internal_unknown_field_7() const;
  void _internal_set_unknown_field_7(int64_t value);
  public:

  // required int64 member_since_unix_ts = 8;
  bool has_member_since_unix_ts() const;
  private:
  bool _internal_has_member_since_unix_ts() const;
  public:
  void clear_member_since_unix_ts();
  int64_t member_since_unix_ts() const;
  void set_member_since_unix_ts(int64_t value);
  private:
  int64_t _internal_member_since_unix_ts() const;
  void _internal_set_member_since_unix_ts(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.GetPlayerInfoResponse.RegisterInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_native_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    int64_t player_id_;
    int64_t unknown_field_2_;
    int64_t unknown_field_3_;
    int64_t unknown_field_7_;
    int64_t member_since_unix_ts_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class GetPlayerInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.GetPlayerInfoResponse) */ {
 public:
  inline GetPlayerInfoResponse() : GetPlayerInfoResponse(nullptr) {}
  ~GetPlayerInfoResponse() override;
  explicit PROTOBUF_CONSTEXPR GetPlayerInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetPlayerInfoResponse(const GetPlayerInfoResponse& from);
  GetPlayerInfoResponse(GetPlayerInfoResponse&& from) noexcept
    : GetPlayerInfoResponse() {
    *this = ::std::move(from);
  }

  inline GetPlayerInfoResponse& operator=(const GetPlayerInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPlayerInfoResponse& operator=(GetPlayerInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetPlayerInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetPlayerInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetPlayerInfoResponse*>(
               &_GetPlayerInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetPlayerInfoResponse& a, GetPlayerInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetPlayerInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetPlayerInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetPlayerInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetPlayerInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetPlayerInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetPlayerInfoResponse& from) {
    GetPlayerInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPlayerInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.GetPlayerInfoResponse";
  }
  protected:
  explicit GetPlayerInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetPlayerInfoResponse_RegisterInfo RegisterInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kGameResultsFieldNumber = 16,
    kInfoOptionsFieldNumber = 2,
    kRegisterInfoFieldNumber = 8,
    kPlayerIdFieldNumber = 3,
    kPlayerIdAgainFieldNumber = 5,
  };
  // repeated .openfoxwq.ExtendedGameResults game_results = 16;
  int game_results_size() const;
  private:
  int _internal_game_results_size() const;
  public:
  void clear_game_results();
  ::openfoxwq::ExtendedGameResults* mutable_game_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ExtendedGameResults >*
      mutable_game_results();
  private:
  const ::openfoxwq::ExtendedGameResults& _internal_game_results(int index) const;
  ::openfoxwq::ExtendedGameResults* _internal_add_game_results();
  public:
  const ::openfoxwq::ExtendedGameResults& game_results(int index) const;
  ::openfoxwq::ExtendedGameResults* add_game_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ExtendedGameResults >&
      game_results() const;

  // required .openfoxwq.InfoOptions info_options = 2;
  bool has_info_options() const;
  private:
  bool _internal_has_info_options() const;
  public:
  void clear_info_options();
  const ::openfoxwq::InfoOptions& info_options() const;
  PROTOBUF_NODISCARD ::openfoxwq::InfoOptions* release_info_options();
  ::openfoxwq::InfoOptions* mutable_info_options();
  void set_allocated_info_options(::openfoxwq::InfoOptions* info_options);
  private:
  const ::openfoxwq::InfoOptions& _internal_info_options() const;
  ::openfoxwq::InfoOptions* _internal_mutable_info_options();
  public:
  void unsafe_arena_set_allocated_info_options(
      ::openfoxwq::InfoOptions* info_options);
  ::openfoxwq::InfoOptions* unsafe_arena_release_info_options();

  // optional .openfoxwq.GetPlayerInfoResponse.RegisterInfo register_info = 8;
  bool has_register_info() const;
  private:
  bool _internal_has_register_info() const;
  public:
  void clear_register_info();
  const ::openfoxwq::GetPlayerInfoResponse_RegisterInfo& register_info() const;
  PROTOBUF_NODISCARD ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* release_register_info();
  ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* mutable_register_info();
  void set_allocated_register_info(::openfoxwq::GetPlayerInfoResponse_RegisterInfo* register_info);
  private:
  const ::openfoxwq::GetPlayerInfoResponse_RegisterInfo& _internal_register_info() const;
  ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* _internal_mutable_register_info();
  public:
  void unsafe_arena_set_allocated_register_info(
      ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* register_info);
  ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* unsafe_arena_release_register_info();

  // required int64 player_id = 3;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // required int64 player_id_again = 5;
  bool has_player_id_again() const;
  private:
  bool _internal_has_player_id_again() const;
  public:
  void clear_player_id_again();
  int64_t player_id_again() const;
  void set_player_id_again(int64_t value);
  private:
  int64_t _internal_player_id_again() const;
  void _internal_set_player_id_again(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.GetPlayerInfoResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ExtendedGameResults > game_results_;
    ::openfoxwq::InfoOptions* info_options_;
    ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* register_info_;
    int64_t player_id_;
    int64_t player_id_again_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class InfoOptions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.InfoOptions) */ {
 public:
  inline InfoOptions() : InfoOptions(nullptr) {}
  ~InfoOptions() override;
  explicit PROTOBUF_CONSTEXPR InfoOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InfoOptions(const InfoOptions& from);
  InfoOptions(InfoOptions&& from) noexcept
    : InfoOptions() {
    *this = ::std::move(from);
  }

  inline InfoOptions& operator=(const InfoOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline InfoOptions& operator=(InfoOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InfoOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const InfoOptions* internal_default_instance() {
    return reinterpret_cast<const InfoOptions*>(
               &_InfoOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(InfoOptions& a, InfoOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(InfoOptions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InfoOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InfoOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InfoOptions>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InfoOptions& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InfoOptions& from) {
    InfoOptions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InfoOptions* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.InfoOptions";
  }
  protected:
  explicit InfoOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
    kUnknownField2FieldNumber = 2,
  };
  // required int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // optional int64 unknown_field_2 = 2;
  bool has_unknown_field_2() const;
  private:
  bool _internal_has_unknown_field_2() const;
  public:
  void clear_unknown_field_2();
  int64_t unknown_field_2() const;
  void set_unknown_field_2(int64_t value);
  private:
  int64_t _internal_unknown_field_2() const;
  void _internal_set_unknown_field_2(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.InfoOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
    int64_t unknown_field_2_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class SyncTimeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.SyncTimeRequest) */ {
 public:
  inline SyncTimeRequest() : SyncTimeRequest(nullptr) {}
  ~SyncTimeRequest() override;
  explicit PROTOBUF_CONSTEXPR SyncTimeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncTimeRequest(const SyncTimeRequest& from);
  SyncTimeRequest(SyncTimeRequest&& from) noexcept
    : SyncTimeRequest() {
    *this = ::std::move(from);
  }

  inline SyncTimeRequest& operator=(const SyncTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncTimeRequest& operator=(SyncTimeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncTimeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncTimeRequest* internal_default_instance() {
    return reinterpret_cast<const SyncTimeRequest*>(
               &_SyncTimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SyncTimeRequest& a, SyncTimeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncTimeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncTimeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncTimeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncTimeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncTimeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SyncTimeRequest& from) {
    SyncTimeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncTimeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.SyncTimeRequest";
  }
  protected:
  explicit SyncTimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnixTsFieldNumber = 1,
  };
  // required int64 unix_ts = 1;
  bool has_unix_ts() const;
  private:
  bool _internal_has_unix_ts() const;
  public:
  void clear_unix_ts();
  int64_t unix_ts() const;
  void set_unix_ts(int64_t value);
  private:
  int64_t _internal_unix_ts() const;
  void _internal_set_unix_ts(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.SyncTimeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unix_ts_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class SyncTimeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.SyncTimeResponse) */ {
 public:
  inline SyncTimeResponse() : SyncTimeResponse(nullptr) {}
  ~SyncTimeResponse() override;
  explicit PROTOBUF_CONSTEXPR SyncTimeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncTimeResponse(const SyncTimeResponse& from);
  SyncTimeResponse(SyncTimeResponse&& from) noexcept
    : SyncTimeResponse() {
    *this = ::std::move(from);
  }

  inline SyncTimeResponse& operator=(const SyncTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncTimeResponse& operator=(SyncTimeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncTimeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncTimeResponse* internal_default_instance() {
    return reinterpret_cast<const SyncTimeResponse*>(
               &_SyncTimeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SyncTimeResponse& a, SyncTimeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncTimeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncTimeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncTimeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncTimeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncTimeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SyncTimeResponse& from) {
    SyncTimeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncTimeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.SyncTimeResponse";
  }
  protected:
  explicit SyncTimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnixTsFieldNumber = 1,
    kUnixTsUsFieldNumber = 2,
  };
  // required int64 unix_ts = 1;
  bool has_unix_ts() const;
  private:
  bool _internal_has_unix_ts() const;
  public:
  void clear_unix_ts();
  int64_t unix_ts() const;
  void set_unix_ts(int64_t value);
  private:
  int64_t _internal_unix_ts() const;
  void _internal_set_unix_ts(int64_t value);
  public:

  // required int64 unix_ts_us = 2;
  bool has_unix_ts_us() const;
  private:
  bool _internal_has_unix_ts_us() const;
  public:
  void clear_unix_ts_us();
  int64_t unix_ts_us() const;
  void set_unix_ts_us(int64_t value);
  private:
  int64_t _internal_unix_ts_us() const;
  void _internal_set_unix_ts_us(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.SyncTimeResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unix_ts_;
    int64_t unix_ts_us_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class SyncPlayersRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.SyncPlayersRequest) */ {
 public:
  inline SyncPlayersRequest() : SyncPlayersRequest(nullptr) {}
  ~SyncPlayersRequest() override;
  explicit PROTOBUF_CONSTEXPR SyncPlayersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncPlayersRequest(const SyncPlayersRequest& from);
  SyncPlayersRequest(SyncPlayersRequest&& from) noexcept
    : SyncPlayersRequest() {
    *this = ::std::move(from);
  }

  inline SyncPlayersRequest& operator=(const SyncPlayersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncPlayersRequest& operator=(SyncPlayersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncPlayersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncPlayersRequest* internal_default_instance() {
    return reinterpret_cast<const SyncPlayersRequest*>(
               &_SyncPlayersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SyncPlayersRequest& a, SyncPlayersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncPlayersRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncPlayersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncPlayersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncPlayersRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncPlayersRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SyncPlayersRequest& from) {
    SyncPlayersRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncPlayersRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.SyncPlayersRequest";
  }
  protected:
  explicit SyncPlayersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
  };
  // required int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.SyncPlayersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class SyncPlayersResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.SyncPlayersResponse) */ {
 public:
  inline SyncPlayersResponse() : SyncPlayersResponse(nullptr) {}
  ~SyncPlayersResponse() override;
  explicit PROTOBUF_CONSTEXPR SyncPlayersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncPlayersResponse(const SyncPlayersResponse& from);
  SyncPlayersResponse(SyncPlayersResponse&& from) noexcept
    : SyncPlayersResponse() {
    *this = ::std::move(from);
  }

  inline SyncPlayersResponse& operator=(const SyncPlayersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncPlayersResponse& operator=(SyncPlayersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncPlayersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncPlayersResponse* internal_default_instance() {
    return reinterpret_cast<const SyncPlayersResponse*>(
               &_SyncPlayersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SyncPlayersResponse& a, SyncPlayersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncPlayersResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncPlayersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncPlayersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncPlayersResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncPlayersResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SyncPlayersResponse& from) {
    SyncPlayersResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncPlayersResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.SyncPlayersResponse";
  }
  protected:
  explicit SyncPlayersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
    kUnknownField2FieldNumber = 2,
  };
  // required int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // required int64 unknown_field_2 = 2;
  bool has_unknown_field_2() const;
  private:
  bool _internal_has_unknown_field_2() const;
  public:
  void clear_unknown_field_2();
  int64_t unknown_field_2() const;
  void set_unknown_field_2(int64_t value);
  private:
  int64_t _internal_unknown_field_2() const;
  void _internal_set_unknown_field_2(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.SyncPlayersResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
    int64_t unknown_field_2_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class PlayerStateEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.PlayerStateEvent) */ {
 public:
  inline PlayerStateEvent() : PlayerStateEvent(nullptr) {}
  ~PlayerStateEvent() override;
  explicit PROTOBUF_CONSTEXPR PlayerStateEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PlayerStateEvent(const PlayerStateEvent& from);
  PlayerStateEvent(PlayerStateEvent&& from) noexcept
    : PlayerStateEvent() {
    *this = ::std::move(from);
  }

  inline PlayerStateEvent& operator=(const PlayerStateEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerStateEvent& operator=(PlayerStateEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerStateEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerStateEvent* internal_default_instance() {
    return reinterpret_cast<const PlayerStateEvent*>(
               &_PlayerStateEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PlayerStateEvent& a, PlayerStateEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerStateEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerStateEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerStateEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerStateEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PlayerStateEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PlayerStateEvent& from) {
    PlayerStateEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStateEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.PlayerStateEvent";
  }
  protected:
  explicit PlayerStateEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerInfoFieldNumber = 1,
    kOnlineCountFieldNumber = 2,
    kUnknownField3FieldNumber = 3,
  };
  // required .openfoxwq.PlayerInfo player_info = 1;
  bool has_player_info() const;
  private:
  bool _internal_has_player_info() const;
  public:
  void clear_player_info();
  const ::openfoxwq::PlayerInfo& player_info() const;
  PROTOBUF_NODISCARD ::openfoxwq::PlayerInfo* release_player_info();
  ::openfoxwq::PlayerInfo* mutable_player_info();
  void set_allocated_player_info(::openfoxwq::PlayerInfo* player_info);
  private:
  const ::openfoxwq::PlayerInfo& _internal_player_info() const;
  ::openfoxwq::PlayerInfo* _internal_mutable_player_info();
  public:
  void unsafe_arena_set_allocated_player_info(
      ::openfoxwq::PlayerInfo* player_info);
  ::openfoxwq::PlayerInfo* unsafe_arena_release_player_info();

  // required int64 online_count = 2;
  bool has_online_count() const;
  private:
  bool _internal_has_online_count() const;
  public:
  void clear_online_count();
  int64_t online_count() const;
  void set_online_count(int64_t value);
  private:
  int64_t _internal_online_count() const;
  void _internal_set_online_count(int64_t value);
  public:

  // optional int64 unknown_field_3 = 3;
  bool has_unknown_field_3() const;
  private:
  bool _internal_has_unknown_field_3() const;
  public:
  void clear_unknown_field_3();
  int64_t unknown_field_3() const;
  void set_unknown_field_3(int64_t value);
  private:
  int64_t _internal_unknown_field_3() const;
  void _internal_set_unknown_field_3(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.PlayerStateEvent)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::openfoxwq::PlayerInfo* player_info_;
    int64_t online_count_;
    int64_t unknown_field_3_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class UnknownPlayerEvent1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.UnknownPlayerEvent1) */ {
 public:
  inline UnknownPlayerEvent1() : UnknownPlayerEvent1(nullptr) {}
  ~UnknownPlayerEvent1() override;
  explicit PROTOBUF_CONSTEXPR UnknownPlayerEvent1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownPlayerEvent1(const UnknownPlayerEvent1& from);
  UnknownPlayerEvent1(UnknownPlayerEvent1&& from) noexcept
    : UnknownPlayerEvent1() {
    *this = ::std::move(from);
  }

  inline UnknownPlayerEvent1& operator=(const UnknownPlayerEvent1& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownPlayerEvent1& operator=(UnknownPlayerEvent1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnknownPlayerEvent1& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownPlayerEvent1* internal_default_instance() {
    return reinterpret_cast<const UnknownPlayerEvent1*>(
               &_UnknownPlayerEvent1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(UnknownPlayerEvent1& a, UnknownPlayerEvent1& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownPlayerEvent1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownPlayerEvent1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownPlayerEvent1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownPlayerEvent1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnknownPlayerEvent1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UnknownPlayerEvent1& from) {
    UnknownPlayerEvent1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownPlayerEvent1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.UnknownPlayerEvent1";
  }
  protected:
  explicit UnknownPlayerEvent1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kOnlineCountFieldNumber = 2,
    kUnknownField3FieldNumber = 3,
  };
  // required int64 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  int64_t player_id() const;
  void set_player_id(int64_t value);
  private:
  int64_t _internal_player_id() const;
  void _internal_set_player_id(int64_t value);
  public:

  // required int64 online_count = 2;
  bool has_online_count() const;
  private:
  bool _internal_has_online_count() const;
  public:
  void clear_online_count();
  int64_t online_count() const;
  void set_online_count(int64_t value);
  private:
  int64_t _internal_online_count() const;
  void _internal_set_online_count(int64_t value);
  public:

  // optional int64 unknown_field_3 = 3;
  bool has_unknown_field_3() const;
  private:
  bool _internal_has_unknown_field_3() const;
  public:
  void clear_unknown_field_3();
  int64_t unknown_field_3() const;
  void set_unknown_field_3(int64_t value);
  private:
  int64_t _internal_unknown_field_3() const;
  void _internal_set_unknown_field_3(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.UnknownPlayerEvent1)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t player_id_;
    int64_t online_count_;
    int64_t unknown_field_3_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class UnknownPlayRequest1_UnknownPlayRequest1Nested1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1) */ {
 public:
  inline UnknownPlayRequest1_UnknownPlayRequest1Nested1() : UnknownPlayRequest1_UnknownPlayRequest1Nested1(nullptr) {}
  ~UnknownPlayRequest1_UnknownPlayRequest1Nested1() override;
  explicit PROTOBUF_CONSTEXPR UnknownPlayRequest1_UnknownPlayRequest1Nested1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownPlayRequest1_UnknownPlayRequest1Nested1(const UnknownPlayRequest1_UnknownPlayRequest1Nested1& from);
  UnknownPlayRequest1_UnknownPlayRequest1Nested1(UnknownPlayRequest1_UnknownPlayRequest1Nested1&& from) noexcept
    : UnknownPlayRequest1_UnknownPlayRequest1Nested1() {
    *this = ::std::move(from);
  }

  inline UnknownPlayRequest1_UnknownPlayRequest1Nested1& operator=(const UnknownPlayRequest1_UnknownPlayRequest1Nested1& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownPlayRequest1_UnknownPlayRequest1Nested1& operator=(UnknownPlayRequest1_UnknownPlayRequest1Nested1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnknownPlayRequest1_UnknownPlayRequest1Nested1& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownPlayRequest1_UnknownPlayRequest1Nested1* internal_default_instance() {
    return reinterpret_cast<const UnknownPlayRequest1_UnknownPlayRequest1Nested1*>(
               &_UnknownPlayRequest1_UnknownPlayRequest1Nested1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(UnknownPlayRequest1_UnknownPlayRequest1Nested1& a, UnknownPlayRequest1_UnknownPlayRequest1Nested1& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownPlayRequest1_UnknownPlayRequest1Nested1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownPlayRequest1_UnknownPlayRequest1Nested1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownPlayRequest1_UnknownPlayRequest1Nested1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownPlayRequest1_UnknownPlayRequest1Nested1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnknownPlayRequest1_UnknownPlayRequest1Nested1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UnknownPlayRequest1_UnknownPlayRequest1Nested1& from) {
    UnknownPlayRequest1_UnknownPlayRequest1Nested1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownPlayRequest1_UnknownPlayRequest1Nested1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1";
  }
  protected:
  explicit UnknownPlayRequest1_UnknownPlayRequest1Nested1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
  };
  // required string unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  const std::string& unknown_field_1() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_unknown_field_1(ArgT0&& arg0, ArgT... args);
  std::string* mutable_unknown_field_1();
  PROTOBUF_NODISCARD std::string* release_unknown_field_1();
  void set_allocated_unknown_field_1(std::string* unknown_field_1);
  private:
  const std::string& _internal_unknown_field_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_unknown_field_1(const std::string& value);
  std::string* _internal_mutable_unknown_field_1();
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr unknown_field_1_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class UnknownPlayRequest1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.UnknownPlayRequest1) */ {
 public:
  inline UnknownPlayRequest1() : UnknownPlayRequest1(nullptr) {}
  ~UnknownPlayRequest1() override;
  explicit PROTOBUF_CONSTEXPR UnknownPlayRequest1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownPlayRequest1(const UnknownPlayRequest1& from);
  UnknownPlayRequest1(UnknownPlayRequest1&& from) noexcept
    : UnknownPlayRequest1() {
    *this = ::std::move(from);
  }

  inline UnknownPlayRequest1& operator=(const UnknownPlayRequest1& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownPlayRequest1& operator=(UnknownPlayRequest1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnknownPlayRequest1& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownPlayRequest1* internal_default_instance() {
    return reinterpret_cast<const UnknownPlayRequest1*>(
               &_UnknownPlayRequest1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(UnknownPlayRequest1& a, UnknownPlayRequest1& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownPlayRequest1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownPlayRequest1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownPlayRequest1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownPlayRequest1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnknownPlayRequest1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UnknownPlayRequest1& from) {
    UnknownPlayRequest1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownPlayRequest1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.UnknownPlayRequest1";
  }
  protected:
  explicit UnknownPlayRequest1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UnknownPlayRequest1_UnknownPlayRequest1Nested1 UnknownPlayRequest1Nested1;

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
    kUnknownField2FieldNumber = 2,
  };
  // required .openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  const ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1& unknown_field_1() const;
  PROTOBUF_NODISCARD ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* release_unknown_field_1();
  ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* mutable_unknown_field_1();
  void set_allocated_unknown_field_1(::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* unknown_field_1);
  private:
  const ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1& _internal_unknown_field_1() const;
  ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* _internal_mutable_unknown_field_1();
  public:
  void unsafe_arena_set_allocated_unknown_field_1(
      ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* unknown_field_1);
  ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* unsafe_arena_release_unknown_field_1();

  // required int64 unknown_field_2 = 2;
  bool has_unknown_field_2() const;
  private:
  bool _internal_has_unknown_field_2() const;
  public:
  void clear_unknown_field_2();
  int64_t unknown_field_2() const;
  void set_unknown_field_2(int64_t value);
  private:
  int64_t _internal_unknown_field_2() const;
  void _internal_set_unknown_field_2(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.UnknownPlayRequest1)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* unknown_field_1_;
    int64_t unknown_field_2_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// -------------------------------------------------------------------

class UnknownPlayResponse1 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:openfoxwq.UnknownPlayResponse1) */ {
 public:
  inline UnknownPlayResponse1() : UnknownPlayResponse1(nullptr) {}
  ~UnknownPlayResponse1() override;
  explicit PROTOBUF_CONSTEXPR UnknownPlayResponse1(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownPlayResponse1(const UnknownPlayResponse1& from);
  UnknownPlayResponse1(UnknownPlayResponse1&& from) noexcept
    : UnknownPlayResponse1() {
    *this = ::std::move(from);
  }

  inline UnknownPlayResponse1& operator=(const UnknownPlayResponse1& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownPlayResponse1& operator=(UnknownPlayResponse1&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnknownPlayResponse1& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownPlayResponse1* internal_default_instance() {
    return reinterpret_cast<const UnknownPlayResponse1*>(
               &_UnknownPlayResponse1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UnknownPlayResponse1& a, UnknownPlayResponse1& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownPlayResponse1* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownPlayResponse1* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownPlayResponse1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownPlayResponse1>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnknownPlayResponse1& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UnknownPlayResponse1& from) {
    UnknownPlayResponse1::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownPlayResponse1* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "openfoxwq.UnknownPlayResponse1";
  }
  protected:
  explicit UnknownPlayResponse1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownField1FieldNumber = 1,
  };
  // optional int64 unknown_field_1 = 1;
  bool has_unknown_field_1() const;
  private:
  bool _internal_has_unknown_field_1() const;
  public:
  void clear_unknown_field_1();
  int64_t unknown_field_1() const;
  void set_unknown_field_1(int64_t value);
  private:
  int64_t _internal_unknown_field_1() const;
  void _internal_set_unknown_field_1(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:openfoxwq.UnknownPlayResponse1)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t unknown_field_1_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fplay_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginPlayServerRequest

// required string token = 1;
inline bool LoginPlayServerRequest::_internal_has_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LoginPlayServerRequest::has_token() const {
  return _internal_has_token();
}
inline void LoginPlayServerRequest::clear_token() {
  _impl_.token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LoginPlayServerRequest::token() const {
  // @@protoc_insertion_point(field_get:openfoxwq.LoginPlayServerRequest.token)
  return _internal_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void LoginPlayServerRequest::set_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.LoginPlayServerRequest.token)
}
inline std::string* LoginPlayServerRequest::mutable_token() {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:openfoxwq.LoginPlayServerRequest.token)
  return _s;
}
inline const std::string& LoginPlayServerRequest::_internal_token() const {
  return _impl_.token_.Get();
}
inline void LoginPlayServerRequest::_internal_set_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.token_.Set(value, GetArenaForAllocation());
}
inline std::string* LoginPlayServerRequest::_internal_mutable_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.token_.Mutable(GetArenaForAllocation());
}
inline std::string* LoginPlayServerRequest::release_token() {
  // @@protoc_insertion_point(field_release:openfoxwq.LoginPlayServerRequest.token)
  if (!_internal_has_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void LoginPlayServerRequest::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.token_.SetAllocated(token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.LoginPlayServerRequest.token)
}

// -------------------------------------------------------------------

// LoginPlayServerResponse

// optional int64 unknown_field_1 = 1;
inline bool LoginPlayServerResponse::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool LoginPlayServerResponse::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void LoginPlayServerResponse::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t LoginPlayServerResponse::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t LoginPlayServerResponse::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.LoginPlayServerResponse.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void LoginPlayServerResponse::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void LoginPlayServerResponse::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.LoginPlayServerResponse.unknown_field_1)
}

// optional int64 unknown_field_2 = 2;
inline bool LoginPlayServerResponse::_internal_has_unknown_field_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool LoginPlayServerResponse::has_unknown_field_2() const {
  return _internal_has_unknown_field_2();
}
inline void LoginPlayServerResponse::clear_unknown_field_2() {
  _impl_.unknown_field_2_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t LoginPlayServerResponse::_internal_unknown_field_2() const {
  return _impl_.unknown_field_2_;
}
inline int64_t LoginPlayServerResponse::unknown_field_2() const {
  // @@protoc_insertion_point(field_get:openfoxwq.LoginPlayServerResponse.unknown_field_2)
  return _internal_unknown_field_2();
}
inline void LoginPlayServerResponse::_internal_set_unknown_field_2(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unknown_field_2_ = value;
}
inline void LoginPlayServerResponse::set_unknown_field_2(int64_t value) {
  _internal_set_unknown_field_2(value);
  // @@protoc_insertion_point(field_set:openfoxwq.LoginPlayServerResponse.unknown_field_2)
}

// optional int64 unknown_field_3 = 3;
inline bool LoginPlayServerResponse::_internal_has_unknown_field_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool LoginPlayServerResponse::has_unknown_field_3() const {
  return _internal_has_unknown_field_3();
}
inline void LoginPlayServerResponse::clear_unknown_field_3() {
  _impl_.unknown_field_3_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t LoginPlayServerResponse::_internal_unknown_field_3() const {
  return _impl_.unknown_field_3_;
}
inline int64_t LoginPlayServerResponse::unknown_field_3() const {
  // @@protoc_insertion_point(field_get:openfoxwq.LoginPlayServerResponse.unknown_field_3)
  return _internal_unknown_field_3();
}
inline void LoginPlayServerResponse::_internal_set_unknown_field_3(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.unknown_field_3_ = value;
}
inline void LoginPlayServerResponse::set_unknown_field_3(int64_t value) {
  _internal_set_unknown_field_3(value);
  // @@protoc_insertion_point(field_set:openfoxwq.LoginPlayServerResponse.unknown_field_3)
}

// optional int64 unknown_field_4 = 4;
inline bool LoginPlayServerResponse::_internal_has_unknown_field_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool LoginPlayServerResponse::has_unknown_field_4() const {
  return _internal_has_unknown_field_4();
}
inline void LoginPlayServerResponse::clear_unknown_field_4() {
  _impl_.unknown_field_4_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t LoginPlayServerResponse::_internal_unknown_field_4() const {
  return _impl_.unknown_field_4_;
}
inline int64_t LoginPlayServerResponse::unknown_field_4() const {
  // @@protoc_insertion_point(field_get:openfoxwq.LoginPlayServerResponse.unknown_field_4)
  return _internal_unknown_field_4();
}
inline void LoginPlayServerResponse::_internal_set_unknown_field_4(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.unknown_field_4_ = value;
}
inline void LoginPlayServerResponse::set_unknown_field_4(int64_t value) {
  _internal_set_unknown_field_4(value);
  // @@protoc_insertion_point(field_set:openfoxwq.LoginPlayServerResponse.unknown_field_4)
}

// -------------------------------------------------------------------

// ListPlayersRequest

// required int64 unknown_field_1 = 1;
inline bool ListPlayersRequest::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ListPlayersRequest::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void ListPlayersRequest::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t ListPlayersRequest::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t ListPlayersRequest::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersRequest.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void ListPlayersRequest::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void ListPlayersRequest::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.ListPlayersRequest.unknown_field_1)
}

// -------------------------------------------------------------------

// ListPlayersResponse

// repeated .openfoxwq.PlayerInfo players = 2;
inline int ListPlayersResponse::_internal_players_size() const {
  return _impl_.players_.size();
}
inline int ListPlayersResponse::players_size() const {
  return _internal_players_size();
}
inline ::openfoxwq::PlayerInfo* ListPlayersResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:openfoxwq.ListPlayersResponse.players)
  return _impl_.players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::PlayerInfo >*
ListPlayersResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:openfoxwq.ListPlayersResponse.players)
  return &_impl_.players_;
}
inline const ::openfoxwq::PlayerInfo& ListPlayersResponse::_internal_players(int index) const {
  return _impl_.players_.Get(index);
}
inline const ::openfoxwq::PlayerInfo& ListPlayersResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersResponse.players)
  return _internal_players(index);
}
inline ::openfoxwq::PlayerInfo* ListPlayersResponse::_internal_add_players() {
  return _impl_.players_.Add();
}
inline ::openfoxwq::PlayerInfo* ListPlayersResponse::add_players() {
  ::openfoxwq::PlayerInfo* _add = _internal_add_players();
  // @@protoc_insertion_point(field_add:openfoxwq.ListPlayersResponse.players)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::PlayerInfo >&
ListPlayersResponse::players() const {
  // @@protoc_insertion_point(field_list:openfoxwq.ListPlayersResponse.players)
  return _impl_.players_;
}

// required int64 page_index = 3;
inline bool ListPlayersResponse::_internal_has_page_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ListPlayersResponse::has_page_index() const {
  return _internal_has_page_index();
}
inline void ListPlayersResponse::clear_page_index() {
  _impl_.page_index_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t ListPlayersResponse::_internal_page_index() const {
  return _impl_.page_index_;
}
inline int64_t ListPlayersResponse::page_index() const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersResponse.page_index)
  return _internal_page_index();
}
inline void ListPlayersResponse::_internal_set_page_index(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.page_index_ = value;
}
inline void ListPlayersResponse::set_page_index(int64_t value) {
  _internal_set_page_index(value);
  // @@protoc_insertion_point(field_set:openfoxwq.ListPlayersResponse.page_index)
}

// required int64 page_count = 4;
inline bool ListPlayersResponse::_internal_has_page_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ListPlayersResponse::has_page_count() const {
  return _internal_has_page_count();
}
inline void ListPlayersResponse::clear_page_count() {
  _impl_.page_count_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t ListPlayersResponse::_internal_page_count() const {
  return _impl_.page_count_;
}
inline int64_t ListPlayersResponse::page_count() const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersResponse.page_count)
  return _internal_page_count();
}
inline void ListPlayersResponse::_internal_set_page_count(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.page_count_ = value;
}
inline void ListPlayersResponse::set_page_count(int64_t value) {
  _internal_set_page_count(value);
  // @@protoc_insertion_point(field_set:openfoxwq.ListPlayersResponse.page_count)
}

// optional int64 unknown_field_1 = 1;
inline bool ListPlayersResponse::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ListPlayersResponse::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void ListPlayersResponse::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t ListPlayersResponse::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t ListPlayersResponse::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersResponse.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void ListPlayersResponse::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void ListPlayersResponse::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.ListPlayersResponse.unknown_field_1)
}

// optional int64 unknown_field_5 = 5;
inline bool ListPlayersResponse::_internal_has_unknown_field_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ListPlayersResponse::has_unknown_field_5() const {
  return _internal_has_unknown_field_5();
}
inline void ListPlayersResponse::clear_unknown_field_5() {
  _impl_.unknown_field_5_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t ListPlayersResponse::_internal_unknown_field_5() const {
  return _impl_.unknown_field_5_;
}
inline int64_t ListPlayersResponse::unknown_field_5() const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersResponse.unknown_field_5)
  return _internal_unknown_field_5();
}
inline void ListPlayersResponse::_internal_set_unknown_field_5(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.unknown_field_5_ = value;
}
inline void ListPlayersResponse::set_unknown_field_5(int64_t value) {
  _internal_set_unknown_field_5(value);
  // @@protoc_insertion_point(field_set:openfoxwq.ListPlayersResponse.unknown_field_5)
}

// optional int64 unknown_field_6 = 6;
inline bool ListPlayersResponse::_internal_has_unknown_field_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ListPlayersResponse::has_unknown_field_6() const {
  return _internal_has_unknown_field_6();
}
inline void ListPlayersResponse::clear_unknown_field_6() {
  _impl_.unknown_field_6_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int64_t ListPlayersResponse::_internal_unknown_field_6() const {
  return _impl_.unknown_field_6_;
}
inline int64_t ListPlayersResponse::unknown_field_6() const {
  // @@protoc_insertion_point(field_get:openfoxwq.ListPlayersResponse.unknown_field_6)
  return _internal_unknown_field_6();
}
inline void ListPlayersResponse::_internal_set_unknown_field_6(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.unknown_field_6_ = value;
}
inline void ListPlayersResponse::set_unknown_field_6(int64_t value) {
  _internal_set_unknown_field_6(value);
  // @@protoc_insertion_point(field_set:openfoxwq.ListPlayersResponse.unknown_field_6)
}

// -------------------------------------------------------------------

// GetPlayerInfoRequest

// required int64 player_id = 1;
inline bool GetPlayerInfoRequest::_internal_has_player_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetPlayerInfoRequest::has_player_id() const {
  return _internal_has_player_id();
}
inline void GetPlayerInfoRequest::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t GetPlayerInfoRequest::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t GetPlayerInfoRequest::player_id() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoRequest.player_id)
  return _internal_player_id();
}
inline void GetPlayerInfoRequest::_internal_set_player_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.player_id_ = value;
}
inline void GetPlayerInfoRequest::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoRequest.player_id)
}

// required .openfoxwq.InfoOptions info_options = 3;
inline bool GetPlayerInfoRequest::_internal_has_info_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_options_ != nullptr);
  return value;
}
inline bool GetPlayerInfoRequest::has_info_options() const {
  return _internal_has_info_options();
}
inline void GetPlayerInfoRequest::clear_info_options() {
  if (_impl_.info_options_ != nullptr) _impl_.info_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::openfoxwq::InfoOptions& GetPlayerInfoRequest::_internal_info_options() const {
  const ::openfoxwq::InfoOptions* p = _impl_.info_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::openfoxwq::InfoOptions&>(
      ::openfoxwq::_InfoOptions_default_instance_);
}
inline const ::openfoxwq::InfoOptions& GetPlayerInfoRequest::info_options() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoRequest.info_options)
  return _internal_info_options();
}
inline void GetPlayerInfoRequest::unsafe_arena_set_allocated_info_options(
    ::openfoxwq::InfoOptions* info_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.info_options_);
  }
  _impl_.info_options_ = info_options;
  if (info_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openfoxwq.GetPlayerInfoRequest.info_options)
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoRequest::release_info_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::InfoOptions* temp = _impl_.info_options_;
  _impl_.info_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoRequest::unsafe_arena_release_info_options() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetPlayerInfoRequest.info_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::InfoOptions* temp = _impl_.info_options_;
  _impl_.info_options_ = nullptr;
  return temp;
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoRequest::_internal_mutable_info_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.info_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::openfoxwq::InfoOptions>(GetArenaForAllocation());
    _impl_.info_options_ = p;
  }
  return _impl_.info_options_;
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoRequest::mutable_info_options() {
  ::openfoxwq::InfoOptions* _msg = _internal_mutable_info_options();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetPlayerInfoRequest.info_options)
  return _msg;
}
inline void GetPlayerInfoRequest::set_allocated_info_options(::openfoxwq::InfoOptions* info_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.info_options_;
  }
  if (info_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(info_options);
    if (message_arena != submessage_arena) {
      info_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.info_options_ = info_options;
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetPlayerInfoRequest.info_options)
}

// -------------------------------------------------------------------

// GetPlayerInfoResponse_RegisterInfo

// required int64 player_id = 1;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_player_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_player_id() const {
  return _internal_has_player_id();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::player_id() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.player_id)
  return _internal_player_id();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_player_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.player_id_ = value;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.player_id)
}

// required string name_native = 4;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_name_native() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_name_native() const {
  return _internal_has_name_native();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_name_native() {
  _impl_.name_native_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetPlayerInfoResponse_RegisterInfo::name_native() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name_native)
  return _internal_name_native();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetPlayerInfoResponse_RegisterInfo::set_name_native(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_native_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name_native)
}
inline std::string* GetPlayerInfoResponse_RegisterInfo::mutable_name_native() {
  std::string* _s = _internal_mutable_name_native();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name_native)
  return _s;
}
inline const std::string& GetPlayerInfoResponse_RegisterInfo::_internal_name_native() const {
  return _impl_.name_native_.Get();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_name_native(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_native_.Set(value, GetArenaForAllocation());
}
inline std::string* GetPlayerInfoResponse_RegisterInfo::_internal_mutable_name_native() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_native_.Mutable(GetArenaForAllocation());
}
inline std::string* GetPlayerInfoResponse_RegisterInfo::release_name_native() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name_native)
  if (!_internal_has_name_native()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_native_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_native_.IsDefault()) {
    _impl_.name_native_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_allocated_name_native(std::string* name_native) {
  if (name_native != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_native_.SetAllocated(name_native, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_native_.IsDefault()) {
    _impl_.name_native_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name_native)
}

// required string name = 5;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_name() const {
  return _internal_has_name();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetPlayerInfoResponse_RegisterInfo::name() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetPlayerInfoResponse_RegisterInfo::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name)
}
inline std::string* GetPlayerInfoResponse_RegisterInfo::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name)
  return _s;
}
inline const std::string& GetPlayerInfoResponse_RegisterInfo::_internal_name() const {
  return _impl_.name_.Get();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetPlayerInfoResponse_RegisterInfo::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetPlayerInfoResponse_RegisterInfo::release_name() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetPlayerInfoResponse.RegisterInfo.name)
}

// required int64 member_since_unix_ts = 8;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_member_since_unix_ts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_member_since_unix_ts() const {
  return _internal_has_member_since_unix_ts();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_member_since_unix_ts() {
  _impl_.member_since_unix_ts_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::_internal_member_since_unix_ts() const {
  return _impl_.member_since_unix_ts_;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::member_since_unix_ts() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.member_since_unix_ts)
  return _internal_member_since_unix_ts();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_member_since_unix_ts(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.member_since_unix_ts_ = value;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_member_since_unix_ts(int64_t value) {
  _internal_set_member_since_unix_ts(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.member_since_unix_ts)
}

// required int64 unknown_field_2 = 2;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_unknown_field_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_unknown_field_2() const {
  return _internal_has_unknown_field_2();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_unknown_field_2() {
  _impl_.unknown_field_2_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::_internal_unknown_field_2() const {
  return _impl_.unknown_field_2_;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::unknown_field_2() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.unknown_field_2)
  return _internal_unknown_field_2();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_unknown_field_2(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.unknown_field_2_ = value;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_unknown_field_2(int64_t value) {
  _internal_set_unknown_field_2(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.unknown_field_2)
}

// required int64 unknown_field_3 = 3;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_unknown_field_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_unknown_field_3() const {
  return _internal_has_unknown_field_3();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_unknown_field_3() {
  _impl_.unknown_field_3_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::_internal_unknown_field_3() const {
  return _impl_.unknown_field_3_;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::unknown_field_3() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.unknown_field_3)
  return _internal_unknown_field_3();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_unknown_field_3(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.unknown_field_3_ = value;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_unknown_field_3(int64_t value) {
  _internal_set_unknown_field_3(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.unknown_field_3)
}

// required int64 unknown_field_7 = 7;
inline bool GetPlayerInfoResponse_RegisterInfo::_internal_has_unknown_field_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse_RegisterInfo::has_unknown_field_7() const {
  return _internal_has_unknown_field_7();
}
inline void GetPlayerInfoResponse_RegisterInfo::clear_unknown_field_7() {
  _impl_.unknown_field_7_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::_internal_unknown_field_7() const {
  return _impl_.unknown_field_7_;
}
inline int64_t GetPlayerInfoResponse_RegisterInfo::unknown_field_7() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.RegisterInfo.unknown_field_7)
  return _internal_unknown_field_7();
}
inline void GetPlayerInfoResponse_RegisterInfo::_internal_set_unknown_field_7(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.unknown_field_7_ = value;
}
inline void GetPlayerInfoResponse_RegisterInfo::set_unknown_field_7(int64_t value) {
  _internal_set_unknown_field_7(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.RegisterInfo.unknown_field_7)
}

// -------------------------------------------------------------------

// GetPlayerInfoResponse

// required int64 player_id = 3;
inline bool GetPlayerInfoResponse::_internal_has_player_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse::has_player_id() const {
  return _internal_has_player_id();
}
inline void GetPlayerInfoResponse::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t GetPlayerInfoResponse::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t GetPlayerInfoResponse::player_id() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.player_id)
  return _internal_player_id();
}
inline void GetPlayerInfoResponse::_internal_set_player_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.player_id_ = value;
}
inline void GetPlayerInfoResponse::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.player_id)
}

// required .openfoxwq.InfoOptions info_options = 2;
inline bool GetPlayerInfoResponse::_internal_has_info_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_options_ != nullptr);
  return value;
}
inline bool GetPlayerInfoResponse::has_info_options() const {
  return _internal_has_info_options();
}
inline void GetPlayerInfoResponse::clear_info_options() {
  if (_impl_.info_options_ != nullptr) _impl_.info_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::openfoxwq::InfoOptions& GetPlayerInfoResponse::_internal_info_options() const {
  const ::openfoxwq::InfoOptions* p = _impl_.info_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::openfoxwq::InfoOptions&>(
      ::openfoxwq::_InfoOptions_default_instance_);
}
inline const ::openfoxwq::InfoOptions& GetPlayerInfoResponse::info_options() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.info_options)
  return _internal_info_options();
}
inline void GetPlayerInfoResponse::unsafe_arena_set_allocated_info_options(
    ::openfoxwq::InfoOptions* info_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.info_options_);
  }
  _impl_.info_options_ = info_options;
  if (info_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openfoxwq.GetPlayerInfoResponse.info_options)
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoResponse::release_info_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::InfoOptions* temp = _impl_.info_options_;
  _impl_.info_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoResponse::unsafe_arena_release_info_options() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetPlayerInfoResponse.info_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::InfoOptions* temp = _impl_.info_options_;
  _impl_.info_options_ = nullptr;
  return temp;
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoResponse::_internal_mutable_info_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.info_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::openfoxwq::InfoOptions>(GetArenaForAllocation());
    _impl_.info_options_ = p;
  }
  return _impl_.info_options_;
}
inline ::openfoxwq::InfoOptions* GetPlayerInfoResponse::mutable_info_options() {
  ::openfoxwq::InfoOptions* _msg = _internal_mutable_info_options();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetPlayerInfoResponse.info_options)
  return _msg;
}
inline void GetPlayerInfoResponse::set_allocated_info_options(::openfoxwq::InfoOptions* info_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.info_options_;
  }
  if (info_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(info_options);
    if (message_arena != submessage_arena) {
      info_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.info_options_ = info_options;
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetPlayerInfoResponse.info_options)
}

// required int64 player_id_again = 5;
inline bool GetPlayerInfoResponse::_internal_has_player_id_again() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool GetPlayerInfoResponse::has_player_id_again() const {
  return _internal_has_player_id_again();
}
inline void GetPlayerInfoResponse::clear_player_id_again() {
  _impl_.player_id_again_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline int64_t GetPlayerInfoResponse::_internal_player_id_again() const {
  return _impl_.player_id_again_;
}
inline int64_t GetPlayerInfoResponse::player_id_again() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.player_id_again)
  return _internal_player_id_again();
}
inline void GetPlayerInfoResponse::_internal_set_player_id_again(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.player_id_again_ = value;
}
inline void GetPlayerInfoResponse::set_player_id_again(int64_t value) {
  _internal_set_player_id_again(value);
  // @@protoc_insertion_point(field_set:openfoxwq.GetPlayerInfoResponse.player_id_again)
}

// optional .openfoxwq.GetPlayerInfoResponse.RegisterInfo register_info = 8;
inline bool GetPlayerInfoResponse::_internal_has_register_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.register_info_ != nullptr);
  return value;
}
inline bool GetPlayerInfoResponse::has_register_info() const {
  return _internal_has_register_info();
}
inline void GetPlayerInfoResponse::clear_register_info() {
  if (_impl_.register_info_ != nullptr) _impl_.register_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::openfoxwq::GetPlayerInfoResponse_RegisterInfo& GetPlayerInfoResponse::_internal_register_info() const {
  const ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* p = _impl_.register_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::openfoxwq::GetPlayerInfoResponse_RegisterInfo&>(
      ::openfoxwq::_GetPlayerInfoResponse_RegisterInfo_default_instance_);
}
inline const ::openfoxwq::GetPlayerInfoResponse_RegisterInfo& GetPlayerInfoResponse::register_info() const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.register_info)
  return _internal_register_info();
}
inline void GetPlayerInfoResponse::unsafe_arena_set_allocated_register_info(
    ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* register_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.register_info_);
  }
  _impl_.register_info_ = register_info;
  if (register_info) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openfoxwq.GetPlayerInfoResponse.register_info)
}
inline ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* GetPlayerInfoResponse::release_register_info() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* temp = _impl_.register_info_;
  _impl_.register_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* GetPlayerInfoResponse::unsafe_arena_release_register_info() {
  // @@protoc_insertion_point(field_release:openfoxwq.GetPlayerInfoResponse.register_info)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* temp = _impl_.register_info_;
  _impl_.register_info_ = nullptr;
  return temp;
}
inline ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* GetPlayerInfoResponse::_internal_mutable_register_info() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.register_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::openfoxwq::GetPlayerInfoResponse_RegisterInfo>(GetArenaForAllocation());
    _impl_.register_info_ = p;
  }
  return _impl_.register_info_;
}
inline ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* GetPlayerInfoResponse::mutable_register_info() {
  ::openfoxwq::GetPlayerInfoResponse_RegisterInfo* _msg = _internal_mutable_register_info();
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetPlayerInfoResponse.register_info)
  return _msg;
}
inline void GetPlayerInfoResponse::set_allocated_register_info(::openfoxwq::GetPlayerInfoResponse_RegisterInfo* register_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.register_info_;
  }
  if (register_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(register_info);
    if (message_arena != submessage_arena) {
      register_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, register_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.register_info_ = register_info;
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.GetPlayerInfoResponse.register_info)
}

// repeated .openfoxwq.ExtendedGameResults game_results = 16;
inline int GetPlayerInfoResponse::_internal_game_results_size() const {
  return _impl_.game_results_.size();
}
inline int GetPlayerInfoResponse::game_results_size() const {
  return _internal_game_results_size();
}
inline ::openfoxwq::ExtendedGameResults* GetPlayerInfoResponse::mutable_game_results(int index) {
  // @@protoc_insertion_point(field_mutable:openfoxwq.GetPlayerInfoResponse.game_results)
  return _impl_.game_results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ExtendedGameResults >*
GetPlayerInfoResponse::mutable_game_results() {
  // @@protoc_insertion_point(field_mutable_list:openfoxwq.GetPlayerInfoResponse.game_results)
  return &_impl_.game_results_;
}
inline const ::openfoxwq::ExtendedGameResults& GetPlayerInfoResponse::_internal_game_results(int index) const {
  return _impl_.game_results_.Get(index);
}
inline const ::openfoxwq::ExtendedGameResults& GetPlayerInfoResponse::game_results(int index) const {
  // @@protoc_insertion_point(field_get:openfoxwq.GetPlayerInfoResponse.game_results)
  return _internal_game_results(index);
}
inline ::openfoxwq::ExtendedGameResults* GetPlayerInfoResponse::_internal_add_game_results() {
  return _impl_.game_results_.Add();
}
inline ::openfoxwq::ExtendedGameResults* GetPlayerInfoResponse::add_game_results() {
  ::openfoxwq::ExtendedGameResults* _add = _internal_add_game_results();
  // @@protoc_insertion_point(field_add:openfoxwq.GetPlayerInfoResponse.game_results)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::openfoxwq::ExtendedGameResults >&
GetPlayerInfoResponse::game_results() const {
  // @@protoc_insertion_point(field_list:openfoxwq.GetPlayerInfoResponse.game_results)
  return _impl_.game_results_;
}

// -------------------------------------------------------------------

// InfoOptions

// required int64 unknown_field_1 = 1;
inline bool InfoOptions::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool InfoOptions::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void InfoOptions::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t InfoOptions::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t InfoOptions::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.InfoOptions.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void InfoOptions::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void InfoOptions::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.InfoOptions.unknown_field_1)
}

// optional int64 unknown_field_2 = 2;
inline bool InfoOptions::_internal_has_unknown_field_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool InfoOptions::has_unknown_field_2() const {
  return _internal_has_unknown_field_2();
}
inline void InfoOptions::clear_unknown_field_2() {
  _impl_.unknown_field_2_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t InfoOptions::_internal_unknown_field_2() const {
  return _impl_.unknown_field_2_;
}
inline int64_t InfoOptions::unknown_field_2() const {
  // @@protoc_insertion_point(field_get:openfoxwq.InfoOptions.unknown_field_2)
  return _internal_unknown_field_2();
}
inline void InfoOptions::_internal_set_unknown_field_2(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unknown_field_2_ = value;
}
inline void InfoOptions::set_unknown_field_2(int64_t value) {
  _internal_set_unknown_field_2(value);
  // @@protoc_insertion_point(field_set:openfoxwq.InfoOptions.unknown_field_2)
}

// -------------------------------------------------------------------

// SyncTimeRequest

// required int64 unix_ts = 1;
inline bool SyncTimeRequest::_internal_has_unix_ts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncTimeRequest::has_unix_ts() const {
  return _internal_has_unix_ts();
}
inline void SyncTimeRequest::clear_unix_ts() {
  _impl_.unix_ts_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t SyncTimeRequest::_internal_unix_ts() const {
  return _impl_.unix_ts_;
}
inline int64_t SyncTimeRequest::unix_ts() const {
  // @@protoc_insertion_point(field_get:openfoxwq.SyncTimeRequest.unix_ts)
  return _internal_unix_ts();
}
inline void SyncTimeRequest::_internal_set_unix_ts(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unix_ts_ = value;
}
inline void SyncTimeRequest::set_unix_ts(int64_t value) {
  _internal_set_unix_ts(value);
  // @@protoc_insertion_point(field_set:openfoxwq.SyncTimeRequest.unix_ts)
}

// -------------------------------------------------------------------

// SyncTimeResponse

// required int64 unix_ts = 1;
inline bool SyncTimeResponse::_internal_has_unix_ts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncTimeResponse::has_unix_ts() const {
  return _internal_has_unix_ts();
}
inline void SyncTimeResponse::clear_unix_ts() {
  _impl_.unix_ts_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t SyncTimeResponse::_internal_unix_ts() const {
  return _impl_.unix_ts_;
}
inline int64_t SyncTimeResponse::unix_ts() const {
  // @@protoc_insertion_point(field_get:openfoxwq.SyncTimeResponse.unix_ts)
  return _internal_unix_ts();
}
inline void SyncTimeResponse::_internal_set_unix_ts(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unix_ts_ = value;
}
inline void SyncTimeResponse::set_unix_ts(int64_t value) {
  _internal_set_unix_ts(value);
  // @@protoc_insertion_point(field_set:openfoxwq.SyncTimeResponse.unix_ts)
}

// required int64 unix_ts_us = 2;
inline bool SyncTimeResponse::_internal_has_unix_ts_us() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SyncTimeResponse::has_unix_ts_us() const {
  return _internal_has_unix_ts_us();
}
inline void SyncTimeResponse::clear_unix_ts_us() {
  _impl_.unix_ts_us_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t SyncTimeResponse::_internal_unix_ts_us() const {
  return _impl_.unix_ts_us_;
}
inline int64_t SyncTimeResponse::unix_ts_us() const {
  // @@protoc_insertion_point(field_get:openfoxwq.SyncTimeResponse.unix_ts_us)
  return _internal_unix_ts_us();
}
inline void SyncTimeResponse::_internal_set_unix_ts_us(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unix_ts_us_ = value;
}
inline void SyncTimeResponse::set_unix_ts_us(int64_t value) {
  _internal_set_unix_ts_us(value);
  // @@protoc_insertion_point(field_set:openfoxwq.SyncTimeResponse.unix_ts_us)
}

// -------------------------------------------------------------------

// SyncPlayersRequest

// required int64 unknown_field_1 = 1;
inline bool SyncPlayersRequest::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncPlayersRequest::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void SyncPlayersRequest::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t SyncPlayersRequest::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t SyncPlayersRequest::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.SyncPlayersRequest.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void SyncPlayersRequest::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void SyncPlayersRequest::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.SyncPlayersRequest.unknown_field_1)
}

// -------------------------------------------------------------------

// SyncPlayersResponse

// required int64 unknown_field_1 = 1;
inline bool SyncPlayersResponse::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncPlayersResponse::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void SyncPlayersResponse::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t SyncPlayersResponse::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t SyncPlayersResponse::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.SyncPlayersResponse.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void SyncPlayersResponse::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void SyncPlayersResponse::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.SyncPlayersResponse.unknown_field_1)
}

// required int64 unknown_field_2 = 2;
inline bool SyncPlayersResponse::_internal_has_unknown_field_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SyncPlayersResponse::has_unknown_field_2() const {
  return _internal_has_unknown_field_2();
}
inline void SyncPlayersResponse::clear_unknown_field_2() {
  _impl_.unknown_field_2_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t SyncPlayersResponse::_internal_unknown_field_2() const {
  return _impl_.unknown_field_2_;
}
inline int64_t SyncPlayersResponse::unknown_field_2() const {
  // @@protoc_insertion_point(field_get:openfoxwq.SyncPlayersResponse.unknown_field_2)
  return _internal_unknown_field_2();
}
inline void SyncPlayersResponse::_internal_set_unknown_field_2(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unknown_field_2_ = value;
}
inline void SyncPlayersResponse::set_unknown_field_2(int64_t value) {
  _internal_set_unknown_field_2(value);
  // @@protoc_insertion_point(field_set:openfoxwq.SyncPlayersResponse.unknown_field_2)
}

// -------------------------------------------------------------------

// PlayerStateEvent

// required .openfoxwq.PlayerInfo player_info = 1;
inline bool PlayerStateEvent::_internal_has_player_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.player_info_ != nullptr);
  return value;
}
inline bool PlayerStateEvent::has_player_info() const {
  return _internal_has_player_info();
}
inline const ::openfoxwq::PlayerInfo& PlayerStateEvent::_internal_player_info() const {
  const ::openfoxwq::PlayerInfo* p = _impl_.player_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::openfoxwq::PlayerInfo&>(
      ::openfoxwq::_PlayerInfo_default_instance_);
}
inline const ::openfoxwq::PlayerInfo& PlayerStateEvent::player_info() const {
  // @@protoc_insertion_point(field_get:openfoxwq.PlayerStateEvent.player_info)
  return _internal_player_info();
}
inline void PlayerStateEvent::unsafe_arena_set_allocated_player_info(
    ::openfoxwq::PlayerInfo* player_info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.player_info_);
  }
  _impl_.player_info_ = player_info;
  if (player_info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openfoxwq.PlayerStateEvent.player_info)
}
inline ::openfoxwq::PlayerInfo* PlayerStateEvent::release_player_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::PlayerInfo* temp = _impl_.player_info_;
  _impl_.player_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::openfoxwq::PlayerInfo* PlayerStateEvent::unsafe_arena_release_player_info() {
  // @@protoc_insertion_point(field_release:openfoxwq.PlayerStateEvent.player_info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::PlayerInfo* temp = _impl_.player_info_;
  _impl_.player_info_ = nullptr;
  return temp;
}
inline ::openfoxwq::PlayerInfo* PlayerStateEvent::_internal_mutable_player_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.player_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::openfoxwq::PlayerInfo>(GetArenaForAllocation());
    _impl_.player_info_ = p;
  }
  return _impl_.player_info_;
}
inline ::openfoxwq::PlayerInfo* PlayerStateEvent::mutable_player_info() {
  ::openfoxwq::PlayerInfo* _msg = _internal_mutable_player_info();
  // @@protoc_insertion_point(field_mutable:openfoxwq.PlayerStateEvent.player_info)
  return _msg;
}
inline void PlayerStateEvent::set_allocated_player_info(::openfoxwq::PlayerInfo* player_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.player_info_);
  }
  if (player_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_info));
    if (message_arena != submessage_arena) {
      player_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player_info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.player_info_ = player_info;
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.PlayerStateEvent.player_info)
}

// required int64 online_count = 2;
inline bool PlayerStateEvent::_internal_has_online_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PlayerStateEvent::has_online_count() const {
  return _internal_has_online_count();
}
inline void PlayerStateEvent::clear_online_count() {
  _impl_.online_count_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t PlayerStateEvent::_internal_online_count() const {
  return _impl_.online_count_;
}
inline int64_t PlayerStateEvent::online_count() const {
  // @@protoc_insertion_point(field_get:openfoxwq.PlayerStateEvent.online_count)
  return _internal_online_count();
}
inline void PlayerStateEvent::_internal_set_online_count(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.online_count_ = value;
}
inline void PlayerStateEvent::set_online_count(int64_t value) {
  _internal_set_online_count(value);
  // @@protoc_insertion_point(field_set:openfoxwq.PlayerStateEvent.online_count)
}

// optional int64 unknown_field_3 = 3;
inline bool PlayerStateEvent::_internal_has_unknown_field_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PlayerStateEvent::has_unknown_field_3() const {
  return _internal_has_unknown_field_3();
}
inline void PlayerStateEvent::clear_unknown_field_3() {
  _impl_.unknown_field_3_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t PlayerStateEvent::_internal_unknown_field_3() const {
  return _impl_.unknown_field_3_;
}
inline int64_t PlayerStateEvent::unknown_field_3() const {
  // @@protoc_insertion_point(field_get:openfoxwq.PlayerStateEvent.unknown_field_3)
  return _internal_unknown_field_3();
}
inline void PlayerStateEvent::_internal_set_unknown_field_3(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.unknown_field_3_ = value;
}
inline void PlayerStateEvent::set_unknown_field_3(int64_t value) {
  _internal_set_unknown_field_3(value);
  // @@protoc_insertion_point(field_set:openfoxwq.PlayerStateEvent.unknown_field_3)
}

// -------------------------------------------------------------------

// UnknownPlayerEvent1

// required int64 player_id = 1;
inline bool UnknownPlayerEvent1::_internal_has_player_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnknownPlayerEvent1::has_player_id() const {
  return _internal_has_player_id();
}
inline void UnknownPlayerEvent1::clear_player_id() {
  _impl_.player_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t UnknownPlayerEvent1::_internal_player_id() const {
  return _impl_.player_id_;
}
inline int64_t UnknownPlayerEvent1::player_id() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayerEvent1.player_id)
  return _internal_player_id();
}
inline void UnknownPlayerEvent1::_internal_set_player_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.player_id_ = value;
}
inline void UnknownPlayerEvent1::set_player_id(int64_t value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:openfoxwq.UnknownPlayerEvent1.player_id)
}

// required int64 online_count = 2;
inline bool UnknownPlayerEvent1::_internal_has_online_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UnknownPlayerEvent1::has_online_count() const {
  return _internal_has_online_count();
}
inline void UnknownPlayerEvent1::clear_online_count() {
  _impl_.online_count_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t UnknownPlayerEvent1::_internal_online_count() const {
  return _impl_.online_count_;
}
inline int64_t UnknownPlayerEvent1::online_count() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayerEvent1.online_count)
  return _internal_online_count();
}
inline void UnknownPlayerEvent1::_internal_set_online_count(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.online_count_ = value;
}
inline void UnknownPlayerEvent1::set_online_count(int64_t value) {
  _internal_set_online_count(value);
  // @@protoc_insertion_point(field_set:openfoxwq.UnknownPlayerEvent1.online_count)
}

// optional int64 unknown_field_3 = 3;
inline bool UnknownPlayerEvent1::_internal_has_unknown_field_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UnknownPlayerEvent1::has_unknown_field_3() const {
  return _internal_has_unknown_field_3();
}
inline void UnknownPlayerEvent1::clear_unknown_field_3() {
  _impl_.unknown_field_3_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t UnknownPlayerEvent1::_internal_unknown_field_3() const {
  return _impl_.unknown_field_3_;
}
inline int64_t UnknownPlayerEvent1::unknown_field_3() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayerEvent1.unknown_field_3)
  return _internal_unknown_field_3();
}
inline void UnknownPlayerEvent1::_internal_set_unknown_field_3(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.unknown_field_3_ = value;
}
inline void UnknownPlayerEvent1::set_unknown_field_3(int64_t value) {
  _internal_set_unknown_field_3(value);
  // @@protoc_insertion_point(field_set:openfoxwq.UnknownPlayerEvent1.unknown_field_3)
}

// -------------------------------------------------------------------

// UnknownPlayRequest1_UnknownPlayRequest1Nested1

// required string unknown_field_1 = 1;
inline bool UnknownPlayRequest1_UnknownPlayRequest1Nested1::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnknownPlayRequest1_UnknownPlayRequest1Nested1::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void UnknownPlayRequest1_UnknownPlayRequest1Nested1::clear_unknown_field_1() {
  _impl_.unknown_field_1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UnknownPlayRequest1_UnknownPlayRequest1Nested1::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1.unknown_field_1)
  return _internal_unknown_field_1();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UnknownPlayRequest1_UnknownPlayRequest1Nested1::set_unknown_field_1(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.unknown_field_1_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1.unknown_field_1)
}
inline std::string* UnknownPlayRequest1_UnknownPlayRequest1Nested1::mutable_unknown_field_1() {
  std::string* _s = _internal_mutable_unknown_field_1();
  // @@protoc_insertion_point(field_mutable:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1.unknown_field_1)
  return _s;
}
inline const std::string& UnknownPlayRequest1_UnknownPlayRequest1Nested1::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_.Get();
}
inline void UnknownPlayRequest1_UnknownPlayRequest1Nested1::_internal_set_unknown_field_1(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_.Set(value, GetArenaForAllocation());
}
inline std::string* UnknownPlayRequest1_UnknownPlayRequest1Nested1::_internal_mutable_unknown_field_1() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.unknown_field_1_.Mutable(GetArenaForAllocation());
}
inline std::string* UnknownPlayRequest1_UnknownPlayRequest1Nested1::release_unknown_field_1() {
  // @@protoc_insertion_point(field_release:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1.unknown_field_1)
  if (!_internal_has_unknown_field_1()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.unknown_field_1_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.unknown_field_1_.IsDefault()) {
    _impl_.unknown_field_1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void UnknownPlayRequest1_UnknownPlayRequest1Nested1::set_allocated_unknown_field_1(std::string* unknown_field_1) {
  if (unknown_field_1 != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.unknown_field_1_.SetAllocated(unknown_field_1, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.unknown_field_1_.IsDefault()) {
    _impl_.unknown_field_1_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1.unknown_field_1)
}

// -------------------------------------------------------------------

// UnknownPlayRequest1

// required .openfoxwq.UnknownPlayRequest1.UnknownPlayRequest1Nested1 unknown_field_1 = 1;
inline bool UnknownPlayRequest1::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unknown_field_1_ != nullptr);
  return value;
}
inline bool UnknownPlayRequest1::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void UnknownPlayRequest1::clear_unknown_field_1() {
  if (_impl_.unknown_field_1_ != nullptr) _impl_.unknown_field_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1& UnknownPlayRequest1::_internal_unknown_field_1() const {
  const ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* p = _impl_.unknown_field_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1&>(
      ::openfoxwq::_UnknownPlayRequest1_UnknownPlayRequest1Nested1_default_instance_);
}
inline const ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1& UnknownPlayRequest1::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayRequest1.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void UnknownPlayRequest1::unsafe_arena_set_allocated_unknown_field_1(
    ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* unknown_field_1) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.unknown_field_1_);
  }
  _impl_.unknown_field_1_ = unknown_field_1;
  if (unknown_field_1) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:openfoxwq.UnknownPlayRequest1.unknown_field_1)
}
inline ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* UnknownPlayRequest1::release_unknown_field_1() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* temp = _impl_.unknown_field_1_;
  _impl_.unknown_field_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* UnknownPlayRequest1::unsafe_arena_release_unknown_field_1() {
  // @@protoc_insertion_point(field_release:openfoxwq.UnknownPlayRequest1.unknown_field_1)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* temp = _impl_.unknown_field_1_;
  _impl_.unknown_field_1_ = nullptr;
  return temp;
}
inline ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* UnknownPlayRequest1::_internal_mutable_unknown_field_1() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.unknown_field_1_ == nullptr) {
    auto* p = CreateMaybeMessage<::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1>(GetArenaForAllocation());
    _impl_.unknown_field_1_ = p;
  }
  return _impl_.unknown_field_1_;
}
inline ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* UnknownPlayRequest1::mutable_unknown_field_1() {
  ::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* _msg = _internal_mutable_unknown_field_1();
  // @@protoc_insertion_point(field_mutable:openfoxwq.UnknownPlayRequest1.unknown_field_1)
  return _msg;
}
inline void UnknownPlayRequest1::set_allocated_unknown_field_1(::openfoxwq::UnknownPlayRequest1_UnknownPlayRequest1Nested1* unknown_field_1) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.unknown_field_1_;
  }
  if (unknown_field_1) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(unknown_field_1);
    if (message_arena != submessage_arena) {
      unknown_field_1 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown_field_1, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.unknown_field_1_ = unknown_field_1;
  // @@protoc_insertion_point(field_set_allocated:openfoxwq.UnknownPlayRequest1.unknown_field_1)
}

// required int64 unknown_field_2 = 2;
inline bool UnknownPlayRequest1::_internal_has_unknown_field_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UnknownPlayRequest1::has_unknown_field_2() const {
  return _internal_has_unknown_field_2();
}
inline void UnknownPlayRequest1::clear_unknown_field_2() {
  _impl_.unknown_field_2_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t UnknownPlayRequest1::_internal_unknown_field_2() const {
  return _impl_.unknown_field_2_;
}
inline int64_t UnknownPlayRequest1::unknown_field_2() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayRequest1.unknown_field_2)
  return _internal_unknown_field_2();
}
inline void UnknownPlayRequest1::_internal_set_unknown_field_2(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.unknown_field_2_ = value;
}
inline void UnknownPlayRequest1::set_unknown_field_2(int64_t value) {
  _internal_set_unknown_field_2(value);
  // @@protoc_insertion_point(field_set:openfoxwq.UnknownPlayRequest1.unknown_field_2)
}

// -------------------------------------------------------------------

// UnknownPlayResponse1

// optional int64 unknown_field_1 = 1;
inline bool UnknownPlayResponse1::_internal_has_unknown_field_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnknownPlayResponse1::has_unknown_field_1() const {
  return _internal_has_unknown_field_1();
}
inline void UnknownPlayResponse1::clear_unknown_field_1() {
  _impl_.unknown_field_1_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t UnknownPlayResponse1::_internal_unknown_field_1() const {
  return _impl_.unknown_field_1_;
}
inline int64_t UnknownPlayResponse1::unknown_field_1() const {
  // @@protoc_insertion_point(field_get:openfoxwq.UnknownPlayResponse1.unknown_field_1)
  return _internal_unknown_field_1();
}
inline void UnknownPlayResponse1::_internal_set_unknown_field_1(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.unknown_field_1_ = value;
}
inline void UnknownPlayResponse1::set_unknown_field_1(int64_t value) {
  _internal_set_unknown_field_1(value);
  // @@protoc_insertion_point(field_set:openfoxwq.UnknownPlayResponse1.unknown_field_1)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openfoxwq

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_2fplay_2eproto
